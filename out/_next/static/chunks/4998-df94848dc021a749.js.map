{"version":3,"file":"static/chunks/4998-df94848dc021a749.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/replace.js","webpack://_N_E/./packages/uikit/src/components/Button/ExpandableButton.tsx","webpack://_N_E/./packages/uikit/src/components/Image/TokenImage.tsx","webpack://_N_E/./packages/uikit/src/components/Image/styles.tsx","webpack://_N_E/./packages/uikit/src/components/Image/types.ts","webpack://_N_E/./packages/uikit/src/components/Image/TokenPairImage.tsx","webpack://_N_E/./packages/uikit/src/components/NotificationDot/NotificationDot.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Add.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ArrowDown.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ArrowUp.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Calculate.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Checkmark.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Community.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Minus.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Timer.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Verified.tsx","webpack://_N_E/./packages/uikit/src/components/Tag/theme.ts","webpack://_N_E/./packages/uikit/src/components/Tag/types.ts","webpack://_N_E/./packages/uikit/src/components/Tag/StyledTag.tsx","webpack://_N_E/./packages/uikit/src/components/Tag/Tag.tsx","webpack://_N_E/./packages/uikit/src/components/Text/TooltipText.tsx","webpack://_N_E/./src/components/Balance.tsx","webpack://_N_E/./src/components/Layout/Flex.tsx","webpack://_N_E/./src/components/Loading.tsx","webpack://_N_E/./src/components/PageHeader/PageHeader.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/RoiCalculatorFooter.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Pencil.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/RoiCard.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/AnimatedArrow.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/index.tsx","webpack://_N_E/./src/components/RoiCalculatorModal/useRoiCalculatorReducer.ts","webpack://_N_E/./src/components/SearchInput/SearchInput.tsx","webpack://_N_E/./src/components/Select/Select.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Vote.tsx","webpack://_N_E/./src/components/Tags.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/CardView.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ListView.tsx","webpack://_N_E/./src/components/ToggleView/ToggleView.tsx","webpack://_N_E/./src/components/TokenImage/index.tsx","webpack://_N_E/./src/hooks/useDelayedUnmount.ts","webpack://_N_E/./src/hooks/useIntersectionObserver.ts","webpack://_N_E/./src/utils/compoundApyHelpers.ts","webpack://_N_E/./src/utils/getGasPrice.ts","webpack://_N_E/./src/utils/isUndefinedOrNull.ts","webpack://_N_E/./src/utils/latinise.ts"],"sourcesContent":["var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n","import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\nimport Button from \"./Button\";\nimport IconButton from \"./IconButton\";\n\ninterface Props {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nexport const ExpandableButton: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <IconButton aria-label=\"Hide or show expandable content\" onClick={onClick}>\n      {children}\n      {expanded ? <ChevronUpIcon color=\"invertedContrast\" /> : <ChevronDownIcon color=\"invertedContrast\" />}\n    </IconButton>\n  );\n};\nExpandableButton.defaultProps = {\n  expanded: false,\n};\n\nexport const ExpandableLabel: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <Button\n      variant=\"text\"\n      aria-label=\"Hide or show expandable content\"\n      onClick={onClick}\n      endIcon={expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\n    >\n      {children}\n    </Button>\n  );\n};\nExpandableLabel.defaultProps = {\n  expanded: false,\n};\n","import styled from \"styled-components\";\nimport Image from \"./Image\";\n\nconst TokenImage = styled(Image)`\n  &:before {\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    content: \"\";\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 7;\n  }\n`;\n\nexport default TokenImage;\n","import styled from \"styled-components\";\nimport { variant as StyledSystemVariant } from \"styled-system\";\nimport { ImageProps, Variant, variants } from \"./types\";\nimport TokenImage from \"./TokenImage\";\n\ninterface StyledImageProps extends ImageProps {\n  variant: Variant;\n}\n\nexport const StyledPrimaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: ${({ variant }) =>\n    variant === variants.DEFAULT ? \"92%\" : \"82%\"}; // 92, 82 are arbitrary numbers to fit the variant\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: \"auto\",\n        left: 0,\n        right: \"auto\",\n        top: 0,\n        zIndex: 5,\n      },\n      [variants.INVERTED]: {\n        bottom: 0,\n        left: \"auto\",\n        right: 0,\n        top: \"auto\",\n        zIndex: 6,\n      },\n    },\n  })}\n`;\n\nexport const StyledSecondaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: 50%;\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: 0,\n        left: \"auto\",\n        right: 0,\n        top: \"auto\",\n        zIndex: 6,\n      },\n      [variants.INVERTED]: {\n        bottom: \"auto\",\n        left: 0,\n        right: \"auto\",\n        top: 0,\n        zIndex: 5,\n      },\n    },\n  })}\n`;\n","import { HTMLAttributes, ImgHTMLAttributes, ReactElement } from \"react\";\nimport { SpaceProps } from \"styled-system\";\nimport { BoxProps } from \"../Box\";\n\nexport interface WrapperProps extends SpaceProps, HTMLAttributes<HTMLDivElement> {\n  width: number;\n  height: number;\n}\n\nexport interface ImageProps extends ImgHTMLAttributes<HTMLImageElement>, SpaceProps {\n  width: number;\n  height: number;\n  wrapperProps?: WrapperProps;\n}\n\nexport interface BackgroundImageProps extends ImageProps {\n  loadingPlaceholder?: ReactElement;\n}\n\nexport const variants = {\n  DEFAULT: \"default\",\n  INVERTED: \"inverted\",\n} as const;\n\nexport type Variant = typeof variants[keyof typeof variants];\n\nexport interface TokenPairImageProps extends BoxProps {\n  primarySrc: string;\n  secondarySrc: string;\n  variant?: Variant;\n  height: number;\n  width: number;\n  primaryImageProps?: Omit<ImageProps, \"width\" | \"height\">;\n  secondaryImageProps?: Omit<ImageProps, \"width\" | \"height\">;\n}\n","import React from \"react\";\nimport { TokenPairImageProps, variants } from \"./types\";\nimport { StyledPrimaryImage, StyledSecondaryImage } from \"./styles\";\nimport Wrapper from \"./Wrapper\";\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({\n  primarySrc,\n  secondarySrc,\n  width,\n  height,\n  variant = variants.DEFAULT,\n  primaryImageProps = {},\n  secondaryImageProps = {},\n  ...props\n}) => {\n  const secondaryImageSize = Math.floor(width / 2);\n\n  return (\n    <Wrapper position=\"relative\" width={width} height={height} {...props}>\n      <StyledPrimaryImage variant={variant} src={primarySrc} width={width} height={height} {...primaryImageProps} />\n      <StyledSecondaryImage\n        variant={variant}\n        src={secondarySrc}\n        width={secondaryImageSize}\n        height={secondaryImageSize}\n        {...secondaryImageProps}\n      />\n    </Wrapper>\n  );\n};\n\nexport default TokenPairImage;\n","import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { NotificationDotProps, DotProps } from \"./types\";\n\nconst NotificationDotRoot = styled.span`\n  display: inline-flex;\n  position: relative;\n`;\n\nconst Dot = styled.span<DotProps>`\n  display: ${({ show }) => (show ? \"inline-flex\" : \"none\")};\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  pointer-events: none;\n  border: 2px solid ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 50%;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n`;\n\nconst NotificationDot: React.FC<NotificationDotProps> = ({ show = false, color = \"failure\", children, ...props }) => (\n  <NotificationDotRoot>\n    {Children.map(children, (child: ReactElement) => cloneElement(child, props))}\n    <Dot show={show} color={color} />\n  </NotificationDotRoot>\n);\n\nexport default NotificationDot;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M11 5V16.17L6.11997 11.29C5.72997 10.9 5.08997 10.9 4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7L11.29 19.29C11.68 19.68 12.31 19.68 12.7 19.29L19.29 12.7C19.68 12.31 19.68 11.68 19.29 11.29C18.9 10.9 18.27 10.9 17.88 11.29L13 16.17V5C13 4.45 12.55 4 12 4C11.45 4 11 4.45 11 5Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 19V7.83001L17.88 12.71C18.27 13.1 18.91 13.1 19.3 12.71C19.69 12.32 19.69 11.69 19.3 11.3L12.71 4.71001C12.32 4.32001 11.69 4.32001 11.3 4.71001L4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7C5.08997 13.09 5.71997 13.09 6.10997 12.7L11 7.83001V19C11 19.55 11.45 20 12 20C12.55 20 13 19.55 13 19Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z\" />\n      <path d=\"M11.25 7.72H6.25V9.22H11.25V7.72Z\" />\n      <path d=\"M18 15.75H13V17.25H18V15.75Z\" />\n      <path d=\"M18 13.25H13V14.75H18V13.25Z\" />\n      <path d=\"M8 18H9.5V16H11.5V14.5H9.5V12.5H8V14.5H6V16H8V18Z\" />\n      <path d=\"M14.09 10.95L15.5 9.54L16.91 10.95L17.97 9.89L16.56 8.47L17.97 7.06L16.91 6L15.5 7.41L14.09 6L13.03 7.06L14.44 8.47L13.03 9.89L14.09 10.95Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.00012 16.2L5.50012 12.7C5.11012 12.31 4.49012 12.31 4.10012 12.7C3.71012 13.09 3.71012 13.71 4.10012 14.1L8.29012 18.29C8.68012 18.68 9.31012 18.68 9.70012 18.29L20.3001 7.70001C20.6901 7.31001 20.6901 6.69001 20.3001 6.30001C19.9101 5.91001 19.2901 5.91001 18.9001 6.30001L9.00012 16.2Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.5523 0.447715 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.5523 18 24 17.5523 24 17V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M15.0701 1.01H9.07007V3.01H15.0701V1.01ZM11.0701 14.01H13.0701V8.01H11.0701V14.01ZM19.1001 7.39L20.5201 5.97C20.0901 5.46 19.6201 4.98 19.1101 4.56L17.6901 5.98C16.1401 4.74 14.1901 4 12.0701 4C7.10007 4 3.07007 8.03 3.07007 13C3.07007 17.97 7.09007 22 12.0701 22C17.0501 22 21.0701 17.97 21.0701 13C21.0701 10.89 20.3301 8.94 19.1001 7.39ZM12.0701 20.01C8.20007 20.01 5.07007 16.88 5.07007 13.01C5.07007 9.14 8.20007 6.01 12.0701 6.01C15.9401 6.01 19.0701 9.14 19.0701 13.01C19.0701 16.88 15.9401 20.01 12.0701 20.01Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M23 12L20.56 9.21L20.9 5.52L17.29 4.7L15.4 1.5L12 2.96L8.6 1.5L6.71 4.69L3.1 5.5L3.44 9.2L1 12L3.44 14.79L3.1 18.49L6.71 19.31L8.6 22.5L12 21.03L15.4 22.49L17.29 19.3L20.9 18.48L20.56 14.79L23 12ZM9.38 16.01L7 13.61C6.61 13.22 6.61 12.59 7 12.2L7.07 12.13C7.46 11.74 8.1 11.74 8.49 12.13L10.1 13.75L15.25 8.59C15.64 8.2 16.28 8.2 16.67 8.59L16.74 8.66C17.13 9.05 17.13 9.68 16.74 10.07L10.82 16.01C10.41 16.4 9.78 16.4 9.38 16.01Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { scales, variants } from \"./types\";\n\nexport const scaleVariants = {\n  [scales.MD]: {\n    height: \"28px\",\n    padding: \"0 8px\",\n    fontSize: \"14px\",\n  },\n  [scales.SM]: {\n    height: \"24px\",\n    padding: \"0 4px\",\n    fontSize: \"12px\",\n  },\n};\n\nexport const styleVariants = {\n  [variants.PRIMARY]: {\n    backgroundColor: \"primary\",\n  },\n  [variants.SECONDARY]: {\n    backgroundColor: \"secondary\",\n  },\n  [variants.SUCCESS]: {\n    backgroundColor: \"success\",\n  },\n  [variants.TEXTDISABLED]: {\n    backgroundColor: \"textDisabled\",\n  },\n  [variants.TEXTSUBTLE]: {\n    backgroundColor: \"textSubtle\",\n  },\n  [variants.BINANCE]: {\n    backgroundColor: \"binance\",\n  },\n  [variants.FAILURE]: {\n    backgroundColor: \"failure\",\n  },\n  [variants.WARNING]: {\n    backgroundColor: \"warning\",\n  },\n};\n","import { ReactNode } from \"react\";\nimport { SpaceProps, TypographyProps } from \"styled-system\";\n\nexport const variants = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  SUCCESS: \"success\",\n  TEXTDISABLED: \"textDisabled\",\n  TEXTSUBTLE: \"textSubtle\",\n  BINANCE: \"binance\",\n  FAILURE: \"failure\",\n  WARNING: \"warning\",\n} as const;\n\nexport const scales = {\n  MD: \"md\",\n  SM: \"sm\",\n} as const;\n\nexport type Scale = typeof scales[keyof typeof scales];\nexport type Variant = typeof variants[keyof typeof variants];\n\nexport interface TagProps extends SpaceProps, TypographyProps {\n  variant?: Variant;\n  scale?: Scale;\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  outline?: boolean;\n  textTransform?: \"uppercase\" | \"lowercase\" | \"capitalize\";\n}\n","import styled, { DefaultTheme } from \"styled-components\";\nimport { space, variant, typography } from \"styled-system\";\nimport { Colors } from \"../../theme/types\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { TagProps, variants } from \"./types\";\n\ninterface ThemedProps extends TagProps {\n  theme: DefaultTheme;\n}\n\nconst getOutlineStyles = ({ outline, theme, variant: variantKey = variants.PRIMARY }: ThemedProps) => {\n  if (outline) {\n    const themeColorKey = styleVariants[variantKey].backgroundColor as keyof Colors;\n    const color = theme.colors[themeColorKey];\n\n    return `\n      color: ${color};\n      background: ${theme.colors.background};\n      border: 2px solid ${color};\n    `;\n  }\n\n  return \"\";\n};\n\nexport const StyledTag = styled.div<ThemedProps>`\n  align-items: center;\n  border-radius: 16px;\n  color: #ffffff;\n  display: inline-flex;\n  font-weight: 400;\n  white-space: nowrap;\n\n  & > svg {\n    fill: currentColor;\n  }\n\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\n\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${space}\n  ${typography}\n\n  ${getOutlineStyles}\n`;\n\nexport default null;\n","import React from \"react\";\nimport { scales, TagProps } from \"./types\";\nimport { StyledTag } from \"./StyledTag\";\n\nconst Tag: React.FC<TagProps> = ({ startIcon, endIcon, children, ...props }) => (\n  <StyledTag {...props}>\n    {React.isValidElement(startIcon) &&\n      React.cloneElement(startIcon, {\n        mr: \"0.5em\",\n      })}\n    {children}\n    {React.isValidElement(endIcon) &&\n      React.cloneElement(endIcon, {\n        ml: \"0.5em\",\n      })}\n  </StyledTag>\n);\n\n/* eslint-disable react/default-props-match-prop-types */\nTag.defaultProps = {\n  variant: \"primary\",\n  scale: scales.MD,\n  outline: false,\n};\n\nexport default Tag;\n","import styled from \"styled-components\";\nimport Text from \"./Text\";\n\nconst TooltipText = styled(Text)`\n  text-decoration: ${({ theme }) => `underline dotted ${theme.colors.textSubtle}`};\n  text-underline-offset: 0.1em;\n`;\n\nexport default TooltipText;\n","import { Text, TextProps, Skeleton } from '@pancakeswap/uikit'\nimport { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled, { keyframes } from 'styled-components'\nimport isUndefinedOrNull from 'utils/isUndefinedOrNull'\nimport _toNumber from 'lodash/toNumber'\nimport _isNaN from 'lodash/isNaN'\nimport _replace from 'lodash/replace'\nimport _toString from 'lodash/toString'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport const BalanceWithLoading: React.FC<Omit<BalanceProps, 'value'> & { value: string | number }> = ({\n  value,\n  fontSize,\n  ...props\n}) => {\n  if (isUndefinedOrNull(value)) {\n    return <Skeleton />\n  }\n\n  const trimedValue = _replace(_toString(value), /,/g, '')\n\n  const finalValue = _isNaN(trimedValue) || _isNaN(_toNumber(trimedValue)) ? 0 : _toNumber(trimedValue)\n\n  return <Balance {...props} value={finalValue} fontSize={fontSize} />\n}\n\nconst appear = keyframes`\n  from {\n    opacity:0;\n  }\n  \n  to {\n    opacity:1;\n  }\n  `\n\nexport const AnimatedBalance = styled(Balance)`\n  animation: ${appear} 0.65s ease-in-out forwards;\n`\n\nexport default Balance\n","import { Flex, FlexProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport interface FlexGapProps extends FlexProps {\n  gap?: string\n  rowGap?: string\n  columnGap?: string\n}\n\nexport const FlexGap = styled(Flex)<FlexGapProps>`\n  gap: ${({ gap }) => gap};\n  row-gap: ${({ rowGap }) => rowGap};\n  column-gap: ${({ columnGap }) => columnGap};\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr?: number\n  apy?: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  apy,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            {!Number.isFinite(apy) ? (\n              <Text color=\"textSubtle\" small>\n                {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n              </Text>\n            ) : (\n              <Text color=\"textSubtle\" small>\n                {t('APY')}\n              </Text>\n            )}\n            <Text small textAlign=\"right\">\n              {(apy ?? apr).toFixed(2)}%\n            </Text>\n            {!Number.isFinite(apy) && (\n              <Text color=\"textSubtle\" small>\n                {t('APY (%compoundTimes%x daily compound)', {\n                  compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n                })}\n              </Text>\n            )}\n            {!Number.isFinite(apy) && (\n              <Text small textAlign=\"right\">\n                {(\n                  getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100\n                ).toFixed(2)}\n                %\n              </Text>\n            )}\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 19 19\" {...props}>\n      <path d=\"M0 15.46V18.5C0 18.78 0.22 19 0.5 19H3.54C3.67 19 3.8 18.95 3.89 18.85L14.81 7.94L11.06 4.19L0.15 15.1C0.0500001 15.2 0 15.32 0 15.46ZM17.71 5.04C18.1 4.65 18.1 4.02 17.71 3.63L15.37 1.29C14.98 0.899998 14.35 0.899998 13.96 1.29L12.13 3.12L15.88 6.87L17.71 5.04Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { useRef, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const [expectedRoi, setExpectedRoi] = useState('')\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n    setExpectedRoi(\n      roiUSD.toLocaleString('en', {\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n      }),\n    )\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const roiAsString = event.target.value.replace(/,/g, '.')\n      setTargetRoi(roiAsString)\n      setExpectedRoi(roiAsString)\n    }\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\n                  scale=\"sm\"\n                  value={expectedRoi}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import { useRef, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, {\n  CalculatorMode,\n  DefaultCompoundStrategy,\n  EditingCurrency,\n} from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\nexport interface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr?: number\n  apy?: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialState?: any\n  initialValue?: string\n  strategy?: any\n  header?: React.ReactNode\n}\n\nconst StyledModal = styled(Modal)`\n  width: 380px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  apy,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n  initialState,\n  strategy,\n  header,\n  children,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  } = useRoiCalculatorReducer({ stakingTokenPrice, earningTokenPrice, autoCompoundFrequency }, initialState)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  const DURATION = useMemo(() => [t('1D'), t('7D'), t('30D'), t('1Y'), t('5Y')], [t])\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        {strategy ? (\n          strategy(state, dispatch)\n        ) : (\n          <DefaultCompoundStrategy\n            apr={apy ?? apr}\n            dispatch={dispatch}\n            state={state}\n            earningTokenPrice={earningTokenPrice}\n            performanceFee={performanceFee}\n            stakingTokenPrice={stakingTokenPrice}\n          />\n        )}\n        {header}\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            inputProps={{\n              scale: 'sm',\n            }}\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={\n                !Number.isFinite(stakingTokenPrice) ||\n                !stakingTokenBalance.isFinite() ||\n                stakingTokenBalance.lte(0) ||\n                !account\n              }\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          {children || (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Staked for')}\n              </Text>\n              <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n                {DURATION.map((duration) => (\n                  <ButtonMenuItem key={duration} variant=\"tertiary\">\n                    {duration}\n                  </ButtonMenuItem>\n                ))}\n              </FullWidthButtonMenu>\n            </>\n          )}\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        apy={apy}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport merge from 'lodash/merge'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst defaultState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  {\n    stakingTokenPrice,\n    earningTokenPrice,\n    autoCompoundFrequency,\n  }: {\n    stakingTokenPrice: number\n    earningTokenPrice: number\n    autoCompoundFrequency: number\n  },\n  initialState,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, merge(defaultState, initialState))\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  }\n}\n\nexport default useRoiCalculatorReducer\n\nexport function DefaultCompoundStrategy({\n  state,\n  apr,\n  earningTokenPrice,\n  stakingTokenPrice,\n  performanceFee,\n  dispatch,\n}) {\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [\n    principalAsUSD,\n    apr,\n    stakingDuration,\n    earningTokenPrice,\n    performanceFee,\n    compounding,\n    compoundingFrequency,\n    mode,\n    dispatch,\n  ])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [\n    stakingDuration,\n    apr,\n    compounding,\n    compoundingFrequency,\n    mode,\n    roiUSD,\n    stakingTokenPrice,\n    performanceFee,\n    dispatch,\n  ])\n\n  return null\n}\n","import { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  placeHolderText?: string\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  placeHolderText,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [optionSelected, setOptionSelected] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n    setOptionSelected(true)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text color={!optionSelected && placeHolderText ? 'text' : undefined}>\n          {!optionSelected && placeHolderText ? placeHolderText : options[selectedOptionIndex].label}\n        </Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            placeHolderText || index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M2 21.8966H12C12.55 21.8966 13 22.3466 13 22.8966C13 23.4466 12.55 23.8966 12 23.8966H2C1.45 23.8966 1 23.4466 1 22.8966C1 22.3466 1.45 21.8966 2 21.8966ZM5.24 8.96661L8.07 6.13661L20.8 18.8666C21.58 19.6466 21.58 20.9166 20.8 21.6966C20.02 22.4766 18.75 22.4766 17.97 21.6966L5.24 8.96661ZM13.73 3.30661L16.56 6.13661C17.34 6.91661 17.34 8.18661 16.56 8.96661L15.14 10.3866L9.49 4.72661L10.9 3.31661C11.68 2.52661 12.95 2.52661 13.73 3.30661ZM3.83 10.3766L9.49 16.0366L8.08 17.4466C7.3 18.2266 6.03 18.2266 5.25 17.4466L2.42 14.6166C1.64 13.8366 1.64 12.5666 2.42 11.7866L3.83 10.3766Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import {\n  AutoRenewIcon,\n  BlockIcon,\n  CommunityIcon,\n  RefreshIcon,\n  Tag,\n  TagProps,\n  Text,\n  TimerIcon,\n  TooltipText,\n  useTooltip,\n  VerifiedIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { memo } from 'react'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst FarmAuctionTagToolTipContent = memo(() => {\n  const { t } = useTranslation()\n  return <Text color=\"text\">{t('Farm Auction Winner, add liquidity at your own risk.')}</Text>\n})\n\nconst FarmAuctionTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<FarmAuctionTagToolTipContent />, { placement: 'right' })\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} style={{ textDecoration: 'none' }}>\n        <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n          {t('Farm Auction')}\n        </Tag>\n      </TooltipText>\n    </>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport {\n  CoreTag,\n  FarmAuctionTag,\n  DualTag,\n  ManualPoolTag,\n  CompoundingPoolTag,\n  VoteNowTag,\n  SoonTag,\n  ClosedTag,\n  CommunityTag,\n}\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 12H7.5C8.05 12 8.5 11.55 8.5 11V7C8.5 6.45 8.05 6 7.5 6H4.5C3.95 6 3.5 6.45 3.5 7V11C3.5 11.55 3.95 12 4.5 12ZM4.5 19H7.5C8.05 19 8.5 18.55 8.5 18V14C8.5 13.45 8.05 13 7.5 13H4.5C3.95 13 3.5 13.45 3.5 14V18C3.5 18.55 3.95 19 4.5 19ZM10.5 19H13.5C14.05 19 14.5 18.55 14.5 18V14C14.5 13.45 14.05 13 13.5 13H10.5C9.95 13 9.5 13.45 9.5 14V18C9.5 18.55 9.95 19 10.5 19ZM16.5 19H19.5C20.05 19 20.5 18.55 20.5 18V14C20.5 13.45 20.05 13 19.5 13H16.5C15.95 13 15.5 13.45 15.5 14V18C15.5 18.55 15.95 19 16.5 19ZM10.5 12H13.5C14.05 12 14.5 11.55 14.5 11V7C14.5 6.45 14.05 6 13.5 6H10.5C9.95 6 9.5 6.45 9.5 7V11C9.5 11.55 9.95 12 10.5 12ZM15.5 7V11C15.5 11.55 15.95 12 16.5 12H19.5C20.05 12 20.5 11.55 20.5 11V7C20.5 6.45 20.05 6 19.5 6H16.5C15.95 6 15.5 6.45 15.5 7Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 14H6.5C7.05 14 7.5 13.55 7.5 13V11C7.5 10.45 7.05 10 6.5 10H4.5C3.95 10 3.5 10.45 3.5 11V13C3.5 13.55 3.95 14 4.5 14ZM4.5 19H6.5C7.05 19 7.5 18.55 7.5 18V16C7.5 15.45 7.05 15 6.5 15H4.5C3.95 15 3.5 15.45 3.5 16V18C3.5 18.55 3.95 19 4.5 19ZM4.5 9H6.5C7.05 9 7.5 8.55 7.5 8V6C7.5 5.45 7.05 5 6.5 5H4.5C3.95 5 3.5 5.45 3.5 6V8C3.5 8.55 3.95 9 4.5 9ZM9.5 14H19.5C20.05 14 20.5 13.55 20.5 13V11C20.5 10.45 20.05 10 19.5 10H9.5C8.95 10 8.5 10.45 8.5 11V13C8.5 13.55 8.95 14 9.5 14ZM9.5 19H19.5C20.05 19 20.5 18.55 20.5 18V16C20.5 15.45 20.05 15 19.5 15H9.5C8.95 15 8.5 15.45 8.5 16V18C8.5 18.55 8.95 19 9.5 19ZM8.5 6V8C8.5 8.55 8.95 9 9.5 9H19.5C20.05 9 20.5 8.55 20.5 8V6C20.5 5.45 20.05 5 19.5 5H9.5C8.95 5 8.5 5.45 8.5 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  idPrefix: string\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ idPrefix, viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}CardView`} onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}TableView`} onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import { useLayoutEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const [observerRefElement, setObserverRefElement] = useState(null)\n  const observerRef = useRef((element) => setObserverRefElement(element))\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useLayoutEffect(() => {\n    const isSupported = typeof window === 'object' && window.IntersectionObserver\n\n    if (isSupported) {\n      if (!intersectionObserverRef.current && observerRefElement) {\n        const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n          setIsIntersecting(entry.isIntersecting)\n        }\n\n        intersectionObserverRef.current = new window.IntersectionObserver(checkObserverIsIntersecting, {\n          rootMargin: '0px',\n          threshold: 1,\n        })\n        intersectionObserverRef.current.observe(observerRefElement)\n      }\n\n      if (intersectionObserverRef.current && !observerRefElement) {\n        intersectionObserverRef.current.disconnect()\n        setIsIntersecting(false)\n      }\n    } else {\n      // If client doesnt support IntersectionObserver, set Intersecting to be true\n      setIsIntersecting(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerRefElement])\n\n  return { observerRef: observerRef.current, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { CHAIN_ID } from 'config/constants/networks'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/types'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","export default function isUndefinedOrNull(value: any): boolean {\n  return value === null || value === undefined\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n"],"names":["toString","module","exports","args","arguments","string","length","replace","ExpandableButton","onClick","expanded","children","IconButton","aria-label","ChevronUpIcon","color","ChevronDownIcon","defaultProps","ExpandableLabel","Button","variant","endIcon","TokenImage","styled","Image","variants","StyledPrimaryImage","StyledSystemVariant","bottom","left","right","top","zIndex","StyledSecondaryImage","primarySrc","secondarySrc","width","height","primaryImageProps","secondaryImageProps","props","secondaryImageSize","Math","floor","Wrapper","position","src","NotificationDotRoot","Dot","show","theme","colors","invertedContrast","Children","child","cloneElement","Svg","viewBox","path","d","scales","scaleVariants","padding","fontSize","styleVariants","backgroundColor","StyledTag","textTransform","prop","space","typography","outline","variantKey","themeColorKey","background","Tag","startIcon","React","mr","ml","scale","TooltipText","Text","textSubtle","Balance","value","decimals","isDisabled","unit","prefix","previousValue","useRef","useEffect","current","CountUp","start","end","suffix","duration","separator","BalanceWithLoading","isUndefinedOrNull","Skeleton","trimedValue","_replace","_toString","finalValue","_isNaN","_toNumber","appear","keyframes","FlexLayout","FlexGap","Flex","gap","rowGap","columnGap","Loading","Outer","Box","gradients","bubblegum","Inner","Container","Footer","dropdown","BulletList","isFarm","apr","apy","displayApr","autoCompoundFrequency","multiplier","linkLabel","linkHref","performanceFee","useState","useTranslation","t","useTooltip","my","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","gridRowCount","p","flexDirection","isExpanded","setIsExpanded","prev","px","Grid","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","Number","isFinite","toFixed","compoundTimes","getApy","justifyContent","alignItems","span","ref","multiplierRef","HelpIcon","multiplierTooltipVisible","multiplierTooltip","li","display","lineHeight","mt","fee","LinkExternal","href","MILLION","RoiCardWrapper","radii","default","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","earningTokenSymbol","calculatorState","setTargetRoi","setCalculatorMode","inputRef","data","roiUSD","roiTokens","roiPercentage","controls","mode","CalculatorMode","focus","onEnterEditing","setExpectedRoi","toLocaleString","minimumFractionDigits","maximumFractionDigits","bold","Input","type","inputMode","pattern","expectedRoi","placeholder","onChange","event","currentTarget","validity","valid","roiAsString","target","CheckmarkIcon","PencilIcon","rotate","ArrowContainer","primary","setKey","prevKey","prevId","parseInt","split","ArrowDownIcon","ArrowUpIcon","key","StyledModal","Modal","ScrollableContainer","mediaQueries","sm","FullWidthButtonMenu","ButtonMenu","disabled","onDismiss","onBack","earningTokenPrice","stakingTokenBalance","stakingTokenSymbol","stakingTokenPrice","initialValue","initialState","strategy","header","useActiveWeb3React","account","balanceInputRef","useRoiCalculatorReducer","state","setPrincipalFromUSDValue","setPrincipalFromTokenValue","setStakingDuration","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","dispatch","compounding","activeCompoundingIndex","stakingDuration","editingCurrency","principalAsUSD","principalAsToken","assetSymbol","editingUnit","EditingCurrency","editingValue","conversionUnit","conversionValue","onUserInput","DURATION","useMemo","title","headerBackground","DefaultCompoundStrategy","mb","asset","BalanceInput","inputProps","currencyValue","innerRef","switchEditingUnits","onFocus","lte","getBalanceNumber","times","toLocaleUpperCase","activeIndex","onItemClick","map","ButtonMenuItem","flex","Checkbox","checked","AnimatedArrow","RoiCard","RoiCalculatorFooter","compoundingIndexToFrequency","TOKEN","USD","ROI_BASED_ON_PRINCIPAL","PRINCIPAL_BASED_ON_ROI","defaultState","compoundingFrequency","roiCalculatorReducer","action","payload","toggledCompounding","index","parseFloat","currencyAfterChange","principalInUSDAsNumber","compoundFrequency","interestBreakdown","getInterestBreakdown","principalInUSD","hasInterest","isNaN","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","BigNumber","div","useReducer","merge","amount","principalAsTokenBN","gt","useCallback","principalAsUsdBN","principalAsUsdString","stakingDurationIndex","modeToSet","targetRoiAsTokens","toNumber","StyledInput","InputWrapper","debouncedOnChange","debounce","e","onChangeCallback","searchText","setSearchText","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","options","onOptionChange","defaultOptionIndex","placeHolderText","dropdownRef","toggling","setIsOpen","stopPropagation","handleClickOutside","document","addEventListener","removeEventListener","optionSelected","undefined","selectedOptionIndex","label","ArrowDropDownIcon","option","selectedIndex","setSelectedOptionIndex","setOptionSelected","CoreTag","VerifiedIcon","FarmAuctionTagToolTipContent","memo","FarmAuctionTag","style","textDecoration","CommunityIcon","CommunityTag","DualTag","ManualPoolTag","RefreshIcon","CompoundingPoolTag","AutoRenewIcon","VoteNowTag","VoteIcon","SoonTag","TimerIcon","ClosedTag","BlockIcon","idPrefix","viewMode","onToggle","handleToggle","id","ViewMode","CardViewIcon","ListViewIcon","getImageUrlFromToken","token","address","symbol","tokens","TokenPairImage","primaryToken","secondaryToken","UIKitTokenPairImage","UIKitTokenImage","isMounted","delayTime","timeoutId","shouldRender","setShouldRender","setTimeout","clearTimeout","observerRef","element","setObserverRefElement","intersectionObserverRef","useLayoutEffect","window","IntersectionObserver","observerRefElement","entry","setIsIntersecting","isIntersecting","rootMargin","threshold","observe","disconnect","DAYS_TO_CALCULATE_AGAINST","timesCompounded","aprAsDecimal","roundingDecimalsNew","round","days","daysAsDecimalOfYear","principal","interestEarned","interest","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","chainId","CHAIN_ID","userGas","store","user","gasPrice","GAS_PRICE_GWEI","ChainId","Latinise","latin_map","τ","Τ","latinise","x"],"sourceRoot":""}