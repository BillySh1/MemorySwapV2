{"version":3,"file":"static/chunks/2986-20fe48e699e787e0.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Svg/Icons/SwapVert.tsx","webpack://_N_E/./packages/uikit/src/components/BalanceInput/styles.tsx","webpack://_N_E/./packages/uikit/src/components/BalanceInput/BalanceInput.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/AutoRenew.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/./src/hooks/useCallWithGasPrice.ts","webpack://_N_E/./src/hooks/useCatchTxError.tsx","webpack://_N_E/./src/utils/sentry.ts"],"sourcesContent":["import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 25\" {...props}>\n      <path d=\"M16 17.01V11C16 10.45 15.55 10 15 10C14.45 10 14 10.45 14 11V17.01H12.21C11.76 17.01 11.54 17.55 11.86 17.86L14.65 20.64C14.85 20.83 15.16 20.83 15.36 20.64L18.15 17.86C18.47 17.55 18.24 17.01 17.8 17.01H16ZM8.65003 3.35002L5.86003 6.14002C5.54003 6.45002 5.76003 6.99002 6.21003 6.99002H8.00003V13C8.00003 13.55 8.45003 14 9.00003 14C9.55003 14 10 13.55 10 13V6.99002H11.79C12.24 6.99002 12.46 6.45002 12.14 6.14002L9.35003 3.35002C9.16003 3.16002 8.84003 3.16002 8.65003 3.35002Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from \"styled-components\";\nimport Box from \"../Box/Box\";\nimport Input from \"../Input/Input\";\nimport Text from \"../Text/Text\";\nimport IconButton from \"../Button/IconButton\";\nimport { BalanceInputProps } from \"./types\";\n\nexport const SwitchUnitsButton = styled(IconButton)`\n  width: 16px;\n`;\n\nexport const UnitContainer = styled(Text)`\n  margin-left: 4px;\n  text-align: right;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  white-space: nowrap;\n`;\n\nexport const StyledBalanceInput = styled(Box)<{ isWarning: BalanceInputProps[\"isWarning\"] }>`\n  background-color: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  box-shadow: ${({ theme, isWarning }) => theme.shadows[isWarning ? \"warning\" : \"inset\"]};\n  padding: 8px 16px;\n`;\n\nexport const StyledInput = styled(Input)<{ textAlign?: string }>`\n  background: transparent;\n  border-radius: 0;\n  box-shadow: none;\n  padding-left: 0;\n  padding-right: 0;\n  text-align: ${({ textAlign = \"right\" }) => textAlign};\n  border: none;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`;\n","import React from \"react\";\nimport { Flex, Box } from \"../Box\";\nimport { SwapVertIcon } from \"../Svg\";\nimport Text from \"../Text/Text\";\nimport { StyledBalanceInput, StyledInput, UnitContainer, SwitchUnitsButton } from \"./styles\";\nimport { BalanceInputProps } from \"./types\";\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({\n  value,\n  placeholder = \"0.0\",\n  onUserInput,\n  currencyValue,\n  inputProps,\n  innerRef,\n  isWarning = false,\n  decimals = 18,\n  unit,\n  switchEditingUnits,\n  ...props\n}) => {\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      onUserInput(e.currentTarget.value.replace(/,/g, \".\"));\n    }\n  };\n\n  return (\n    <StyledBalanceInput isWarning={isWarning} {...props}>\n      <Flex justifyContent=\"flex-end\">\n        <Box>\n          <Flex alignItems=\"center\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              min=\"0\"\n              value={value}\n              onChange={handleOnChange}\n              placeholder={placeholder}\n              ref={innerRef}\n              {...inputProps}\n            />\n            {unit && <UnitContainer>{unit}</UnitContainer>}\n          </Flex>\n          {currencyValue && (\n            <Text fontSize=\"12px\" textAlign=\"right\" color=\"textSubtle\">\n              {currencyValue}\n            </Text>\n          )}\n        </Box>\n        {switchEditingUnits && (\n          <Flex alignItems=\"center\" pl=\"12px\">\n            <SwitchUnitsButton scale=\"sm\" variant=\"text\" onClick={switchEditingUnits}>\n              <SwapVertIcon color=\"textSubtle\" />\n            </SwitchUnitsButton>\n          </Flex>\n        )}\n      </Flex>\n    </StyledBalanceInput>\n  );\n};\n\nexport default BalanceInput;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 6V7.79C12 8.24 12.54 8.46 12.85 8.14L15.64 5.35C15.84 5.15 15.84 4.84 15.64 4.64L12.85 1.85C12.54 1.54 12 1.76 12 2.21V4C7.58 4 4 7.58 4 12C4 13.04 4.2 14.04 4.57 14.95C4.84 15.62 5.7 15.8 6.21 15.29C6.48 15.02 6.59 14.61 6.44 14.25C6.15 13.56 6 12.79 6 12C6 8.69 8.69 6 12 6ZM17.79 8.71C17.52 8.98 17.41 9.4 17.56 9.75C17.84 10.45 18 11.21 18 12C18 15.31 15.31 18 12 18V16.21C12 15.76 11.46 15.54 11.15 15.86L8.36 18.65C8.16 18.85 8.16 19.16 8.36 19.36L11.15 22.15C11.46 22.46 12 22.24 12 21.8V20C16.42 20 20 16.42 20 12C20 10.96 19.8 9.96 19.43 9.05C19.16 8.38 18.3 8.2 17.79 8.71Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { useCallback } from 'react'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Contract, CallOverrides } from '@ethersproject/contracts'\nimport { useGasPrice } from 'state/user/hooks'\nimport get from 'lodash/get'\nimport * as Sentry from '@sentry/react'\n\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  /**\n   * Perform a contract call with a gas price returned from useGasPrice\n   * @param contract Used to perform the call\n   * @param methodName The name of the method called\n   * @param methodArgs An array of arguments to pass to the method\n   * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n   * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n   */\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<TransactionResponse> => {\n      Sentry.addBreadcrumb({\n        type: 'Transaction',\n        message: `Call with gas price: ${gasPrice}`,\n        data: {\n          contractAddress: contract.address,\n          methodName,\n          methodArgs,\n          overrides,\n        },\n      })\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      if (tx) {\n        Sentry.addBreadcrumb({\n          type: 'Transaction',\n          message: `Transaction sent: ${tx.hash}`,\n          data: {\n            hash: tx.hash,\n            from: tx.from,\n            gasLimit: tx.gasLimit?.toString(),\n            nonce: tx.nonce,\n          },\n        })\n      }\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useCallback, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { TransactionReceipt, TransactionResponse } from '@ethersproject/providers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nimport useToast from 'hooks/useToast'\nimport { logError, isUserRejected } from 'utils/sentry'\n\nexport type TxResponse = TransactionResponse | null\n\nexport type CatchTxErrorReturn = {\n  fetchWithCatchTxError: (fn: () => Promise<TxResponse>) => Promise<TransactionReceipt>\n  loading: boolean\n}\n\ntype ErrorData = {\n  code: number\n  message: string\n}\n\ntype TxError = {\n  data: ErrorData\n  error: string\n}\n\n// -32000 is insufficient funds for gas * price + value\nconst isGasEstimationError = (err: TxError): boolean => err?.data?.code === -32000\n\nexport default function useCatchTxError(): CatchTxErrorReturn {\n  const { library } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const [loading, setLoading] = useState(false)\n\n  const handleNormalError = useCallback(\n    (error, tx?: TxResponse) => {\n      logError(error)\n\n      if (tx) {\n        toastError(\n          t('Error'),\n          <ToastDescriptionWithTx txHash={tx.hash}>\n            {t('Please try again. Confirm the transaction and make sure you are paying enough gas!')}\n          </ToastDescriptionWithTx>,\n        )\n      } else {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    [t, toastError],\n  )\n\n  const fetchWithCatchTxError = useCallback(\n    async (callTx: () => Promise<TxResponse>): Promise<TransactionReceipt | null> => {\n      let tx: TxResponse = null\n\n      try {\n        setLoading(true)\n\n        /**\n         * https://github.com/vercel/swr/pull/1450\n         *\n         * wait for useSWRMutation finished, so we could apply SWR in case manually trigger tx call\n         */\n        tx = await callTx()\n\n        toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n\n        const receipt = await tx.wait()\n\n        return receipt\n      } catch (error: any) {\n        if (!isUserRejected(error)) {\n          if (!tx) {\n            handleNormalError(error)\n          } else {\n            library\n              .call(tx, tx.blockNumber)\n              .then(() => {\n                handleNormalError(error, tx)\n              })\n              .catch((err: any) => {\n                if (isGasEstimationError(err)) {\n                  handleNormalError(error, tx)\n                } else {\n                  logError(err)\n\n                  let recursiveErr = err\n\n                  let reason: string | undefined\n\n                  // for MetaMask\n                  if (recursiveErr?.data?.message) {\n                    reason = recursiveErr?.data?.message\n                  } else {\n                    // for other wallets\n                    // Reference\n                    // https://github.com/Uniswap/interface/blob/ac962fb00d457bc2c4f59432d7d6d7741443dfea/src/hooks/useSwapCallback.tsx#L216-L222\n                    while (recursiveErr) {\n                      reason = recursiveErr.reason ?? recursiveErr.message ?? reason\n                      recursiveErr = recursiveErr.error ?? recursiveErr.data?.originalError\n                    }\n                  }\n\n                  const REVERT_STR = 'execution reverted: '\n                  const indexInfo = reason?.indexOf(REVERT_STR)\n                  const isRevertedError = indexInfo >= 0\n\n                  if (isRevertedError) reason = reason.substring(indexInfo + REVERT_STR.length)\n\n                  toastError(\n                    'Failed',\n                    <ToastDescriptionWithTx txHash={tx.hash}>\n                      {isRevertedError\n                        ? `Transaction failed with error: ${reason}`\n                        : 'Transaction failed. For detailed error message:'}\n                    </ToastDescriptionWithTx>,\n                  )\n                }\n              })\n          }\n        }\n      } finally {\n        setLoading(false)\n      }\n\n      return null\n    },\n    [handleNormalError, toastError, library, toastSuccess, t],\n  )\n\n  return {\n    fetchWithCatchTxError,\n    loading,\n  }\n}\n","import * as Sentry from '@sentry/react'\n\nconst assignError = (maybeError: any) => {\n  if (typeof maybeError === 'string') {\n    return new Error(maybeError)\n  }\n  if (typeof maybeError === 'object') {\n    const error = new Error(maybeError?.message ?? String(maybeError))\n    if (maybeError?.stack) {\n      error.stack = maybeError.stack\n    }\n    if (maybeError?.code) {\n      error.name = maybeError.code\n    }\n    return error\n  }\n  return maybeError\n}\n\nexport const isUserRejected = (err) => {\n  // provider user rejected error code\n  return typeof err === 'object' && 'code' in err && err.code === 4001\n}\n\nconst ENABLED_LOG = false\n\nexport const logError = (error: Error | unknown) => {\n  if (ENABLED_LOG) {\n    if (error instanceof Error) {\n      Sentry.captureException(error)\n    } else {\n      Sentry.captureException(assignError(error), error)\n    }\n  }\n  console.error(error)\n}\n"],"names":["props","Svg","viewBox","path","d","SwitchUnitsButton","styled","IconButton","UnitContainer","Text","theme","colors","textSubtle","StyledBalanceInput","Box","input","inputSecondary","isWarning","shadows","StyledInput","Input","textAlign","value","placeholder","onUserInput","currencyValue","inputProps","innerRef","decimals","unit","switchEditingUnits","Flex","justifyContent","alignItems","pattern","inputMode","min","onChange","e","currentTarget","validity","valid","replace","ref","fontSize","color","pl","scale","variant","onClick","SwapVertIcon","useCallWithGasPrice","gasPrice","useGasPrice","callWithGasPrice","useCallback","contract","methodName","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","tx","Sentry","type","message","data","contractAddress","address","get","hash","from","gasLimit","toString","nonce","isGasEstimationError","err","code","useCatchTxError","useWeb3React","library","useTranslation","t","useToast","toastError","toastSuccess","useState","handleNormalError","error","logError","ToastDescriptionWithTx","txHash","fetchWithCatchTxError","callTx","receipt","setLoading","wait","isUserRejected","call","blockNumber","then","catch","recursiveErr","reason","originalError","REVERT_STR","indexInfo","indexOf","isRevertedError","substring","length","loading","console"],"sourceRoot":""}