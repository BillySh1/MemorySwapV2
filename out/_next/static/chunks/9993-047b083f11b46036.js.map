{"version":3,"file":"static/chunks/9993-047b083f11b46036.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Card/CardBody.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Add.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/./src/components/Loader/Dots.tsx","webpack://_N_E/./src/components/PositionCard/index.tsx","webpack://_N_E/./src/hooks/useTotalSupply.ts","webpack://_N_E/./src/utils/currencyId.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>{t('Loading')}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled %asset%', { asset: currency0.symbol })}:\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled %asset%', { asset: currency1.symbol })}:\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">{t('Share of Pool')}</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={NextLinkFromReactRouter}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                {t('Remove')}\n              </Button>\n              <Button\n                as={NextLinkFromReactRouter}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                {t('Add liquidity instead')}\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n"],"names":["CardBody","styled","space","defaultProps","p","props","Svg","viewBox","path","d","Dots","FixedHeightRow","RowBetween","MinimalPositionCard","pair","showUnwrapped","useActiveWeb3React","account","useTranslation","t","currency0","token0","unwrappedToken","currency1","token1","useState","userPoolBalance","useTokenBalance","undefined","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","raw","Percent","getLiquidityValue","token0Deposited","token1Deposited","Card","AutoColumn","gap","RowFixed","Text","color","bold","onClick","setShowMore","showMore","DoubleCurrencyLogo","margin","size","small","symbol","toSignificant","toFixed","asset","ml","LightCard","fontSize","style","textAlign","span","role","aria-label","FullPositionCard","borderRadius","Flex","justifyContent","flexDirection","alignItems","mb","ChevronUpIcon","ChevronDownIcon","padding","CurrencyLogo","currency","BIG_INT_ZERO","Button","as","NextLinkFromReactRouter","to","currencyId","variant","width","startIcon","AddIcon","token","useSingleCallResult","contract","useTokenContract","address","totalSupply","result","TokenAmount","toString","ETHER","Token","Error"],"sourceRoot":""}