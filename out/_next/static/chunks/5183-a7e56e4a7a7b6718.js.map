{"version":3,"file":"static/chunks/5183-a7e56e4a7a7b6718.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/NotificationDot/NotificationDot.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/Checkmark.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/History.tsx","webpack://_N_E/./src/components/App/Transactions/Transaction.tsx","webpack://_N_E/./src/components/App/Transactions/TransactionsModal.tsx","webpack://_N_E/./src/components/App/Transactions/index.tsx","webpack://_N_E/./src/components/App/AppHeader.tsx","webpack://_N_E/./src/components/App/AppBody.tsx","webpack://_N_E/./src/components/Layout/Row.tsx","webpack://_N_E/./src/components/Loader/CircleLoader.tsx","webpack://_N_E/./src/views/Page.tsx"],"sourcesContent":["import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { NotificationDotProps, DotProps } from \"./types\";\n\nconst NotificationDotRoot = styled.span`\n  display: inline-flex;\n  position: relative;\n`;\n\nconst Dot = styled.span<DotProps>`\n  display: ${({ show }) => (show ? \"inline-flex\" : \"none\")};\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  pointer-events: none;\n  border: 2px solid ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 50%;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n`;\n\nconst NotificationDot: React.FC<NotificationDotProps> = ({ show = false, color = \"failure\", children, ...props }) => (\n  <NotificationDotRoot>\n    {Children.map(children, (child: ReactElement) => cloneElement(child, props))}\n    <Dot show={show} color={color} />\n  </NotificationDotRoot>\n);\n\nexport default NotificationDot;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.00012 16.2L5.50012 12.7C5.11012 12.31 4.49012 12.31 4.10012 12.7C3.71012 13.09 3.71012 13.71 4.10012 14.1L8.29012 18.29C8.68012 18.68 9.31012 18.68 9.70012 18.29L20.3001 7.70001C20.6901 7.31001 20.6901 6.69001 20.3001 6.30001C19.9101 5.91001 19.2901 5.91001 18.9001 6.30001L9.00012 16.2Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 3C8.03 3 4 7.03 4 12H2.20711C1.76165 12 1.53857 12.5386 1.85355 12.8536L4.54604 15.546C4.73751 15.7375 5.04662 15.7418 5.24329 15.5556L8.08805 12.8631C8.4164 12.5524 8.19646 12 7.74435 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.4314 19 9.98175 18.4782 8.81739 17.601C8.37411 17.267 7.74104 17.259 7.3486 17.6514C6.95725 18.0428 6.95413 18.6823 7.38598 19.0284C8.92448 20.2615 10.8708 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport orderBy from 'lodash/orderBy'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Link from 'next/link'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <Link passHref href={backTo}>\n            <IconButton as=\"a\">\n              <ArrowBackIcon width=\"32px\" />\n            </IconButton>\n          </Link>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 450px;\n  width: 100%;\n  z-index: 1;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    max-width: 400px;\n  }\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding ?? '0'};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { PageMeta } from 'components/Layout/Page'\nimport { EXCHANGE_DOCS_URLS } from 'config/constants'\n\nconst StyledPage = styled.div<{ $removePadding: boolean; $noMinHeight }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: ${({ $removePadding }) => ($removePadding ? '0' : '16px')};\n  padding-bottom: 0;\n  min-height: calc(100vh - 50px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '24px')};\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '32px')};\n    padding-bottom: 0;\n  }\n`\n\nconst Page: React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    removePadding?: boolean\n    hideFooterOnDesktop?: boolean\n    noMinHeight?: boolean\n    helpUrl?: string\n  }\n> = ({\n  children,\n  removePadding = false,\n  hideFooterOnDesktop = false,\n  noMinHeight = false,\n  helpUrl = EXCHANGE_DOCS_URLS,\n  ...props\n}) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage $removePadding={removePadding} $noMinHeight={noMinHeight} {...props}>\n        {children}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n"],"names":["NotificationDotRoot","styled","Dot","show","theme","colors","invertedContrast","color","children","props","Children","child","cloneElement","Svg","viewBox","path","d","TransactionState","primary","IconWrapper","pending","success","failure","Transaction","tx","useActiveWeb3React","chainId","summary","receipt","status","LinkExternal","href","getBscScanLink","hash","CircleLoader","CheckmarkIcon","CloseIcon","renderTransactions","transactions","Flex","flexDirection","map","addedTime","onDismiss","account","dispatch","useDispatch","allTransactions","useAllTransactions","useTranslation","t","sortedRecentTransactions","orderBy","Object","values","filter","isTransactionRecent","confirmed","clearAllTransactionsCallback","useCallback","clearAllTransactions","Modal","title","headerBackground","ModalBody","length","AutoRow","mb","style","justifyContent","Text","Button","variant","scale","onClick","ConnectWalletButton","onPresentTransactionsModal","useModal","TransactionsModal","p","ml","HistoryIcon","width","AppHeaderContainer","cardBorder","subtitle","helper","backTo","noConfig","expertMode","useExpertModeManager","alignItems","mr","Link","passHref","IconButton","as","ArrowBackIcon","Heading","QuestionHelper","text","placement","fontSize","NotificationDot","GlobalSettings","Transactions","BodyWrapper","Card","mediaQueries","xs","AppBody","Row","Box","align","justify","padding","border","borderRadius","RowBetween","gap","RowFixed","rotate","keyframes","StyledSVG","size","stroke","rest","fill","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","StyledPage","$removePadding","gradients","bubblegum","sm","lg","removePadding","hideFooterOnDesktop","noMinHeight","helpUrl","EXCHANGE_DOCS_URLS","PageMeta","$noMinHeight"],"sourceRoot":""}