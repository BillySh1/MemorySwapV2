{"version":3,"file":"static/chunks/5574-ce37ffb0415eb681.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Svg/Icons/NoProfileAvatar.tsx","webpack://_N_E/./src/components/ProfileAvatarWithTeam.tsx","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/reducer.ts","webpack://_N_E/./src/views/Nft/market/Profile/hooks/useGetProfileCosts.ts","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/StartView.tsx","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/PauseProfileView.tsx","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/ApproveCakeView.tsx","webpack://_N_E/./src/views/Nft/market/Profile/components/EditProfileModal/index.tsx","webpack://_N_E/./src/views/Nft/market/components/Activity/NoNftsImage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useTheme } from \"styled-components\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  const theme = useTheme();\n  const primaryColor = theme.isDark ? \"#3C3742\" : \"#e9eaeb\";\n  const secondaryColor = theme.isDark ? \"#666171\" : \"#bdc2c4\";\n\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <path d=\"M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z\" fill={primaryColor} />\n      <mask id=\"A\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n        <path d=\"M32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0s16 7.163 16 16z\" fill=\"#c4c4c4\" />\n      </mask>\n      <g mask=\"url(#A)\">\n        <path\n          d=\"M25.128 16.436c0 3.115-4.133 5.641-9.231 5.641s-9.231-2.526-9.231-5.641V15h18.461v1.436zm2.205 13.806c0-3.815-5.074-6.908-11.333-6.908S4.667 26.426 4.667 30.242V32h22.667v-1.759z\"\n          fill={secondaryColor}\n        />\n        <path\n          fillRule=\"evenodd\"\n          d=\"M10.234 5.601C9.942 4.264 10.96 3 12.328 3c1.184 0 2.143.959 2.143 2.143v3.873l1.427-.067c.589 0 1.166.034 1.724.098V5.143c0-1.184.959-2.143 2.143-2.143 1.368 0 2.386 1.264 2.093 2.601l-.931 4.258c2.529 1.006 4.201 2.749 4.201 4.731 0 3.115-4.133 5.641-9.231 5.641s-9.231-2.526-9.231-5.641c0-2.053 1.794-3.849 4.476-4.836l-.908-4.153z\"\n          fill={secondaryColor}\n        />\n        <ellipse cx=\"12.308\" cy=\"14.846\" rx=\"1.026\" ry=\"1.538\" fill={primaryColor} />\n        <ellipse cx=\"19.385\" cy=\"14.846\" rx=\"1.026\" ry=\"1.538\" fill={primaryColor} />\n      </g>\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={profile.nft?.image.thumbnail}>\n      {!profile.isActive && <AvatarInactive />}\n      {profile.team && <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />}\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatarWithTeam\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import { useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Zero } from '@ethersproject/constants'\nimport { useTranslation } from 'contexts/Localization'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(true)\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: Zero,\n    numberCakeToRegister: Zero,\n    numberCakeToUpdate: Zero,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2<\n          [[BigNumber], [BigNumber], [BigNumber]]\n        >(profileABI, calls)\n\n        setCosts({\n          numberCakeToReactivate,\n          numberCakeToRegister,\n          numberCakeToUpdate,\n        })\n        setIsLoading(false)\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return { costs, isLoading }\n}\n\nexport default useGetProfileCosts\n","import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { FetchStatus } from 'config/constants/types'\nimport { requiresApproval } from 'utils/requiresApproval'\nimport { useProfile } from 'state/profile/hooks'\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { reader: cakeContract } = useCake()\n  const { profile } = useProfile()\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const {\n    costs: { numberCakeToUpdate, numberCakeToReactivate },\n    isLoading: isProfileCostsLoading,\n  } = useGetProfileCosts()\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const minimumCakeRequired = profile?.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.Fetched && cakeBalance.gte(minimumCakeRequired)\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const approvalNeeded = await requiresApproval(\n        cakeContract,\n        account,\n        getPancakeProfileAddress(),\n        minimumCakeRequired,\n      )\n      setNeedsApproval(approvalNeeded)\n    }\n\n    if (account && !isProfileCostsLoading) {\n      checkApprovalStatus()\n    }\n  }, [account, minimumCakeRequired, setNeedsApproval, cakeContract, isProfileCostsLoading])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatarWithTeam profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!isProfileCostsLoading &&\n            !hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: formatBigNumber(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={isProfileCostsLoading || !hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={isProfileCostsLoading || !hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { useProfile } from 'state/profile/hooks'\nimport useToast from 'hooks/useToast'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport { useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\ninterface PauseProfilePageProps extends InjectedModalProps {\n  onSuccess?: () => void\n}\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss, onSuccess }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { profile, refresh: refreshProfile } = useProfile()\n  const {\n    costs: { numberCakeToReactivate },\n  } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: isConfirming } = useCatchTxError()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithGasPrice(pancakeProfileContract, 'pauseProfile')\n    })\n    if (receipt?.status) {\n      // Re-fetch profile\n      refreshProfile()\n      toastSuccess(t('Profile Paused!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      if (onSuccess) {\n        onSuccess()\n      }\n      onDismiss?.()\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: formatBigNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import { useState, useMemo } from 'react'\nimport { Button, Box, InjectedModalProps, Text, Skeleton } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport SelectionCard from 'views/ProfileCreation/SelectionCard'\nimport { useApprovalNfts } from 'state/nftMarket/hooks'\nimport { NftLocation } from 'state/nftMarket/types'\nimport useNftsForAddress from '../../../hooks/useNftsForAddress'\n\ninterface ChangeProfilePicPageProps extends InjectedModalProps {\n  onSuccess?: () => void\n}\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss, onSuccess }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    collectionAddress: null,\n  })\n  const { t } = useTranslation()\n  const { account, library } = useWeb3React()\n  const { isLoading: isProfileLoading, profile, refresh: refreshProfile } = useProfile()\n  const { nfts, isLoading } = useNftsForAddress(account, profile, isProfileLoading)\n  const profileContract = useProfileContract()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const nftsInWallet = useMemo(() => nfts.filter((nft) => nft.location === NftLocation.WALLET), [nfts])\n\n  const { data } = useApprovalNfts(nftsInWallet)\n\n  const isAlreadyApproved = useMemo(() => {\n    return data ? !!data[selectedNft.tokenId] : false\n  }, [data, selectedNft.tokenId])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [\n            selectedNft.collectionAddress,\n            selectedNft.tokenId,\n          ])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.collectionAddress, selectedNft.tokenId])\n      },\n      onSuccess: async ({ receipt }) => {\n        // Re-fetch profile\n        refreshProfile()\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n        if (onSuccess) {\n          onSuccess()\n        }\n        onDismiss?.()\n      },\n    })\n\n  const alreadyApproved = isApproved || isAlreadyApproved\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"80px\" mb=\"16px\" />\n      ) : nftsInWallet.length > 0 ? (\n        <Box maxHeight=\"300px\" overflowY=\"scroll\">\n          {nftsInWallet.map((walletNft) => {\n            const handleChange = () => {\n              setSelectedNft({\n                tokenId: walletNft.tokenId,\n                collectionAddress: walletNft.collectionAddress,\n              })\n            }\n            return (\n              <SelectionCard\n                name=\"profilePicture\"\n                key={`${walletNft.collectionAddress}#${walletNft.tokenId}`}\n                value={walletNft.tokenId}\n                image={walletNft.image.thumbnail}\n                isChecked={walletNft.tokenId === selectedNft.tokenId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed}\n              >\n                <Text bold>{walletNft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n        </Box>\n      ) : (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || alreadyApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!alreadyApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button mt=\"8px\" variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { formatBigNumber } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Nft/market/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { fetchWithCatchTxError, loading: isApproving } = useCatchTxError()\n  const {\n    costs: { numberCakeToUpdate, numberCakeToReactivate },\n  } = useGetProfileCosts()\n  const { signer: cakeContract } = useCake()\n\n  if (!profile) {\n    return null\n  }\n\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return cakeContract.approve(getPancakeProfileAddress(), cost.mul(2).toString())\n    })\n    if (receipt?.status) {\n      goToChange()\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{formatBigNumber(cost)} CAKE</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Enable')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ContextApi } from 'contexts/Localization/types'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ninterface EditProfileModalProps extends InjectedModalProps {\n  onSuccess?: () => void\n}\n\nconst viewTitle = (t: ContextApi['t'], currentView: Views) => {\n  switch (currentView) {\n    case Views.START:\n      return t('Edit Profile')\n    case Views.CHANGE:\n      return t('Change Profile Pic')\n    case Views.REMOVE:\n      return t('Remove Profile Pic')\n    case Views.APPROVE:\n      return t('Enable CAKE')\n    default:\n      return ''\n  }\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss, onSuccess }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={viewTitle(t, currentView)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} onSuccess={onSuccess} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} onSuccess={onSuccess} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import styled from 'styled-components'\n\nconst NoNftsImage = styled.div`\n  background: url('/images/nfts/no-profile-md.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default NoNftsImage\n"],"names":["props","theme","useTheme","primaryColor","isDark","secondaryColor","Svg","viewBox","path","d","fill","mask","id","mask-type","maskUnits","x","y","width","height","g","fillRule","ellipse","cx","cy","rx","ry","TeamAvatar","styled","card","background","mediaQueries","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","profile","nft","image","thumbnail","isActive","team","src","images","alt","name","Views","reducer","state","action","type","currentView","view","previousView","useReducer","START","goToStart","dispatch","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useTranslation","t","useState","numberCakeToReactivate","Zero","numberCakeToRegister","numberCakeToUpdate","useToast","toastError","useEffect","fetchCosts","calls","map","method","address","getPancakeProfileAddress","multicallv2","profileABI","setCosts","setIsLoading","costs","isLoading","DangerOutline","Button","attrs","variant","colors","failure","onDismiss","useWeb3React","account","reader","useCake","useProfile","useGetCakeBalance","balance","fetchStatus","useGetProfileCosts","minimumCakeRequired","hasMinimumCakeRequired","FetchStatus","cakeBalance","gte","checkApprovalStatus","approvalNeeded","requiresApproval","cakeContract","setNeedsApproval","isProfileCostsLoading","Flex","alignItems","justifyContent","flexDirection","ProfileAvatarWithTeam","style","Text","as","color","minimum","formatBigNumber","mb","onClick","needsApproval","disabled","onSuccess","refresh","pancakeProfileContract","useProfileContract","useCallWithGasPrice","callWithGasPrice","toastSuccess","useCatchTxError","fetchWithCatchTxError","loading","handleDeactivateProfile","receipt","status","refreshProfile","ToastDescriptionWithTx","txHash","transactionHash","cost","label","htmlFor","cursor","display","marginBottom","Checkbox","checked","isAcknowledged","onChange","setIsAcknowledged","scale","ml","isConfirming","endIcon","AutoRenewIcon","spin","tokenId","collectionAddress","library","useNftsForAddress","isProfileLoading","nfts","profileContract","nftsInWallet","useMemo","filter","location","NftLocation","useApprovalNfts","data","isAlreadyApproved","selectedNft","useApproveConfirmTransaction","onApprove","contract","getErc721Contract","getSigner","onConfirm","isApproving","isApproved","isConfirmed","handleApprove","handleConfirm","alreadyApproved","Skeleton","length","Box","maxHeight","overflowY","walletNft","SelectionCard","value","isChecked","setSelectedNft","bold","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","mt","signer","approve","mul","toString","viewTitle","useEditProfile","isStartView","handleBack","Modal","title","onBack","hideCloseButton","div","maxWidth","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","NoNftsImage"],"sourceRoot":""}