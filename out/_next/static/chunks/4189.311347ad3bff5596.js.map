{"version":3,"file":"static/chunks/4189.311347ad3bff5596.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/isNaN.js","webpack://_N_E/./node_modules/lodash/isNumber.js","webpack://_N_E/./src/views/Swap/components/Chart/SwapLineChart.tsx","webpack://_N_E/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://_N_E/./node_modules/prop-types/index.js","webpack://_N_E/./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["var isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","import { useEffect, Dispatch, SetStateAction } from 'react'\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\nimport { PairDataTimeWindowEnum } from 'state/swap/types'\nimport { useTranslation } from 'contexts/Localization'\n\nexport type SwapLineChartProps = {\n  data: any[]\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of valye\n  isChangePositive: boolean\n  timeWindow: PairDataTimeWindowEnum\n} & React.HTMLAttributes<HTMLDivElement>\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ locale, payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(\n      payload.time.toLocaleString(locale, {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n      }),\n    )\n  }, [locale, payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\nconst getChartColors = ({ isChangePositive }) => {\n  return isChangePositive\n    ? { gradient1: '#00E7B0', gradient2: '#0C8B6C', stroke: '#31D0AA' }\n    : { gradient1: '#ED4B9E', gradient2: '#ED4B9E', stroke: '#ED4B9E ' }\n}\n\nconst dateFormattingByTimewindow: Record<PairDataTimeWindowEnum, Intl.DateTimeFormatOptions> = {\n  [PairDataTimeWindowEnum.DAY]: {\n    hour: '2-digit',\n    minute: '2-digit',\n  },\n  [PairDataTimeWindowEnum.WEEK]: {\n    month: 'short',\n    day: '2-digit',\n  },\n  [PairDataTimeWindowEnum.MONTH]: {\n    month: 'short',\n    day: '2-digit',\n  },\n  [PairDataTimeWindowEnum.YEAR]: {\n    month: 'short',\n    day: '2-digit',\n  },\n}\n\n/**\n * Note: remember that it needs to be mounted inside the container with fixed height\n */\nconst LineChart = ({ data, setHoverValue, setHoverDate, isChangePositive, timeWindow }: SwapLineChartProps) => {\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { theme } = useTheme()\n  const colors = getChartColors({ isChangePositive })\n  const dateFormatting = dateFormattingByTimewindow[timeWindow]\n\n  if (!data || data.length === 0) {\n    return <LineChartLoader />\n  }\n  return (\n    <ResponsiveContainer>\n      <AreaChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 0,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          if (setHoverDate) setHoverDate(undefined)\n          if (setHoverValue) setHoverValue(undefined)\n        }}\n      >\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={colors.gradient1} stopOpacity={0.34} />\n            <stop offset=\"100%\" stopColor={colors.gradient2} stopOpacity={0} />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => time.toLocaleString(locale, dateFormatting)}\n          minTickGap={8}\n        />\n        <YAxis dataKey=\"value\" axisLine={false} tickLine={false} domain={['auto', 'auto']} hide />\n        <Tooltip\n          cursor={{ stroke: theme.colors.textDisabled }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater\n              locale={locale}\n              payload={props.payload}\n              setHoverValue={setHoverValue}\n              setHoverDate={setHoverDate}\n            />\n          )}\n        />\n        <Area dataKey=\"value\" type=\"linear\" stroke={colors.stroke} fill=\"url(#gradient)\" strokeWidth={2} />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LineChart\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["isNumber","module","exports","value","baseGetTag","isObjectLike","HoverUpdater","locale","payload","setHoverValue","setHoverDate","useEffect","time","toLocaleString","year","month","day","hour","minute","dateFormattingByTimewindow","PairDataTimeWindowEnum","data","isChangePositive","timeWindow","currentLanguage","useTranslation","useTheme","theme","colors","gradient1","gradient2","stroke","getChartColors","dateFormatting","length","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","onMouseLeave","undefined","defs","linearGradient","id","x1","y1","x2","y2","stop","offset","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","tickFormatter","minTickGap","YAxis","domain","hide","Tooltip","cursor","textDisabled","contentStyle","display","formatter","tooltipValue","name","props","Area","type","fill","strokeWidth","LineChartLoader","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}