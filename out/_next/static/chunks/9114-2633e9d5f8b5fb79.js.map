{"version":3,"file":"static/chunks/9114-2633e9d5f8b5fb79.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/./src/components/AddressInputSelect/index.tsx","webpack://_N_E/./src/components/Loader/CircleLoader.tsx","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/components/PageHeader/PageHeader.tsx"],"sourcesContent":["import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n"],"names":["props","Svg","viewBox","path","d","ResultStatus","NOT_VALID","FOUND","NOT_FOUND","SubMenu","styled","theme","colors","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","value","defaultValidAddressHandler","Promise","resolve","onValidAddress","onAddressClick","useState","useTranslation","t","state","useEffect","isValidAddress","isAddress","validAddressHandler","hasResults","setState","prevState","Box","position","Input","placeholder","subject","toLowerCase","onChange","evt","target","newValue","style","zIndex","paddingRight","top","right","CircleLoader","onClick","px","fontWeight","rotate","keyframes","StyledSVG","size","stroke","primary","rest","fill","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","Wrapper","Page","Spinner","Outer","background","gradients","bubblegum","Inner","Container","children"],"sourceRoot":""}