{"version":3,"file":"static/chunks/pages/liquidity-916e5821d733e18c.js","mappings":"uFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,W,4ECJvB,I,GAAA,E,wKAKA,IAAMC,EAAaC,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KACO,Y,OAAQ,EAALC,MAAkBC,OAAOC,aAClDC,EAAAA,IAGJL,EAAWM,aAAe,CACxBC,EAAG,QAGL,O,4ICdA,gB,yjBAGA,IAAMC,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAI,Y,6BAAXR,C,KAMF,Y,IAAGS,EAAK,EAALA,M,OAAiB,OAALA,QAAK,IAALA,EAAAA,EAAS,UACtB,Y,IAAGC,EAAO,EAAPA,Q,OAAqB,OAAPA,QAAO,IAAPA,EAAAA,EAAW,aAC7B,Y,OAAS,EAANC,UACI,Y,IAAGC,EAAY,EAAZA,a,OAA+B,OAAZA,QAAY,IAAZA,EAAAA,EAAgB,UACnC,Y,OAAQ,EAALX,MAAkBC,OAAOW,cAElD,OAEO,IAAMC,GAAYd,EAAAA,EAAAA,IAAOO,GAAK,Y,6BAAZP,C,KACH,Y,OAAQ,EAALC,MAAkBC,OAAOW,cAC5B,Y,OAAQ,EAALZ,MAAkBC,OAAOa,iBAGrCC,GAAgBhB,EAAAA,EAAAA,IAAOO,GAAK,Y,6BAAZP,C,KACP,Y,OAAQ,EAALC,MAAkBC,OAAOC,cAC5B,Y,OAAQ,EAALF,MAAkBC,OAAOW,cAGrCI,GAAWjB,EAAAA,EAAAA,IAAOO,GAAK,Y,6BAAZP,C,KACF,Y,OAAQ,EAALC,MAAkBC,OAAOgB,a,yGC5BlD,gB,seAEA,IAAMC,EAASnB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAKFoB,GAAepB,EAAAA,EAAAA,IAAOmB,GAAO,Y,6BAAdnB,C,KAKfqB,EAAarB,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAMR,Y,IAAGsB,EAAG,EAAHA,I,OAAmB,OAAT,EAAiB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,Y,OAAU,EAAPC,WAGtB,Q,mHCJA,EAdiC,SAACC,GAChC,OACE,SAACC,EAAAA,EAAG,CAACC,QAAQ,YAAYC,MAAM,6B,UAC7B,UAACC,IAAC,CAACC,KAAK,OAAOC,YAAU,U,WACvB,SAACC,SAAM,CAACC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKL,KAAK,aACpC,SAACM,OAAI,CACHN,KAAK,OACLO,EAAE,qgB,+BCRZ,EAHwB,SAACC,G,MACvB,mEAA2E,OAARA,EAAQ,c,WCD7E,iB,+jCASA,IAAMC,GAAatC,EAAAA,EAAAA,IAAOuC,EAAAA,GAAK,Y,6BAAZvC,C,KACR,Y,OAAO,EAAJwC,QACF,Y,OAAO,EAAJA,QAIA,SAASC,EAAa,G,IA0BgBC,EAzBnDA,EADmC,EACnCA,SAAQ,EAD2B,EAEnCF,KAAAA,OAAI,IAAG,SAAM,EACbG,EAHmC,EAGnCA,MAMMC,GAAeC,EAAAA,EAAAA,GAAiBH,EAAAA,EAAoBI,EAAAA,IAAmBJ,EAASK,aAAUC,GAE1FC,GAAiBC,EAAAA,EAAAA,UAAQ,WAC7B,OAAIR,IAAaS,EAAAA,GAAc,GAC3BT,EAAAA,EAAoBU,EAAAA,IAClBV,EAAAA,EAAoBI,EAAAA,IACf,EAAIF,GAAAA,OAAJ,CAAkBS,EAAgBX,EAASL,WAE7C,CAACgB,EAAgBX,EAASL,UAE5B,KACN,CAACK,EAAUE,IAEd,OAAIF,IAAaS,EAAAA,IACR,SAACG,EAAU,CAAC7C,MAAO+B,EAAMG,MAAOA,KAGlC,SAACL,EAAU,CAACE,KAAMA,EAAMS,KAAMA,EAAMM,IAAK,GAA+B,OAAZ,QAAhBb,EAAQ,OAARA,QAAQ,IAARA,OAAAA,EAAAA,EAAUc,cAAM,IAAhBd,EAAAA,EAAoB,QAAQ,SAAQC,MAAOA,M,0KCzChG,I,GAAA,E,mMAIA,IAAMc,EAAUzD,EAAAA,GAAAA,IAAAA,WAAU,C,6BAAVA,C,KAGE,Y,OAAS,EAAN0D,QAAuB,SAU7B,SAASC,EAAmB,G,IACzCC,EADyC,EACzCA,UACAC,EAFyC,EAEzCA,UAAS,EAFgC,EAGzCrB,KAAAA,OAAI,IAAG,KAAE,IAHgC,EAIzCkB,OAAAA,OAAM,IAAG,GAAK,EAEd,OACE,UAACD,EAAO,CAACC,OAAQA,E,UACdE,IAAa,SAACnB,EAAAA,EAAY,CAACC,SAAUkB,EAAWpB,KAAM,GAAmB,OAAhBA,EAAKsB,WAAW,MAAKnB,MAAO,CAAEoB,YAAa,SACpGF,IAAa,SAACpB,EAAAA,EAAY,CAACC,SAAUmB,EAAWrB,KAAM,GAAmB,OAAhBA,EAAKsB,WAAW,W,2CC1BhF,I,GAAA,E,kKAIA,IAAME,GAAiBhE,EAAAA,EAAAA,IAAOuC,EAAAA,GAAK,Y,6BAAZvC,C,KACZ,Y,OAAO,EAAJwC,QACF,Y,OAAO,EAAJA,QAGA,SAASyB,EAAS,G,IAC/BlB,EAD+B,EAC/BA,QACAJ,EAF+B,EAE/BA,MAAK,EAF0B,EAG/BH,KAAAA,OAAI,IAAG,SAAM,EACbe,EAJ+B,EAI/BA,IAOMN,GAAiBJ,EAAAA,EAAAA,GAAiBE,GAExC,OAAO,SAACiB,EAAc,CAACT,IAAKA,EAAKf,KAAMA,EAAMS,KAAMA,EAAMN,MAAOA,M,6FCnBnD,SAASE,EAAiBqB,GACvC,OAAOhB,EAAAA,EAAAA,UAAQ,WACb,OAAOgB,GAAMC,EAAAA,EAAAA,GAAUD,GAAO,KAC7B,CAACA,M,2SCNN,iB,onCAcA,IAAME,GAAOpE,EAAAA,EAAAA,IAAOqE,EAAAA,GAAS,Y,6BAAhBrE,C,KACS,Y,OAAQ,EAALC,MAAkBC,OAAOoE,gBCblD,MDgBe,WACb,IAAM,GAAcC,EAAAA,EAAAA,KAAZC,QACF,GAAQC,EAAAA,EAAAA,MAANC,EAGFC,GAAoBC,EAAAA,EAAAA,MACpBC,GAAgC3B,EAAAA,EAAAA,UACpC,W,OAAMyB,EAAkBG,KAAI,SAACC,G,MAAY,CAAEC,gBAAgBC,EAAAA,EAAAA,IAAmBF,GAASA,OAAAA,QACvF,CAACJ,IAEGO,GAAkBhC,EAAAA,EAAAA,UACtB,W,OAAM2B,EAA8BC,KAAI,SAACK,G,OAAUA,EAAMH,oBACzD,CAACH,IAE+CO,EAGjD,GAHiDA,EAAAA,EAAAA,IACzC,OAAPZ,QAAO,IAAPA,EAAAA,OAAWxB,EACXkC,GACD,GAHMG,EAA2CD,EAGjD,GAHuBE,EAA0BF,EAGjD,GAGKG,GAA8BrC,EAAAA,EAAAA,UAClC,WACE2B,OAAAA,EAA8BW,QAAO,Y,IACnCH,EADsCL,EAAc,EAAdA,eACtCK,OAAuC,QAAvCA,EAAAA,EAAgBL,EAAe3C,gBAAQ,IAAvCgD,OAAAA,EAAAA,EAAyCI,YAAY,UAEzD,CAACZ,EAA+BQ,IAG5BK,GAAUC,EAAAA,EAAAA,IAASJ,EAA4BT,KAAI,Y,OAAS,EAANC,WACtDa,EACJN,IACO,OAAPI,QAAO,IAAPA,OAAAA,EAAAA,EAASG,QAASN,EAA4BM,SACtC,OAAPH,QAAO,IAAPA,OAAAA,EAAAA,EAASG,SAAUH,EAAQI,OAAM,Y,cAAW,KAAoBC,EAAAA,GAAAA,WAC7DC,EAAiC,OAAPN,QAAO,IAAPA,OAAAA,EAAAA,EAC5BF,QAAO,Y,aAAES,EAAS,KAAEC,EAAI,K,OAAMD,IAAcF,EAAAA,GAAAA,QAAoBI,QAAQD,MACzEpB,KAAI,Y,cAAQ,MAiCf,OACE,SAACsB,EAAAA,EAAI,C,UACH,UAACC,EAAAA,EAAO,C,WACN,SAACC,EAAAA,EAAS,CAACC,MAAO7B,EAAE,kBAAmB8B,SAAU9B,EAAE,8CACnD,UAACN,EAAI,C,UAlCJI,EAODoB,GAEA,SAACa,EAAAA,EAAI,CAACC,MAAM,aAAaC,UAAU,S,UACjC,SAACC,EAAAA,EAAI,C,SAAElC,EAAE,gBAIY,OAAvBsB,QAAuB,IAAvBA,OAAAA,EAAAA,EAAyBH,QAAS,EAC7BG,EAAwBlB,KAAI,SAAC+B,EAAQC,G,OAC1C,SAACC,EAAAA,EAAgB,CAEfb,KAAMW,EACNG,GAAIF,EAAQd,EAAwBH,OAAS,EAAI,OAAS,GAFrDgB,EAAO7B,eAAe3C,aAO/B,SAACoE,EAAAA,EAAI,CAACC,MAAM,aAAaC,UAAU,S,SAChCjC,EAAE,0BAvBH,SAAC+B,EAAAA,EAAI,CAACC,MAAM,aAAaC,UAAU,S,SAChCjC,EAAE,iDAiCFF,IAAYoB,IACX,UAACqB,EAAAA,EAAI,CAACC,cAAc,SAASC,WAAW,SAASC,GAAG,O,WAClD,SAACX,EAAAA,EAAI,CAACC,MAAM,aAAaM,GAAG,M,SACzBtC,EAAE,mCAEL,SAAC2C,IAAI,CAACC,KAAK,QAAQC,UAAQ,E,UACzB,SAACC,EAAAA,EAAM,CAACC,GAAG,mBAAmBC,QAAQ,YAAYC,MAAM,KAAKC,GAAG,I,SAC7DlD,EAAE,mCAMb,SAAC3E,EAAAA,EAAU,CAAC4C,MAAO,CAAEgE,UAAW,U,UAC9B,SAACU,IAAI,CAACC,KAAK,OAAOC,UAAQ,E,UACxB,SAACC,EAAAA,EAAM,CAACC,GAAG,mBAAmBhH,MAAM,OAAOoH,WAAW,SAACC,EAAAA,EAAO,CAACpB,MAAM,U,SAClEhC,EAAE,8B,mCEvGF,SAASP,EAAUD,GAEhC,OADiBA,EAAI6D,MAAM,KAAK,GAAGC,eAEjC,IAAK,QACH,MAAO,CAAC9D,GACV,IAAK,OACH,MAAO,CAAE,QAAqB,OAAdA,EAAI+D,OAAO,IAAM/D,GACnC,IAAK,O,IACUA,EAAPgE,EAAuC,QAAhChE,EAAAA,EAAIiE,MAAM,8BAAsB,IAAhCjE,OAAAA,EAAAA,EAAmC,GAChD,MAAO,CAAE,oCAAwC,OAALgE,EAAK,KAAK,wBAA4B,OAALA,EAAK,MACpF,IAAK,O,IACUhE,EAAPkE,EAAuC,QAAhClE,EAAAA,EAAIiE,MAAM,8BAAsB,IAAhCjE,OAAAA,EAAAA,EAAmC,GAChD,MAAO,CAAE,oCAAwC,OAALkE,EAAK,KAAK,wBAA4B,OAALA,EAAK,MACpF,QACE,MAAO,I","sources":["webpack://_N_E/?d36e","webpack://_N_E/./packages/uikit/src/components/Card/CardFooter.tsx","webpack://_N_E/./src/components/Card/index.tsx","webpack://_N_E/./src/components/Layout/Column.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/KuCoin.tsx","webpack://_N_E/./src/utils/getTokenLogoURL.ts","webpack://_N_E/./src/components/Logo/CurrencyLogo.tsx","webpack://_N_E/./src/components/Logo/DoubleLogo.tsx","webpack://_N_E/./src/components/Logo/ListLogo.tsx","webpack://_N_E/./src/hooks/useHttpLocations.ts","webpack://_N_E/./src/views/Pool/index.tsx","webpack://_N_E/./src/pages/liquidity.tsx","webpack://_N_E/./src/utils/uriToHttp.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/liquidity\",\n      function () {\n        return require(\"private-next-pages/liquidity.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/liquidity\"])\n      });\n    }\n  ","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardFooterProps = SpaceProps;\n\nconst CardFooter = styled.div<CardFooterProps>`\n  border-top: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  ${space}\n`;\n\nCardFooter.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardFooter;\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  padding: ${({ padding }) => padding ?? '1.25rem'};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius ?? '16px'};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify};\n`\n\nexport default Column\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#0093DD\" />\n        <path\n          fill=\"#FFF\"\n          d=\"M13.54 16l5.174 5.33 3.265-3.363a1.446 1.446 0 012.088 0 1.554 1.554 0 010 2.152l-4.309 4.44a1.456 1.456 0 01-2.088 0l-6.216-6.406v3.808c0 .836-.666 1.522-1.477 1.522-.816 0-1.477-.682-1.477-1.522V10.04c0-.84.661-1.522 1.477-1.522.815 0 1.477.682 1.477 1.522v3.808l6.216-6.406a1.456 1.456 0 012.088 0l4.31 4.44a1.554 1.554 0 010 2.152 1.446 1.446 0 01-2.09 0l-3.264-3.364L13.54 16zm5.176-1.523c.816 0 1.478.682 1.478 1.523 0 .841-.662 1.523-1.478 1.523s-1.478-.682-1.478-1.523c0-.841.662-1.523 1.478-1.523z\"\n        />\n      </g>\n    </Svg>\n  );\n};\n\nexport default Icon;\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon, KuCoinIcon } from '@pancakeswap/uikit'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { WrappedTokenInfo } from 'state/types'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: 50%;\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <KuCoinIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { useMemo } from 'react'\nimport uriToHttp from 'utils/uriToHttp'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  return useMemo(() => {\n    return uri ? uriToHttp(uri) : []\n  }, [uri])\n}\n","import { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@pancakeswap/uikit'\nimport Link from 'next/link'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { usePairs, PairState } from '../../hooks/usePairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nconst Body = styled(CardBody)`\n  background-color: ${({ theme }) => theme.colors.dropdownDeep};\n`\n\nexport default function Pool() {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs],\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances ||\n    v2Pairs?.length < liquidityTokensWithBalances.length ||\n    (v2Pairs?.length && v2Pairs.every(([pairState]) => pairState === PairState.LOADING))\n  const allV2PairsWithLiquidity = v2Pairs\n    ?.filter(([pairState, pair]) => pairState === PairState.EXISTS && Boolean(pair))\n    .map(([, pair]) => pair)\n\n  const renderBody = () => {\n    if (!account) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          {t('Connect to a wallet to view your liquidity.')}\n        </Text>\n      )\n    }\n    if (v2IsLoading) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          <Dots>{t('Loading')}</Dots>\n        </Text>\n      )\n    }\n    if (allV2PairsWithLiquidity?.length > 0) {\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\n        <FullPositionCard\n          key={v2Pair.liquidityToken.address}\n          pair={v2Pair}\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\n        />\n      ))\n    }\n    return (\n      <Text color=\"textSubtle\" textAlign=\"center\">\n        {t('No liquidity found.')}\n      </Text>\n    )\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Your Liquidity')} subtitle={t('Remove liquidity to receive tokens back')} />\n        <Body>\n          {renderBody()}\n          {account && !v2IsLoading && (\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t(\"Don't see a pool you joined?\")}\n              </Text>\n              <Link href=\"/find\" passHref>\n                <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as=\"a\">\n                  {t('Find other LP tokens')}\n                </Button>\n              </Link>\n            </Flex>\n          )}\n        </Body>\n        <CardFooter style={{ textAlign: 'center' }}>\n          <Link href=\"/add\" passHref>\n            <Button id=\"join-pool-button\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\n              {t('Add Liquidity')}\n            </Button>\n          </Link>\n        </CardFooter>\n      </AppBody>\n    </Page>\n  )\n}\n","import Liquidity from '../views/Pool'\n\nexport default Liquidity\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n"],"names":["window","__NEXT_P","push","CardFooter","styled","theme","colors","cardBorder","space","defaultProps","p","Card","Box","width","padding","border","borderRadius","background","LightCard","backgroundAlt","LightGreyCard","GreyCard","dropdown","Column","ColumnCenter","AutoColumn","gap","justify","props","Svg","viewBox","xmlns","g","fill","fill-rule","circle","cx","cy","r","path","d","address","StyledLogo","Logo","size","CurrencyLogo","currency","style","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","undefined","srcs","useMemo","ETHER","Token","getTokenLogoURL","KuCoinIcon","alt","symbol","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","toString","marginRight","StyledListLogo","ListLogo","uri","uriToHttp","Body","CardBody","dropdownDeep","useActiveWeb3React","account","useTranslation","t","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","greaterThan","v2Pairs","usePairs","v2IsLoading","length","every","PairState","allV2PairsWithLiquidity","pairState","pair","Boolean","Page","AppBody","AppHeader","title","subtitle","Text","color","textAlign","Dots","v2Pair","index","FullPositionCard","mb","Flex","flexDirection","alignItems","mt","Link","href","passHref","Button","id","variant","scale","as","startIcon","AddIcon","split","toLowerCase","substr","hash","match","name"],"sourceRoot":""}