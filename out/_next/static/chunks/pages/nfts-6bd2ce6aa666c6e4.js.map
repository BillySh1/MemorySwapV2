{"version":3,"file":"static/chunks/pages/nfts-6bd2ce6aa666c6e4.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/_arrayShuffle.js","webpack://_N_E/./node_modules/lodash/_baseShuffle.js","webpack://_N_E/./node_modules/lodash/_shuffleSelf.js","webpack://_N_E/./node_modules/lodash/shuffle.js","webpack://_N_E/?6fbe","webpack://_N_E/./packages/uikit/src/components/Button/ExpandableButton.tsx","webpack://_N_E/./packages/uikit/src/components/Card/CardHeader.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ChevronRight.tsx","webpack://_N_E/./src/components/FoldableSection/FoldableText.tsx","webpack://_N_E/./src/components/PageSection/svg/CurvedSvg.tsx","webpack://_N_E/./src/components/PageSection/CurvedDivider.tsx","webpack://_N_E/./src/components/PageSection/index.tsx","webpack://_N_E/./src/components/FoldableSection/SectionsWithFoldableText.tsx","webpack://_N_E/./src/views/Nft/market/Home/Collections.tsx","webpack://_N_E/./src/views/Nft/market/Home/Newest.tsx","webpack://_N_E/./src/views/Nft/market/Home/config.tsx","webpack://_N_E/./src/views/Nft/market/Home/index.tsx","webpack://_N_E/./src/pages/nfts/index.tsx","webpack://_N_E/./src/views/Nft/market/components/GridPlaceholder.tsx","webpack://_N_E/./src/views/Nft/market/components/SearchBar.tsx"],"sourcesContent":["var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/nfts\",\n      function () {\n        return require(\"private-next-pages/nfts/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/nfts\"])\n      });\n    }\n  ","import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\nimport Button from \"./Button\";\nimport IconButton from \"./IconButton\";\n\ninterface Props {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nexport const ExpandableButton: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <IconButton aria-label=\"Hide or show expandable content\" onClick={onClick}>\n      {children}\n      {expanded ? <ChevronUpIcon color=\"invertedContrast\" /> : <ChevronDownIcon color=\"invertedContrast\" />}\n    </IconButton>\n  );\n};\nExpandableButton.defaultProps = {\n  expanded: false,\n};\n\nexport const ExpandableLabel: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <Button\n      variant=\"text\"\n      aria-label=\"Hide or show expandable content\"\n      onClick={onClick}\n      endIcon={expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\n    >\n      {children}\n    </Button>\n  );\n};\nExpandableLabel.defaultProps = {\n  expanded: false,\n};\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\nimport { CardTheme } from \"./types\";\n\nexport interface CardHeaderProps extends SpaceProps {\n  variant?: keyof CardTheme[\"cardHeaderBackground\"];\n}\n\nconst CardHeader = styled.div<CardHeaderProps>`\n  background: ${({ theme, variant = \"default\" }) => theme.card.cardHeaderBackground[variant]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  ${space}\n`;\n\nCardHeader.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardHeader;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.29006 15.88L13.1701 12L9.29006 8.12001C8.90006 7.73001 8.90006 7.10001 9.29006 6.71001C9.68006 6.32001 10.3101 6.32001 10.7001 6.71001L15.2901 11.3C15.6801 11.69 15.6801 12.32 15.2901 12.71L10.7001 17.3C10.3101 17.69 9.68006 17.69 9.29006 17.3C8.91006 16.91 8.90006 16.27 9.29006 15.88Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { useState, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FoldableTextProps extends Omit<FlexProps, 'title'> {\n  title?: ReactNode\n}\n\nconst Wrapper = styled(Flex)`\n  cursor: pointer;\n`\n\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Flex {...props} flexDirection=\"column\">\n      <Wrapper justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\" onClick={() => setIsExpanded((s) => !s)}>\n        <Text fontWeight=\"bold\">{title}</Text>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded}>{isExpanded ? t('Hide') : t('Details')}</ExpandableLabel>\n        </StyledExpandableLabelWrapper>\n      </Wrapper>\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\n        {children}\n      </StyledChildrenFlex>\n    </Flex>\n  )\n}\n\nexport default FoldableText\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import { ReactNode } from 'react'\nimport { Text, Heading, Card, CardHeader, CardBody, Box, BoxProps } from '@pancakeswap/uikit'\nimport FoldableText from './FoldableText'\n\ninterface Props extends BoxProps {\n  header: string\n  config: { title: string; description: ReactNode[] }[]\n}\n\nconst SectionsWithFoldableText: React.FC<Props> = ({ header, config, ...props }) => {\n  return (\n    <Box maxWidth=\"888px\" {...props}>\n      <Card>\n        <CardHeader>\n          <Heading scale=\"lg\" color=\"secondary\">\n            {header}\n          </Heading>\n        </CardHeader>\n        <CardBody>\n          {config.map(({ title, description }, i, { length }) => (\n            <FoldableText key={title} id={title} mb={i + 1 === length ? '' : '24px'} title={title}>\n              {description.map((desc, index) => {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <Text key={index} color=\"textSubtle\" as=\"p\">\n                    {desc}\n                  </Text>\n                )\n              })}\n            </FoldableText>\n          ))}\n        </CardBody>\n      </Card>\n    </Box>\n  )\n}\n\nexport default SectionsWithFoldableText\n","import { Button, ChevronRightIcon, Flex, Grid, Heading, Text } from '@pancakeswap/uikit'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { Collection } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { CollectionCard } from '../components/CollectibleCard'\nimport { BNBAmountLabel } from '../components/CollectibleCard/styles'\n\nconst Collections: React.FC<{ title: string; testId: string; collections: Collection[] }> = ({\n  title,\n  testId,\n  collections,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\n        <Heading as=\"h3\" scale=\"lg\" data-test={testId}>\n          {title}\n        </Heading>\n        <Button\n          as={NextLinkFromReactRouter}\n          to={`${nftsBaseUrl}/collections/`}\n          variant=\"secondary\"\n          scale=\"sm\"\n          endIcon={<ChevronRightIcon color=\"primary\" width=\"24px\" />}\n        >\n          {t('View All')}\n        </Button>\n      </Flex>\n      <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', '1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)']} mb=\"64px\">\n        {collections.slice(0, 6).map((collection) => {\n          return (\n            <CollectionCard\n              key={collection.address}\n              bgSrc={collection.banner.small}\n              avatarSrc={collection.avatar}\n              collectionName={collection.name}\n              url={`${nftsBaseUrl}/collections/${collection.address}`}\n            >\n              <Flex alignItems=\"center\">\n                <Text fontSize=\"12px\" color=\"textSubtle\">\n                  {t('Volume')}\n                </Text>\n                <BNBAmountLabel amount={collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0} />\n              </Flex>\n            </CollectionCard>\n          )\n        })}\n      </Grid>\n    </>\n  )\n}\n\nexport default Collections\n","import { useState, useEffect } from 'react'\nimport { Heading, Flex, Button, Grid, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getLatestListedNfts, getNftsFromDifferentCollectionsApi } from 'state/nftMarket/helpers'\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { CollectibleLinkCard } from '../components/CollectibleCard'\nimport GridPlaceholder from '../components/GridPlaceholder'\n\n/**\n * Fetch latest NFTs data from SG+API and combine them\n * @returns Array of NftToken\n */\nconst useNewestNfts = () => {\n  const [newestNfts, setNewestNfts] = useState<NftToken[]>(null)\n\n  useEffect(() => {\n    const fetchNewestNfts = async () => {\n      const nftsFromSg = await getLatestListedNfts(16)\n      const nftsFromApi = await getNftsFromDifferentCollectionsApi(\n        nftsFromSg.map((nft) => ({ collectionAddress: nft.collection.id, tokenId: nft.tokenId })),\n      )\n\n      const nfts = nftsFromSg\n        .map((nftFromSg) => {\n          const foundNftFromApi = nftsFromApi.find((nftFromApi) => nftFromApi.tokenId === nftFromSg.tokenId)\n          if (foundNftFromApi) {\n            return { ...foundNftFromApi, marketData: nftFromSg }\n          }\n          return null\n        })\n        .filter(Boolean)\n      setNewestNfts(nfts)\n    }\n    fetchNewestNfts()\n  }, [])\n\n  return newestNfts\n}\n\nconst Newest: React.FC = () => {\n  const { t } = useTranslation()\n  const nfts = useNewestNfts()\n\n  return (\n    <div>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"26px\">\n        <Heading data-test=\"nfts-newest\">{t('Newest Arrivals')}</Heading>\n        <Button\n          as={NextLinkFromReactRouter}\n          to={`${nftsBaseUrl}/activity/`}\n          variant=\"secondary\"\n          scale=\"sm\"\n          endIcon={<ChevronRightIcon color=\"primary\" />}\n        >\n          {t('View All')}\n        </Button>\n      </Flex>\n      {nfts ? (\n        <Grid\n          gridRowGap=\"24px\"\n          gridColumnGap=\"16px\"\n          gridTemplateColumns={['1fr', 'repeat(2, 1fr)', 'repeat(2, 1fr)', 'repeat(4, 1fr)']}\n        >\n          {nfts.map((nft) => {\n            const isPBCollection = nft.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n            const currentAskPrice =\n              !isPBCollection && nft.marketData?.isTradable ? parseFloat(nft.marketData?.currentAskPrice) : undefined\n            return (\n              <CollectibleLinkCard\n                data-test=\"newest-nft-card\"\n                key={nft.collectionAddress + nft.tokenId}\n                nft={nft}\n                currentAskPrice={currentAskPrice}\n              />\n            )\n          })}\n        </Grid>\n      ) : (\n        <GridPlaceholder numItems={8} />\n      )}\n    </div>\n  )\n}\n\nexport default Newest\n","import { LinkExternal } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config = (t: ContextApi['t']) => {\n  return [\n    {\n      title: t('I sold an NFT, where’s my BNB?'),\n      description: [\n        t(\n          'Trades are settled in WBNB, which is a wrapped version of BNB used on BNB Smart Chain. That means that when you sell an item, WBNB is sent to your wallet instead of BNB.',\n        ),\n        t('You can instantly swap your WBNB for BNB with no trading fees on PancakeSwap.'),\n      ],\n    },\n    {\n      title: t('When can I trade other NFT Collections?'),\n      description: [\n        t(\n          'Soon! The current NFT Market is a basic version (phase 1), with early access to trading PancakeSwap NFTs only.',\n        ),\n        t('Other collections will be coming soon. We’ll make an announcement soon about the launch of the V2 Market.'),\n      ],\n    },\n    {\n      title: t('How can I list my NFT collection on the Market?'),\n      description: [\n        t('In Phase 2 of the NFT Marketplace, collections must be whitelisted before they may be listed.'),\n        t('We are now accepting applications from NFT collection owners seeking to list their collections.'),\n        <LinkExternal href=\"https://docs.pancakeswap.finance/contact-us/nft-market-applications\">\n          {t('Please apply here')}\n        </LinkExternal>,\n      ],\n    },\n    {\n      title: t('What are the fees?'),\n      description: [\n        t(\n          '100% of all platform fees taken by PancakeSwap from sales are used to buy back and BURN CAKE tokens in our weekly CAKE burns.',\n        ),\n        t(\n          'Platform fees: 2% is subtracted from NFT sales on the market. Subject to change.Collection fees: Additional fees may be taken by collection creators, once those collections are live. These will not contribute to the CAKE burns.',\n        ),\n      ],\n    },\n  ]\n}\n\nexport default config\n","import styled from 'styled-components'\nimport { Box, Button, Flex, Heading, LinkExternal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { useTranslation } from 'contexts/Localization'\nimport PageHeader from 'components/PageHeader'\nimport SectionsWithFoldableText from 'components/FoldableSection/SectionsWithFoldableText'\nimport PageSection from 'components/PageSection'\nimport { PageMeta } from 'components/Layout/Page'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { FetchStatus } from 'config/constants/types'\nimport PageLoader from 'components/Loader/PageLoader'\nimport useTheme from 'hooks/useTheme'\nimport orderBy from 'lodash/orderBy'\nimport SearchBar from '../components/SearchBar'\nimport Collections from './Collections'\nimport Newest from './Newest'\nimport config from './config'\n\nconst Gradient = styled(Box)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n`\n\nconst StyledPageHeader = styled(PageHeader)`\n  margin-bottom: -40px;\n  padding-bottom: 40px;\n`\n\nconst StyledHeaderInner = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  & div:nth-child(1) {\n    order: 1;\n  }\n  & div:nth-child(2) {\n    order: 0;\n    margin-bottom: 32px;\n    align-self: end;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    & div:nth-child(1) {\n      order: 0;\n    }\n    & div:nth-child(2) {\n      order: 1;\n      margin-bottom: 0;\n      align-self: auto;\n    }\n  }\n`\n\nconst Home = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { data: collections, status } = useGetCollections()\n\n  const hotCollections = orderBy(\n    collections,\n    (collection) => (collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0),\n    'desc',\n  )\n\n  const newestCollections = orderBy(\n    collections,\n    (collection) => (collection.createdAt ? Date.parse(collection.createdAt) : 0),\n    'desc',\n  )\n\n  return (\n    <>\n      <PageMeta />\n      <StyledPageHeader>\n        <StyledHeaderInner>\n          <div>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('NFT Market')}\n            </Heading>\n            <Heading scale=\"lg\" color=\"text\">\n              {t('Buy and Sell NFTs on BNB Smart Chain')}\n            </Heading>\n            {account && (\n              <Button as={NextLinkFromReactRouter} to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} mt=\"32px\">\n                {t('Manage/Sell')}\n              </Button>\n            )}\n          </div>\n          <SearchBar />\n        </StyledHeaderInner>\n      </StyledPageHeader>\n      {status !== FetchStatus.Fetched ? (\n        <PageLoader />\n      ) : (\n        <PageSection\n          innerProps={{ style: { margin: '0', width: '100%' } }}\n          background={theme.colors.background}\n          index={1}\n          concaveDivider\n          dividerPosition=\"top\"\n        >\n          <Collections\n            key=\"newest-collections\"\n            title={t('Newest Collections')}\n            testId=\"nfts-newest-collections\"\n            collections={newestCollections}\n          />\n          <Collections\n            key=\"hot-collections\"\n            title={t('Hot Collections')}\n            testId=\"nfts-hot-collections\"\n            collections={hotCollections}\n          />\n          <Newest />\n        </PageSection>\n      )}\n      <Gradient p=\"64px 0\">\n        <SectionsWithFoldableText header={t('FAQs')} config={config(t)} m=\"auto\" />\n        <LinkExternal href=\"https://docs.pancakeswap.finance/contact-us/nft-market-applications\" mx=\"auto\" mt=\"16px\">\n          {t('Apply to NFT Market!')}\n        </LinkExternal>\n      </Gradient>\n    </>\n  )\n}\n\nexport default Home\n","import NftMarket from 'views/Nft/market/Home'\n\nconst NftMarketPage = () => {\n  return <NftMarket />\n}\n\nexport default NftMarketPage\n","import { Box, BoxProps, Grid, GridProps, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\n\ninterface GridPlaceholderProps extends GridProps {\n  numItems?: number\n}\n\nexport const GridPlaceholderItem: React.FC<BoxProps> = (props) => (\n  <Box {...props}>\n    <Skeleton height=\"258px\" mb=\"8px\" />\n    <Skeleton width=\"30%\" mb=\"4px\" />\n    <Skeleton width=\"45%\" mb=\"16px\" />\n    <Skeleton />\n  </Box>\n)\n\nconst GridPlaceholder: React.FC<GridPlaceholderProps> = ({ numItems = 12, ...props }) => (\n  <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, 'repeat(4, 1fr)']} {...props}>\n    {times(numItems).map((itemKey) => (\n      <GridPlaceholderItem key={itemKey} />\n    ))}\n  </Grid>\n)\n\nexport default GridPlaceholder\n","import AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { useRouter } from 'next/router'\n\nconst SearchBar: React.FC = (props) => {\n  const router = useRouter()\n\n  const handleAddressClick = (value: string) => {\n    router.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n"],"names":["copyArray","shuffleSelf","module","exports","array","values","collection","baseRandom","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","window","__NEXT_P","push","ExpandableButton","onClick","expanded","children","IconButton","aria-label","ChevronUpIcon","color","ChevronDownIcon","defaultProps","ExpandableLabel","Button","variant","endIcon","CardHeader","styled","theme","card","cardHeaderBackground","radii","space","p","props","Svg","viewBox","path","d","Wrapper","Flex","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","colors","inputSecondary","title","useTranslation","t","useState","flexDirection","justifyContent","alignItems","pb","setIsExpanded","s","Text","fontWeight","sharedStyles","clipPath","clipFill","css","isDark","dark","light","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","svg","width","height","defs","id","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","CurvedDivider","header","config","maxWidth","Card","Heading","scale","CardBody","map","i","description","FoldableText","mb","desc","as","testId","collections","data-test","NextLinkFromReactRouter","to","nftsBaseUrl","ChevronRightIcon","Grid","gridGap","gridTemplateColumns","slice","CollectionCard","bgSrc","banner","small","avatarSrc","avatar","collectionName","name","url","address","fontSize","BNBAmountLabel","amount","totalVolumeBNB","parseFloat","useNewestNfts","useEffect","fetchNewestNfts","nftsFromSg","nftsFromApi","nfts","getLatestListedNfts","getNftsFromDifferentCollectionsApi","nft","collectionAddress","tokenId","nftFromSg","foundNftFromApi","find","nftFromApi","marketData","filter","Boolean","setNewestNfts","newestNfts","div","gridRowGap","gridColumnGap","currentAskPrice","toLowerCase","pancakeBunniesAddress","isTradable","CollectibleLinkCard","GridPlaceholder","numItems","LinkExternal","href","Gradient","gradients","cardHeader","StyledPageHeader","PageHeader","StyledHeaderInner","useWeb3React","account","useTheme","useGetCollections","data","status","hotCollections","orderBy","newestCollections","createdAt","Date","parse","PageMeta","mt","SearchBar","FetchStatus","PageLoader","PageSection","style","margin","Collections","Newest","SectionsWithFoldableText","m","mx","NftMarket","GridPlaceholderItem","Skeleton","times","itemKey","router","useRouter","AddressInputSelect","onAddressClick"],"sourceRoot":""}