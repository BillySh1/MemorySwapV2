{"version":3,"file":"static/chunks/pages/voting/proposal/[id]-749c7e6e3f1dc9cb.js","mappings":"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","sources":["webpack://_N_E/?61c0","webpack://_N_E/./packages/uikit/src/components/Progress/ProgressBunnyWrapper.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ProgressBunny.tsx","webpack://_N_E/./packages/uikit/src/components/Progress/Progress.tsx","webpack://_N_E/./packages/uikit/src/components/Progress/themes.ts","webpack://_N_E/./packages/uikit/src/components/Progress/StyledProgress.tsx","webpack://_N_E/./packages/uikit/src/components/Progress/types.ts","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/views/Voting/Proposal/Details.tsx","webpack://_N_E/./src/views/Voting/components/TextEllipsis.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/types.ts","webpack://_N_E/./src/views/Voting/Proposal/Results.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/MainView.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/index.tsx","webpack://_N_E/./src/views/Voting/Proposal/Vote.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/VotesLoading.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/Row.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/VoteRow.tsx","webpack://_N_E/./src/views/Voting/Proposal/Votes.tsx","webpack://_N_E/./src/views/Voting/Proposal/Overview.tsx","webpack://_N_E/./src/pages/voting/proposal/[id].tsx","webpack://_N_E/./src/views/NotFound.tsx","webpack://_N_E/./src/views/Page.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/voting/proposal/[id]\",\n      function () {\n        return require(\"private-next-pages/voting/proposal/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/voting/proposal/[id]\"])\n      });\n    }\n  ","import styled from \"styled-components\";\n\nconst ProgressBunnyWrapper = styled.div`\n  display: flex;\n  z-index: 2;\n  top: -65%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  transition: left 200ms ease-out;\n`;\n\nexport default ProgressBunnyWrapper;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 34 38\" {...props}>\n      <rect x=\"8.83594\" width=\"5.30132\" height=\"17.3191\" rx=\"2.65066\" fill=\"#D1884F\" />\n      <rect x=\"19.4385\" width=\"5.30132\" height=\"17.3191\" rx=\"2.65066\" fill=\"#D1884F\" />\n      <path\n        d=\"M8.5 13.0084C13.1944 8.40751 20.8056 8.40751 25.5 13.0084C30.1944 17.6093 30.1944 25.0689 25.5 29.6698L17.6538 37.3597C17.2927 37.7136 16.7073 37.7136 16.3462 37.3597L8.5 29.6698C3.80558 25.0689 3.80558 17.6093 8.5 13.0084Z\"\n        fill=\"#D1884F\"\n      />\n      <ellipse cx=\"12.3696\" cy=\"19.9172\" rx=\"1.76711\" ry=\"2.59786\" fill=\"white\" />\n      <ellipse cx=\"21.2056\" cy=\"19.9172\" rx=\"1.76711\" ry=\"2.59786\" fill=\"white\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport StyledProgress, { Bar } from \"./StyledProgress\";\nimport ProgressBunnyWrapper from \"./ProgressBunnyWrapper\";\nimport { ProgressBunny } from \"../Svg\";\nimport { ProgressProps, variants, scales } from \"./types\";\n\nconst stepGuard = (step: number) => {\n  if (step < 0) {\n    return 0;\n  }\n\n  if (step > 100) {\n    return 100;\n  }\n\n  return step;\n};\n\nconst Progress: React.FC<ProgressProps> = ({\n  variant = variants.ROUND,\n  scale = scales.MD,\n  primaryStep = 0,\n  secondaryStep = null,\n  showProgressBunny = false,\n  useDark = true,\n  children,\n}) => {\n  return (\n    <StyledProgress $useDark={useDark} variant={variant} scale={scale}>\n      {children || (\n        <>\n          {showProgressBunny && (\n            <ProgressBunnyWrapper style={{ left: `${stepGuard(primaryStep)}%` }}>\n              <ProgressBunny />\n            </ProgressBunnyWrapper>\n          )}\n          <Bar $useDark={useDark} primary style={{ width: `${stepGuard(primaryStep)}%` }} />\n          {secondaryStep ? <Bar $useDark={useDark} style={{ width: `${stepGuard(secondaryStep)}%` }} /> : null}\n        </>\n      )}\n    </StyledProgress>\n  );\n};\n\nexport default Progress;\n","import { variants, scales } from \"./types\";\n\nexport const styleVariants = {\n  [variants.ROUND]: {\n    borderRadius: \"32px\",\n  },\n  [variants.FLAT]: {\n    borderRadius: 0,\n  },\n};\n\nexport const styleScales = {\n  [scales.MD]: {\n    height: \"16px\",\n  },\n  [scales.SM]: {\n    height: \"8px\",\n  },\n};\n\nexport default styleVariants;\n","import styled from \"styled-components\";\nimport { space, variant as StyledSystemVariant } from \"styled-system\";\nimport { lightColors } from \"../../theme\";\nimport { styleVariants, styleScales } from \"./themes\";\nimport { ProgressProps, variants } from \"./types\";\n\ninterface ProgressBarProps {\n  primary?: boolean;\n  $useDark: boolean;\n  $background?: string;\n}\n\nexport const Bar = styled.div<ProgressBarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: ${({ theme, $useDark, primary, $background }) => {\n    if ($background) return $background;\n    if ($useDark) return primary ? theme.colors.secondary : `${theme.colors.secondary}80`;\n    return primary ? lightColors.secondary : `${lightColors.secondary}80`;\n  }};\n  height: 100%;\n  transition: width 200ms ease;\n`;\n\nBar.defaultProps = {\n  primary: false,\n};\n\ninterface StyledProgressProps {\n  variant: ProgressProps[\"variant\"];\n  scale: ProgressProps[\"scale\"];\n  $useDark: boolean;\n}\n\nconst StyledProgress = styled.div<StyledProgressProps>`\n  position: relative;\n  background-color: ${({ theme, $useDark }) => ($useDark ? theme.colors.input : lightColors.input)};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  overflow: hidden;\n\n  ${Bar} {\n    border-top-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n    border-bottom-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n  }\n\n  ${StyledSystemVariant({\n    variants: styleVariants,\n  })}\n  ${StyledSystemVariant({\n    prop: \"scale\",\n    variants: styleScales,\n  })}\n  ${space}\n`;\n\nexport default StyledProgress;\n","export const variants = {\n  ROUND: \"round\",\n  FLAT: \"flat\",\n} as const;\n\nexport const scales = {\n  MD: \"md\",\n  SM: \"sm\",\n} as const;\n\nexport type Scale = typeof scales[keyof typeof scales];\n\nexport type Variant = typeof variants[keyof typeof variants];\n\nexport interface ProgressProps {\n  variant?: Variant;\n  scale?: Scale;\n  primaryStep?: number;\n  secondaryStep?: number;\n  showProgressBunny?: boolean;\n  useDark?: boolean;\n}\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Proposal } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { IPFS_GATEWAY } from '../config'\nimport { ProposalStateTag } from '../components/Proposals/tags'\n\ninterface DetailsProps {\n  proposal: Proposal\n}\n\nconst DetailBox = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\n  const { t } = useTranslation()\n  const startDate = new Date(proposal.start * 1000)\n  const endDate = new Date(proposal.end * 1000)\n\n  return (\n    <Card mb=\"16px\">\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Details')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\n            {proposal.id.slice(0, 8)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.author, 'address')} ml=\"8px\">\n            {truncateHash(proposal.author)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.snapshot, 'block')} ml=\"8px\">\n            {proposal.snapshot}\n          </LinkExternal>\n        </Flex>\n        <DetailBox p=\"16px\">\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('Start Date')}\n            </Text>\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('End Date')}\n            </Text>\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n        </DetailBox>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst TextEllipsis = styled(Text)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport default TextEllipsis\n","import { InjectedModalProps } from '@pancakeswap/uikit'\n\nexport enum ConfirmVoteView {\n  MAIN = 'main',\n  DETAILS = 'details',\n}\n\nexport interface CastVoteModalProps extends InjectedModalProps {\n  onSuccess: () => Promise<void>\n  proposalId: string\n  vote: {\n    label: string\n    value: number\n  }\n  block?: number\n}\n","import {\n  Box,\n  Text,\n  Flex,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Progress,\n  Skeleton,\n  Tag,\n  CheckmarkCircleIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Vote } from 'state/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { FetchStatus } from 'config/constants/types'\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\nimport TextEllipsis from '../components/TextEllipsis'\n\ninterface ResultsProps {\n  choices: string[]\n  votes: Vote[]\n  votesLoadingStatus: FetchStatus\n}\n\nconst Results: React.FC<ResultsProps> = ({ choices, votes, votesLoadingStatus }) => {\n  const { t } = useTranslation()\n  const results = calculateVoteResults(votes)\n  const { account } = useWeb3React()\n  const totalVotes = getTotalFromVotes(votes)\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Current Results')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {votesLoadingStatus === FetchStatus.Fetched &&\n          choices.map((choice, index) => {\n            const choiceVotes = results[choice] || []\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\n            const progress = totalVotes === 0 ? 0 : (totalChoiceVote / totalVotes) * 100\n            const hasVoted = choiceVotes.some((vote) => {\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\n            })\n\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                  {hasVoted && (\n                    <Tag variant=\"success\" outline ml=\"8px\">\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n                    </Tag>\n                  )}\n                </Flex>\n                <Box mb=\"4px\">\n                  <Progress primaryStep={progress} scale=\"sm\" />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: formatNumber(totalChoiceVote, 0, 2) })}</Text>\n                  <Text>\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\n                  </Text>\n                </Flex>\n              </Box>\n            )\n          })}\n\n        {votesLoadingStatus === FetchStatus.Fetching &&\n          choices.map((choice, index) => {\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                </Flex>\n                <Box mb=\"4px\">\n                  <Skeleton height=\"36px\" mb=\"4px\" />\n                </Box>\n              </Box>\n            )\n          })}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Results\n","import { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon, Message } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBox, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  isError: boolean\n  total: number\n  disabled?: boolean\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<MainViewProps> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  isError,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n  disabled,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading && !isError ? (\n          <Skeleton height=\"64px\" mb=\"12px\" />\n        ) : isError ? (\n          <Message variant=\"danger\" mb=\"12px\">\n            <Text color=\"text\">{t('Error occurred, please try again later')}</Text>\n          </Message>\n        ) : (\n          <>\n            <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n              <Text bold fontSize=\"20px\" color={total === 0 ? 'failure' : 'text'}>\n                {formatNumber(total, 0, 3)}\n              </Text>\n              <IconButton scale=\"sm\" variant=\"text\">\n                <ChevronRightIcon width=\"24px\" />\n              </IconButton>\n            </VotingBox>\n            {total === 0 ? (\n              <Message variant=\"danger\" mb=\"12px\">\n                <Text color=\"danger\">\n                  {t(\n                    'Hold some CAKE in your wallet or on PancakeSwap at the snapshot block to get voting power for future proposals.',\n                  )}\n                </Text>\n              </Message>\n            ) : (\n              <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n                {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n              </Text>\n            )}\n          </>\n        )}\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={disabled || isLoading || total === 0}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n","import { useState } from 'react'\nimport { Box, Modal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { SnapshotCommand } from 'state/types'\nimport { signMessage } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\nimport MainView from './MainView'\nimport DetailsView from './DetailsView'\nimport { generatePayloadData, Message, sendSnapshotData } from '../../helpers'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\n\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const [isPending, setIsPending] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { library, connector } = useWeb3Provider()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    isError,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    ifoPoolBalance,\n  } = useGetVotingPower(block, modalIsOpen)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n        },\n      })\n\n      const sig = await signMessage(connector, library, account, voteMsg)\n      const msg: Message = { address: account, msg: voteMsg, sig }\n\n      // Save proposal to snapshot\n      await sendSnapshotData(msg)\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      toastError(t('Error'), (error as Error)?.message ?? t('Error occurred, please try again'))\n      console.error(error)\n    } finally {\n      setIsPending(false)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Box mb=\"24px\" width=\"320px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isError={isError}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            ifoPoolBalance={ifoPoolBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n            block={block}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Proposal } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport CastVoteModal from '../components/CastVoteModal'\n\ninterface VoteProps extends CardProps {\n  proposal: Proposal\n  onSuccess?: () => void\n}\n\ninterface State {\n  label: string\n  value: number\n}\n\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\n  align-items: center;\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 16px;\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`\n\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`\n\nconst Vote: React.FC<VoteProps> = ({ proposal, onSuccess, ...props }) => {\n  const [vote, setVote] = useState<State>(null)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { account } = useWeb3React()\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'))\n    if (onSuccess) {\n      onSuccess()\n    }\n  }\n\n  const [presentCastVoteModal] = useModal(\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\n  )\n\n  return (\n    <Card {...props}>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Cast your vote')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {proposal.choices.map((choice, index) => {\n          const isChecked = index + 1 === vote?.value\n\n          const handleChange = () => {\n            setVote({\n              label: choice,\n              value: index + 1,\n            })\n          }\n\n          return (\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\n              <div style={{ flexShrink: 0 }}>\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\n              </div>\n              <ChoiceText>\n                <Text as=\"span\" title={choice}>\n                  {choice}\n                </Text>\n              </ChoiceText>\n            </Choice>\n          )\n        })}\n        {account ? (\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\n            {t('Cast Vote')}\n          </Button>\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Vote\n","import { Box, Flex, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\nimport styled from 'styled-components'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  flex: 1;\n`\n\nconst VotesLoading = () => {\n  return (\n    <Box>\n      {times(10).map((index) => (\n        <Row key={index}>\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\n        </Row>\n      ))}\n    </Box>\n  )\n}\n\nexport default VotesLoading\n","import styled from 'styled-components'\nimport { Grid, Box } from '@pancakeswap/uikit'\n\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: address;\n`\n\nexport const ChoiceColumn = styled(Box)`\n  grid-area: choice;\n  overflow: hidden;\n`\n\nexport const VotingPowerColumn = styled(Box)`\n  justify-self: end;\n  grid-area: vote;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  grid-gap: 8px;\n  grid-template-areas:\n    'address address address'\n    'choice choice vote';\n  grid-template-columns: 1fr 1fr 120px;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    grid-template-areas: 'address choice vote';\n    padding: 16px 24px;\n  }\n`\n\nexport default Row\n","import { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport truncateHash from 'utils/truncateHash'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote } from 'state/types'\nimport { IPFS_GATEWAY } from '../../config'\nimport TextEllipsis from '../TextEllipsis'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\n\ninterface VoteRowProps {\n  vote: Vote\n  isVoter: boolean\n}\n\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\n  const { t } = useTranslation()\n  const hasVotingPower = !!vote.metadata?.votingPower\n\n  const votingPower = hasVotingPower\n    ? parseFloat(vote.metadata.votingPower).toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 3,\n      })\n    : '--'\n\n  return (\n    <Row>\n      <AddressColumn>\n        <Flex alignItems=\"center\">\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateHash(vote.voter)}</LinkExternal>\n          {isVoter && (\n            <Tag variant=\"success\" outline ml=\"8px\">\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n            </Tag>\n          )}\n        </Flex>\n      </AddressColumn>\n      <ChoiceColumn>\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\n          {vote.proposal.choices[vote.choice - 1]}\n        </TextEllipsis>\n      </ChoiceColumn>\n      <VotingPowerColumn>\n        <Flex alignItems=\"center\" justifyContent=\"end\">\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\n        </Flex>\n      </VotingPowerColumn>\n    </Row>\n  )\n}\n\nexport default VoteRow\n","import { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote } from 'state/types'\nimport { FetchStatus } from 'config/constants/types'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\n\nconst VOTES_PER_VIEW = 20\n\ninterface VotesProps {\n  votes: Vote[]\n  totalVotes?: number\n  votesLoadingStatus: FetchStatus\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  let votingPower = parseFloat(incomingVote?.metadata?.votingPower)\n  if (!votingPower) votingPower = 0\n  return votingPower\n}\n\nconst Votes: React.FC<VotesProps> = ({ votes, votesLoadingStatus, totalVotes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const isFetched = votesLoadingStatus === FetchStatus.Fetched\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: totalVotes ? totalVotes.toLocaleString() : '-' })}\n          </Heading>\n          {!isFetched && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFetched && <VotesLoading />}\n\n      {isFetched && displayVotes.length > 0 && (\n        <>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFetched}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFetched && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n","import { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { PageMeta } from 'components/Layout/Page'\nimport { getAllVotes, getProposal } from 'state/voting/helpers'\nimport { useWeb3React } from '@web3-react/core'\nimport useSWRImmutable from 'swr/immutable'\nimport { ProposalState } from 'state/types'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport NotFound from 'views/NotFound'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { FetchStatus } from 'config/constants/types'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\n\nconst Overview = () => {\n  const { query, isFallback } = useRouter()\n  const id = query.id as string\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    status: proposalLoadingStatus,\n    data: proposal,\n    error,\n  } = useSWRImmutable(id ? ['proposal', id] : null, () => getProposal(id))\n\n  const {\n    status: votesLoadingStatus,\n    data: votes,\n    mutate: refetch,\n  } = useSWRImmutable(proposal ? ['proposal', proposal, 'votes'] : null, async () => getAllVotes(proposal))\n  const hasAccountVoted = account && votes && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n\n  const isPageLoading = votesLoadingStatus === FetchStatus.Fetching || proposalLoadingStatus === FetchStatus.Fetching\n\n  if (!proposal && error) {\n    return <NotFound />\n  }\n\n  if (isFallback || !proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"40px\">\n        <Link href=\"/voting\" passHref>\n          <Button as=\"a\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n            {t('Back to Vote Overview')}\n          </Button>\n        </Link>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} onSuccess={refetch} mb=\"16px\" />\n          )}\n          <Votes votes={votes} totalVotes={votes?.length ?? proposal.votes} votesLoadingStatus={votesLoadingStatus} />\n        </Box>\n        <Box position=\"sticky\" top=\"60px\">\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} votesLoadingStatus={votesLoadingStatus} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Overview\n","// eslint-disable-next-line camelcase\nimport { SWRConfig, unstable_serialize } from 'swr'\nimport { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from 'next'\nimport { getProposal } from 'state/voting/helpers'\nimport { ProposalState } from 'state/types'\nimport Overview from 'views/Voting/Proposal/Overview'\n\nconst ProposalPage = ({ fallback = {} }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <SWRConfig\n      value={{\n        fallback,\n      }}\n    >\n      <Overview />\n    </SWRConfig>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  return {\n    fallback: true,\n    paths: [],\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { id } = params\n  if (typeof id !== 'string') {\n    return {\n      notFound: true,\n    }\n  }\n\n  try {\n    const fetchedProposal = await getProposal(id)\n    if (!fetchedProposal) {\n      return {\n        notFound: true,\n        revalidate: 1,\n      }\n    }\n    return {\n      props: {\n        fallback: {\n          [unstable_serialize(['proposal', id])]: fetchedProposal,\n        },\n      },\n      revalidate:\n        fetchedProposal.state === ProposalState.CLOSED\n          ? 60 * 60 * 12 // 12 hour\n          : 3,\n    }\n  } catch (error) {\n    return {\n      props: {\n        fallback: {},\n      },\n      revalidate: 60,\n    }\n  }\n}\n\nexport default ProposalPage\n","import styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Link from 'next/link'\nimport Page from './Page'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst NotFound = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading scale=\"xl\">Comming Soon</Heading>\n        <Text mb=\"16px\">Please Stay tuned</Text>\n        <Link href=\"/\" passHref>\n          <Button as=\"a\" scale=\"sm\">\n            {t('Back')}\n          </Button>\n        </Link>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","import styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { PageMeta } from 'components/Layout/Page'\nimport { EXCHANGE_DOCS_URLS } from 'config/constants'\n\nconst StyledPage = styled.div<{ $removePadding: boolean; $noMinHeight }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: ${({ $removePadding }) => ($removePadding ? '0' : '16px')};\n  padding-bottom: 0;\n  min-height: calc(100vh - 50px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '24px')};\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: ${({ $removePadding }) => ($removePadding ? '0' : '32px')};\n    padding-bottom: 0;\n  }\n`\n\nconst Page: React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    removePadding?: boolean\n    hideFooterOnDesktop?: boolean\n    noMinHeight?: boolean\n    helpUrl?: string\n  }\n> = ({\n  children,\n  removePadding = false,\n  hideFooterOnDesktop = false,\n  noMinHeight = false,\n  helpUrl = EXCHANGE_DOCS_URLS,\n  ...props\n}) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage $removePadding={removePadding} $noMinHeight={noMinHeight} {...props}>\n        {children}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n"],"names":["window","__NEXT_P","push","styled","props","Svg","viewBox","rect","x","width","height","rx","fill","path","d","ellipse","cx","cy","ry","stepGuard","step","variant","variants","scale","scales","primaryStep","secondaryStep","showProgressBunny","useDark","children","StyledProgress","$useDark","ProgressBunnyWrapper","style","left","ProgressBunny","Bar","primary","styleVariants","borderRadius","styleScales","theme","$background","colors","secondary","lightColors","defaultProps","input","shadows","inset","StyledSystemVariant","prop","space","ROUND","FLAT","MD","SM","Wrapper","Page","Spinner","DetailBox","Box","background","cardBorder","proposal","useTranslation","t","startDate","Date","start","endDate","end","Card","mb","CardHeader","Heading","as","CardBody","Flex","alignItems","Text","color","LinkExternal","href","IPFS_GATEWAY","id","ml","slice","getBscScanLink","author","truncateHash","snapshot","p","ProposalStateTag","proposalState","state","fontSize","format","choices","votes","votesLoadingStatus","results","calculateVoteResults","useWeb3React","account","totalVotes","getTotalFromVotes","FetchStatus","map","choice","index","choiceVotes","totalChoiceVote","progress","hasVoted","some","vote","voter","toLowerCase","mt","TextEllipsis","title","Tag","outline","CheckmarkCircleIcon","mr","Progress","justifyContent","total","formatNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","Skeleton","ConfirmVoteView","isPending","isLoading","isError","onConfirm","onViewDetails","onDismiss","disabled","ModalInner","textTransform","bold","label","Message","VotingBox","onClick","cursor","IconButton","ChevronRightIcon","Button","endIcon","AutoRenewIcon","spin","onSuccess","proposalId","block","useState","MAIN","useToast","toastError","useWeb3Provider","library","connector","useTheme","useGetVotingPower","modalIsOpen","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","isStartView","view","handleBack","setView","DETAILS","handleDismiss","setModalIsOpen","handleConfirmVote","voteMsg","sig","msg","setIsPending","JSON","stringify","generatePayloadData","type","SnapshotCommand","payload","value","signMessage","address","sendSnapshotData","message","console","error","Modal","onBack","hideCloseButton","headerBackground","gradients","cardHeader","MainView","DetailsView","Choice","isChecked","isDisabled","ChoiceText","toastSuccess","handleSuccess","presentCastVoteModal","useModal","CastVoteModal","Number","div","flexShrink","Radio","checked","onChange","setVote","ConnectWalletButton","Row","StyledSkeleton","times","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","mediaQueries","sm","isVoter","hasVotingPower","metadata","votingPower","parseFloat","parseVotePower","incomingVote","orderedVotes","orderBy","displayVotes","showAll","isFetched","count","VotesLoading","length","VoteRow","py","px","setShowAll","ChevronUpIcon","ChevronDownIcon","useRouter","query","isFallback","useSWRImmutable","getProposal","status","data","getAllVotes","mutate","hasAccountVoted","isPageLoading","proposalLoadingStatus","NotFound","PageLoader","Container","PageMeta","Link","passHref","startIcon","ArrowBackIcon","Layout","ProposalTypeTag","isCoreProposal","ReactMarkdown","body","ProposalState","Vote","refetch","Votes","position","top","Details","Results","fallback","SWRConfig","Overview","StyledNotFound","LogoIcon","StyledPage","$removePadding","bubblegum","xs","lg","removePadding","hideFooterOnDesktop","noMinHeight","helpUrl","EXCHANGE_DOCS_URLS","$noMinHeight"],"sourceRoot":""}