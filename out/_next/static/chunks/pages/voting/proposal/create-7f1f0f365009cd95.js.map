{"version":3,"file":"static/chunks/pages/voting/proposal/create-7f1f0f365009cd95.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/uniqueId.js","webpack://_N_E/?8dc4","webpack://_N_E/./packages/uikit/src/components/Breadcrumbs/Breadcrumbs.tsx","webpack://_N_E/./src/views/Voting/CreateProposal/styles.tsx","webpack://_N_E/./src/views/Voting/CreateProposal/Choice.tsx","webpack://_N_E/./src/views/Voting/CreateProposal/Choices.tsx","webpack://_N_E/./src/views/Voting/CreateProposal/helpers.ts","webpack://_N_E/./src/views/Voting/components/VoteDetailsModal.tsx","webpack://_N_E/./src/views/Voting/CreateProposal/index.tsx","webpack://_N_E/./src/pages/voting/proposal/create.tsx","webpack://_N_E/./src/views/Voting/components/DatePicker/DatePicker.tsx","webpack://_N_E/./src/views/Voting/components/DatePicker/DatePickerPortal.tsx","webpack://_N_E/./src/views/Voting/components/DatePicker/TimePicker.tsx"],"sourcesContent":["var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/voting/proposal/create\",\n      function () {\n        return require(\"private-next-pages/voting/proposal/create.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/voting/proposal/create\"])\n      });\n    }\n  ","/* eslint-disable react/no-array-index-key */\nimport React, { Children, isValidElement, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport ChevronRightIcon from \"../Svg/Icons/ChevronRight\";\nimport { BreadcrumbsProps } from \"./types\";\n\nconst Separator = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.textDisabled};\n  display: flex;\n  justify-content: center;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nconst StyledBreadcrumbs = styled.ul`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n\n  a {\n    color: ${({ theme }) => theme.colors.primary};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.primaryBright};\n    }\n  }\n\n  ${space}\n`;\n\nconst insertSeparators = (items: ReactNode[], separator: BreadcrumbsProps[\"separator\"]) =>\n  items.reduce((accum: ReactNode[], item, index) => {\n    if (index === 0) {\n      return [...accum, item];\n    }\n\n    return [\n      ...accum,\n      <Separator aria-hidden key={`seperator-${index}`}>\n        {separator}\n      </Separator>,\n      item,\n    ];\n  }, []);\n\nconst DefaultSeparator = <ChevronRightIcon color=\"currentColor\" width=\"24px\" />;\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ separator = DefaultSeparator, children }) => {\n  const validItems = Children.toArray(children).filter((child) => isValidElement(child));\n  const items = insertSeparators(validItems, separator);\n\n  return (\n    <StyledBreadcrumbs>\n      {items.map((item, index) => (\n        <li key={`child-${index}`}>{item}</li>\n      ))}\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n","import { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    ifoPoolBalance,\n  } = useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"328px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              ifoPoolBalance={ifoPoolBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n              block={block}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import { ChangeEvent, FormEvent, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker, DatePickerPortal } from 'views/Voting/components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport { PageMeta } from 'components/Layout/Page'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport dynamic from 'next/dynamic'\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = dynamic(() => import('components/EasyMde'), {\n  ssr: false,\n})\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useRouter()\n  const { library, connector } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(connector, library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnapshotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), (error as Error)?.message)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(() => {\n    return {\n      hideIcons:\n        account && ADMINS.includes(account.toLowerCase())\n          ? []\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }\n  }, [account])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <Link href=\"/\">{t('Home')}</Link>\n          <Link href=\"/voting\">{t('Voting')}</Link>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n      <DatePickerPortal />\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","import CreateProposal from '../../../views/Voting/CreateProposal'\n\nexport default CreateProposal\n","import ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    background-color: ${({ theme }) => theme.card.background};\n\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.cardBorder};\n    }\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item--selected {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n"],"names":["toString","idCounter","module","exports","prefix","id","window","__NEXT_P","push","Separator","styled","theme","colors","textDisabled","mediaQueries","sm","md","StyledBreadcrumbs","primary","primaryBright","space","DefaultSeparator","ChevronRightIcon","color","width","separator","children","items","reduce","accum","item","index","aria-hidden","insertSeparators","Children","filter","child","isValidElement","map","li","BaseLabel","text","Label","SecondaryLabel","FormError","Text","mb","FormErrors","errors","Box","mt","error","onRemove","onTextInput","props","useState","position","Input","onChange","evt","currentTarget","value","setIsWarning","isDirty","length","setIsDirty","isWarning","right","top","zIndex","IconButton","variant","onClick","CloseIcon","makeChoice","uniqueId","choices","useTranslation","t","hasMinimumChoices","choice","Card","CardHeader","Heading","as","scale","CardBody","Choice","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","Button","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","block","onDismiss","useGetVotingPower","modalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","useTheme","Modal","title","setModalIsOpen","headerBackground","gradients","cardHeader","Flex","height","alignItems","justifyContent","Spinner","size","DetailsView","EasyMde","dynamic","ssr","name","body","times","startDate","startTime","endDate","endTime","snapshot","useWeb3React","account","initialBlock","useInitialBlock","useRouter","useWeb3Provider","library","connector","useToast","toastSuccess","toastError","onPresentVoteDetailsModal","useModal","VoteDetailsModal","state","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","proposal","sig","msg","data","preventDefault","setIsLoading","JSON","stringify","generatePayloadData","SnapshotCommand","payload","start","end","metadata","generateMetaData","signMessage","address","sendSnapshotData","ipfsHash","message","console","updateValue","key","setState","prevState","setFieldsState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMINS","toLowerCase","useEffect","Container","py","PageMeta","Breadcrumbs","Link","href","form","onSubmit","Layout","htmlFor","inputName","required","fieldsState","onTextChange","p","px","ReactMarkdown","Choices","DatePicker","selected","placeholderText","TimePicker","mr","LinkExternal","getBscScanLink","truncateHash","endIcon","AutoRenewIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","DatePickerPortal","inputProps","ReactDatePicker","customInput","portalId","dateFormat","StyledDatePickerPortal","card","background","cardBorder","input","secondary","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption"],"sourceRoot":""}