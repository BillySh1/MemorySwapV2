{"version":3,"file":"static/chunks/pages/info/pools/[address]-103c55aab38a438b.js","mappings":"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","sources":["webpack://_N_E/?3ab7","webpack://_N_E/./src/views/Info/Pools/PoolPage.tsx","webpack://_N_E/./src/pages/info/pools/[address].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/info/pools/[address]\",\n      function () {\n        return require(\"private-next-pages/info/pools/[address].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/info/pools/[address]\"])\n      });\n    }\n  ","/* eslint-disable no-nested-ternary */\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  ButtonMenu,\n  ButtonMenuItem,\n  Card,\n  Flex,\n  Heading,\n  HelpIcon,\n  LinkExternal,\n  Spinner,\n  Text,\n  useMatchBreakpoints,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { useTranslation } from 'contexts/Localization'\nimport { useState } from 'react'\nimport { usePoolChartData, usePoolDatas, usePoolTransactions } from 'state/info/hooks'\nimport { useWatchlistPools } from 'state/user/hooks'\nimport styled from 'styled-components'\nimport { getBscScanLink } from 'utils'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport { formatAmount } from 'utils/formatInfoNumbers'\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-gap: 1em;\n  margin-top: 16px;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst TokenButton = styled(Flex)`\n  padding: 8px 0px;\n  margin-right: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst LockedTokensContainer = styled(Flex)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 16px;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 8px;\n  border-radius: 16px;\n  max-width: 280px;\n`\n\nconst PoolPage: React.FC<{ address: string }> = ({ address: routeAddress }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const [showWeeklyData, setShowWeeklyData] = useState(0)\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {},\n  )\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const poolData = usePoolDatas([address])[0]\n  const chartData = usePoolChartData(address)\n  const transactions = usePoolTransactions(address)\n\n  const [watchlistPools, addPoolToWatchlist] = useWatchlistPools()\n\n  return (\n    <Page symbol={poolData ? `${poolData?.token0.symbol} / ${poolData?.token1.symbol}` : null}>\n      {poolData ? (\n        <>\n          <Flex justifyContent=\"space-between\" mb=\"16px\" flexDirection={['column', 'column', 'row']}>\n            <Breadcrumbs mb=\"32px\">\n              <NextLinkFromReactRouter to=\"/info\">\n                <Text color=\"primary\">{t('Info')}</Text>\n              </NextLinkFromReactRouter>\n              <NextLinkFromReactRouter to=\"/info/pools\">\n                <Text color=\"primary\">{t('Pools')}</Text>\n              </NextLinkFromReactRouter>\n              <Flex>\n                <Text mr=\"8px\">{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n              </Flex>\n            </Breadcrumbs>\n            <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n              <LinkExternal mr=\"8px\" href={getBscScanLink(address, 'address')}>\n                {t('View on BscScan')}\n              </LinkExternal>\n              <SaveIcon fill={watchlistPools.includes(address)} onClick={() => addPoolToWatchlist(address)} />\n            </Flex>\n          </Flex>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb={['8px', null]}>\n              <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={32} />\n              <Text\n                ml=\"38px\"\n                bold\n                fontSize={isXs || isSm ? '24px' : '40px'}\n                id=\"info-pool-pair-title\"\n              >{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection={['column', 'column', 'row']} mb={['8px', '8px', null]}>\n                <NextLinkFromReactRouter to={`/info/token/${poolData.token0.address}`}>\n                  <TokenButton>\n                    <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token1.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </NextLinkFromReactRouter>\n                <NextLinkFromReactRouter to={`/info/token/${poolData.token1.address}`}>\n                  <TokenButton ml={[null, null, '10px']}>\n                    <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token0.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </NextLinkFromReactRouter>\n              </Flex>\n              <Flex>\n                <NextLinkFromReactRouter to={`/add/${poolData.token0.address}/${poolData.token1.address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </NextLinkFromReactRouter>\n                <NextLinkFromReactRouter\n                  to={`/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}\n                >\n                  <Button>{t('Trade')}</Button>\n                </NextLinkFromReactRouter>\n              </Flex>\n            </Flex>\n          </Flex>\n          <ContentLayout>\n            <Box>\n              <Card>\n                <Box p=\"24px\">\n                  <Flex justifyContent=\"space-between\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('Liquidity')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${formatAmount(poolData.liquidityUSD)}\n                      </Text>\n                      <Percent value={poolData.liquidityUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('LP reward APR')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        {formatAmount(poolData.lpApr7d)}%\n                      </Text>\n                      <Flex alignItems=\"center\">\n                        <span ref={targetRef}>\n                          <HelpIcon color=\"textSubtle\" />\n                        </span>\n                        <Text ml=\"4px\" fontSize=\"12px\" color=\"textSubtle\">\n                          {t('7D performance')}\n                        </Text>\n                        {tooltipVisible && tooltip}\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  <Text color=\"secondary\" bold mt=\"24px\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Total Tokens Locked')}\n                  </Text>\n                  <LockedTokensContainer>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token0.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken0)}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token1.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken1)}</Text>\n                    </Flex>\n                  </LockedTokensContainer>\n                </Box>\n              </Card>\n              <Card mt=\"16px\">\n                <Flex flexDirection=\"column\" p=\"24px\">\n                  <ButtonMenu\n                    activeIndex={showWeeklyData}\n                    onItemClick={(index) => setShowWeeklyData(index)}\n                    scale=\"sm\"\n                    variant=\"subtle\"\n                  >\n                    <ButtonMenuItem width=\"100%\">{t('24H')}</ButtonMenuItem>\n                    <ButtonMenuItem width=\"100%\">{t('7D')}</ButtonMenuItem>\n                  </ButtonMenu>\n                  <Flex mt=\"24px\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('Volume 7D') : t('Volume 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.volumeUSDWeek) : formatAmount(poolData.volumeUSD)}\n                      </Text>\n                      <Percent value={showWeeklyData ? poolData.volumeUSDChangeWeek : poolData.volumeUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('LP reward fees 7D') : t('LP reward fees 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.lpFees7d) : formatAmount(poolData.lpFees24h)}\n                      </Text>\n                      <Text color=\"textSubtle\" fontSize=\"12px\">\n                        {t('out of $%totalFees% total fees', {\n                          totalFees: showWeeklyData\n                            ? formatAmount(poolData.totalFees7d)\n                            : formatAmount(poolData.totalFees24h),\n                        })}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Card>\n            </Box>\n            <ChartCard variant=\"pool\" chartData={chartData} />\n          </ContentLayout>\n          <Heading mb=\"16px\" mt=\"40px\" scale=\"lg\">\n            {t('Transactions')}\n          </Heading>\n          <TransactionTable transactions={transactions} />\n        </>\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <Spinner />\n        </Flex>\n      )}\n    </Page>\n  )\n}\n\nexport default PoolPage\n","import { useRouter } from 'next/router'\nimport { InfoPageLayout } from 'views/Info'\nimport Pool from 'views/Info/Pools/PoolPage'\n\nconst PoolPage = () => {\n  const router = useRouter()\n  return <Pool address={String(router.query.address)} />\n}\n\nPoolPage.Layout = InfoPageLayout\n\nexport default PoolPage\n"],"names":["window","__NEXT_P","push","ContentLayout","styled","TokenButton","Flex","LockedTokensContainer","theme","colors","cardBorder","background","address","useMatchBreakpoints","isXs","isSm","useTranslation","t","useState","useTooltip","tooltip","tooltipVisible","targetRef","routeAddress","toLowerCase","poolData","usePoolDatas","chartData","usePoolChartData","transactions","usePoolTransactions","useWatchlistPools","watchlistPools","addPoolToWatchlist","Page","symbol","token0","token1","justifyContent","mb","flexDirection","Breadcrumbs","NextLinkFromReactRouter","to","Text","color","mr","mt","LinkExternal","href","getBscScanLink","SaveIcon","fill","includes","onClick","alignItems","DoubleCurrencyLogo","address0","address1","size","ml","bold","fontSize","id","CurrencyLogo","style","whiteSpace","width","formatAmount","token1Price","notation","displayThreshold","tokenPrecision","token0Price","Button","variant","Box","Card","p","flex","textTransform","liquidityUSD","Percent","value","liquidityUSDChange","lpApr7d","span","ref","HelpIcon","small","liquidityToken0","liquidityToken1","ButtonMenu","activeIndex","showWeeklyData","onItemClick","index","setShowWeeklyData","scale","ButtonMenuItem","volumeUSDWeek","volumeUSD","volumeUSDChangeWeek","volumeUSDChange","lpFees7d","lpFees24h","totalFees","totalFees7d","totalFees24h","ChartCard","Heading","TransactionTable","Spinner","PoolPage","router","useRouter","Pool","String","query","Layout","InfoPageLayout"],"sourceRoot":""}