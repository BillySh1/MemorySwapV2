{"version":3,"file":"static/chunks/pages/nfts/activity-e44ee583da31fa4a.js","mappings":"sFAAA,IAAIA,EAAY,EAAQ,KACpBC,EAAc,EAAQ,OAa1BC,EAAOC,QAJP,SAAsBC,GACpB,OAAOH,EAAYD,EAAUI,M,sBCX/B,IAAIH,EAAc,EAAQ,OACtBI,EAAS,EAAQ,OAarBH,EAAOC,QAJP,SAAqBG,GACnB,OAAOL,EAAYI,EAAOC,M,sBCX5B,IAAIC,EAAa,EAAQ,OA2BzBL,EAAOC,QAjBP,SAAqBC,EAAOI,GAC1B,IAAIC,GAAS,EACTC,EAASN,EAAMM,OACfC,EAAYD,EAAS,EAGzB,IADAF,OAAgBI,IAATJ,EAAqBE,EAASF,IAC5BC,EAAQD,GAAM,CACrB,IAAIK,EAAON,EAAWE,EAAOE,GACzBG,EAAQV,EAAMS,GAElBT,EAAMS,GAAQT,EAAMK,GACpBL,EAAMK,GAASK,EAGjB,OADAV,EAAMM,OAASF,EACRJ,I,sBCxBT,IAAIW,EAAe,EAAQ,OACvBC,EAAc,EAAQ,OACtBC,EAAU,EAAQ,MAsBtBf,EAAOC,QALP,SAAiBG,GAEf,OADWW,EAAQX,GAAcS,EAAeC,GACpCV,K,uBCpBTY,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,iBACA,WACE,OAAO,EAAQ,W,gHCJvB,kB,ywBAKA,IAAMC,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAI,Y,6BAAXD,C,KACE,Y,IAAGE,EAAK,EAALA,M,OAAiB,EAAVC,YAA+BD,EAAME,OAAOC,UAAUC,aAG1EC,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAU,Y,6BAAjBR,C,KAWd,EAN8C,Y,IAAGG,EAAU,EAAVA,WAAYM,EAAQ,EAARA,SAAaC,EAAK,KAA9BP,aAAYM,a,OAC3D,SAACV,E,uUAAK,EAACI,WAAYA,GAAgBO,EAAK,C,UACtC,SAACH,EAAK,C,SAAEE,S,gKCSZ,EAnBiB,WACf,IAAM,GAAQE,EAAAA,EAAAA,MAANC,EAER,OACE,sB,WACE,SAACC,EAAAA,EAAU,C,UACT,SAACC,EAAAA,EAAO,CAACC,GAAG,KAAKC,MAAM,MAAMC,MAAM,YAAYC,YAAU,qB,SACtDN,EAAE,iBAGP,SAACO,EAAAA,EAAI,C,UACH,SAACC,EAAAA,EAAI,C,UACH,SAACC,EAAAA,EAAe,YCZ1B,EAJqB,WACnB,OAAO,SAACC,EAAQ,O","sources":["webpack://_N_E/./node_modules/lodash/_arrayShuffle.js","webpack://_N_E/./node_modules/lodash/_baseShuffle.js","webpack://_N_E/./node_modules/lodash/_shuffleSelf.js","webpack://_N_E/./node_modules/lodash/shuffle.js","webpack://_N_E/?1b07","webpack://_N_E/./src/components/PageHeader/PageHeader.tsx","webpack://_N_E/./src/views/Nft/market/Activity/index.tsx","webpack://_N_E/./src/pages/nfts/activity.tsx"],"sourcesContent":["var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/nfts/activity\",\n      function () {\n        return require(\"private-next-pages/nfts/activity.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/nfts/activity\"])\n      });\n    }\n  ","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { Card, Heading } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { useTranslation } from 'contexts/Localization'\nimport ActivityHistory from '../ActivityHistory/ActivityHistory'\n\nconst Activity = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" data-test=\"nft-activity-title\">\n          {t('Activity')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <Card>\n          <ActivityHistory />\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Activity\n","import Activity from 'views/Nft/market/Activity'\n\nconst ActivityPage = () => {\n  return <Activity />\n}\n\nexport default ActivityPage\n"],"names":["copyArray","shuffleSelf","module","exports","array","values","collection","baseRandom","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","window","__NEXT_P","push","Outer","styled","Box","theme","background","colors","gradients","bubblegum","Inner","Container","children","props","useTranslation","t","PageHeader","Heading","as","scale","color","data-test","Page","Card","ActivityHistory","Activity"],"sourceRoot":""}