{"version":3,"file":"static/chunks/pages/nfts/collections-8cf6aa434ef712b1.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/_arrayShuffle.js","webpack://_N_E/./node_modules/lodash/_baseShuffle.js","webpack://_N_E/./node_modules/lodash/_shuffleSelf.js","webpack://_N_E/./node_modules/lodash/shuffle.js","webpack://_N_E/?5954","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ArrowForward.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/BnbUsdtPairToken.tsx","webpack://_N_E/./packages/uikit/src/components/Table/Cell.tsx","webpack://_N_E/./packages/uikit/src/components/Table/Table.tsx","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/components/PageHeader/PageHeader.tsx","webpack://_N_E/./src/components/Select/Select.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/CardView.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ListView.tsx","webpack://_N_E/./src/components/ToggleView/ToggleView.tsx","webpack://_N_E/./src/views/Nft/market/Collections/index.tsx","webpack://_N_E/./src/pages/nfts/collections/index.tsx"],"sourcesContent":["var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/nfts/collections\",\n      function () {\n        return require(\"private-next-pages/nfts/collections/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/nfts/collections\"])\n      });\n    }\n  ","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5 13H16.17L11.29 17.88C10.9 18.27 10.9 18.91 11.29 19.3C11.68 19.69 12.31 19.69 12.7 19.3L19.29 12.71C19.68 12.32 19.68 11.69 19.29 11.3L12.71 4.7C12.32 4.31 11.69 4.31 11.3 4.7C10.91 5.09 10.91 5.72 11.3 6.11L16.17 11H5C4.45 11 4 11.45 4 12C4 12.55 4.45 13 5 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 64 64\" {...props}>\n      <path\n        d=\"M58.6666 34.1665C58.6666 48.8523 46.7275 59.6665 31.9999 59.6665C17.2723 59.6665 5.33325 48.8523 5.33325 34.1665C5.33325 19.4808 17.2723 8.6665 31.9999 8.6665C46.7275 8.6665 58.6666 19.4808 58.6666 34.1665Z\"\n        fill=\"#EB8C00\"\n      />\n      <path\n        d=\"M58.6666 29.8335C58.6666 44.5192 46.7275 55.3335 31.9999 55.3335C17.2723 55.3335 5.33325 44.5192 5.33325 29.8335C5.33325 15.1477 17.2723 4.3335 31.9999 4.3335C46.7275 4.3335 58.6666 15.1477 58.6666 29.8335Z\"\n        fill=\"#FFD800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M50.4313 11.0848C48.0923 9.01961 45.3538 7.36511 42.3351 6.21094L7.60376 40.5648C8.9535 43.3887 10.8247 45.9001 13.0998 48.0105L50.4313 11.0848ZM24.6139 54.2485C22.7419 53.762 20.9537 53.0928 19.2734 52.259L55.1875 16.7354C56.1366 18.2849 56.918 19.9495 57.5084 21.7116L24.6139 54.2485Z\"\n        fill=\"#FFE971\"\n      />\n      <path\n        d=\"M53.6667 29.5002C53.6667 41.2698 44.0409 49.6668 32.1667 49.6668C20.2926 49.6668 10.6667 41.2698 10.6667 29.5002C10.6667 17.7305 20.2926 9.3335 32.1667 9.3335C44.0409 9.3335 53.6667 17.7305 53.6667 29.5002Z\"\n        fill=\"#FFC700\"\n      />\n      <path\n        d=\"M51.6667 20.6615C45.1982 12.2514 33.2898 9.7153 23.8129 15.1469C14.5027 20.483 10.7276 31.6814 14.4875 41.3335C12.0783 38.0902 10.6667 34.0691 10.6667 29.5527C10.6667 17.7524 20.303 9.3335 32.19 9.3335C40.7965 9.33349 48.2231 13.7468 51.6667 20.6615Z\"\n        fill=\"#FFAF00\"\n      />\n      <path\n        d=\"M23.4077 30.5L19.8827 34.0117L16.3333 30.5L19.8827 26.9883L23.4077 30.5ZM31.9999 21.9992L38.0708 28.0055L41.6202 24.4938L35.5494 18.5117L31.9999 15L28.4504 18.5117L22.4041 24.4938L25.9536 28.0055L31.9999 21.9992ZM44.1171 26.9883L40.5921 30.5L44.1416 34.0117L47.6666 30.5L44.1171 26.9883ZM31.9999 39.0008L25.9291 32.9945L22.4041 36.5063L28.4749 42.5125L31.9999 46L35.5494 42.4883L41.6202 36.482L38.0708 32.9945L31.9999 39.0008ZM31.9999 34.0117L35.5494 30.5L31.9999 26.9883L28.4504 30.5L31.9999 34.0117Z\"\n        fill=\"#191326\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from \"styled-components\";\nimport { typography, TypographyProps } from \"styled-system\";\n\nexport const Td = styled.td<TypographyProps>`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 16px;\n  vertical-align: middle;\n\n  ${typography}\n`;\n\nexport const Th = styled(Td).attrs({ as: \"th\" })`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 12px;\n  text-transform: uppercase;\n`;\n","import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { Td } from \"./Cell\";\n\nconst Table = styled.table`\n  max-width: 100%;\n  width: 100%;\n\n  tbody tr:last-child {\n    ${Td} {\n      border-bottom: 0;\n    }\n  }\n\n  ${space}\n`;\n\nexport default Table;\n","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  placeHolderText?: string\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  placeHolderText,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [optionSelected, setOptionSelected] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n    setOptionSelected(true)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text color={!optionSelected && placeHolderText ? 'text' : undefined}>\n          {!optionSelected && placeHolderText ? placeHolderText : options[selectedOptionIndex].label}\n        </Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            placeHolderText || index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 12H7.5C8.05 12 8.5 11.55 8.5 11V7C8.5 6.45 8.05 6 7.5 6H4.5C3.95 6 3.5 6.45 3.5 7V11C3.5 11.55 3.95 12 4.5 12ZM4.5 19H7.5C8.05 19 8.5 18.55 8.5 18V14C8.5 13.45 8.05 13 7.5 13H4.5C3.95 13 3.5 13.45 3.5 14V18C3.5 18.55 3.95 19 4.5 19ZM10.5 19H13.5C14.05 19 14.5 18.55 14.5 18V14C14.5 13.45 14.05 13 13.5 13H10.5C9.95 13 9.5 13.45 9.5 14V18C9.5 18.55 9.95 19 10.5 19ZM16.5 19H19.5C20.05 19 20.5 18.55 20.5 18V14C20.5 13.45 20.05 13 19.5 13H16.5C15.95 13 15.5 13.45 15.5 14V18C15.5 18.55 15.95 19 16.5 19ZM10.5 12H13.5C14.05 12 14.5 11.55 14.5 11V7C14.5 6.45 14.05 6 13.5 6H10.5C9.95 6 9.5 6.45 9.5 7V11C9.5 11.55 9.95 12 10.5 12ZM15.5 7V11C15.5 11.55 15.95 12 16.5 12H19.5C20.05 12 20.5 11.55 20.5 11V7C20.5 6.45 20.05 6 19.5 6H16.5C15.95 6 15.5 6.45 15.5 7Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 14H6.5C7.05 14 7.5 13.55 7.5 13V11C7.5 10.45 7.05 10 6.5 10H4.5C3.95 10 3.5 10.45 3.5 11V13C3.5 13.55 3.95 14 4.5 14ZM4.5 19H6.5C7.05 19 7.5 18.55 7.5 18V16C7.5 15.45 7.05 15 6.5 15H4.5C3.95 15 3.5 15.45 3.5 16V18C3.5 18.55 3.95 19 4.5 19ZM4.5 9H6.5C7.05 9 7.5 8.55 7.5 8V6C7.5 5.45 7.05 5 6.5 5H4.5C3.95 5 3.5 5.45 3.5 6V8C3.5 8.55 3.95 9 4.5 9ZM9.5 14H19.5C20.05 14 20.5 13.55 20.5 13V11C20.5 10.45 20.05 10 19.5 10H9.5C8.95 10 8.5 10.45 8.5 11V13C8.5 13.55 8.95 14 9.5 14ZM9.5 19H19.5C20.05 19 20.5 18.55 20.5 18V16C20.5 15.45 20.05 15 19.5 15H9.5C8.95 15 8.5 15.45 8.5 16V18C8.5 18.55 8.95 19 9.5 19ZM8.5 6V8C8.5 8.55 8.95 9 9.5 9H19.5C20.05 9 20.5 8.55 20.5 8V6C20.5 5.45 20.05 5 19.5 5H9.5C8.95 5 8.5 5.45 8.5 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  idPrefix: string\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ idPrefix, viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}CardView`} onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}TableView`} onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect, useMemo, useState, useCallback } from 'react'\nimport {\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  Flex,\n  Grid,\n  Heading,\n  Text,\n  useMatchBreakpoints,\n  Td,\n  ProfileAvatar,\n  BnbUsdtPairTokenIcon,\n  Table,\n  Th,\n  Card,\n} from '@pancakeswap/uikit'\nimport useSWRImmutable from 'swr/immutable'\nimport orderBy from 'lodash/orderBy'\nimport { getLeastMostPriceInCollection } from 'state/nftMarket/helpers'\nimport { NextLinkFromReactRouter } from 'components/NextLink'\nimport { ViewMode } from 'state/user/actions'\nimport { Collection } from 'state/nftMarket/types'\nimport styled from 'styled-components'\nimport { FetchStatus } from 'config/constants/types'\nimport { useGetShuffledCollections } from 'state/nftMarket/hooks'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport PageLoader from 'components/Loader/PageLoader'\nimport ToggleView from 'components/ToggleView/ToggleView'\nimport { CollectionCard } from '../components/CollectibleCard'\nimport { BNBAmountLabel } from '../components/CollectibleCard/styles'\n\nexport const ITEMS_PER_PAGE = 9\n\nconst SORT_FIELD = {\n  createdAt: 'createdAt',\n  volumeBNB: 'totalVolumeBNB',\n  items: 'numberTokensListed',\n  supply: 'totalSupply',\n  lowestPrice: 'lowestPrice',\n  highestPrice: 'highestPrice',\n}\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 1.2em;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Collectible = () => {\n  const { t } = useTranslation()\n  const { data: shuffledCollections } = useGetShuffledCollections()\n  const { isMobile } = useMatchBreakpoints()\n  const [sortField, setSortField] = useState(null)\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const [viewMode, setViewMode] = useState(ViewMode.CARD)\n  const [sortDirection, setSortDirection] = useState<boolean>(false)\n\n  const { data: collections = [], status } = useSWRImmutable<\n    (Collection & { lowestPrice: number; highestPrice: number })[]\n  >(shuffledCollections && shuffledCollections.length ? ['collectionsWithPrice'] : null, async () => {\n    return Promise.all(\n      shuffledCollections.map(async (collection) => {\n        return {\n          ...collection,\n          lowestPrice: await getLeastMostPriceInCollection(collection.address, 'asc'),\n          highestPrice: await getLeastMostPriceInCollection(collection.address, 'desc'),\n        }\n      }),\n    )\n  })\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setPage(1)\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  useEffect(() => {\n    if (isMobile) {\n      setTimeout(() => {\n        window.scroll({\n          top: 50,\n          left: 0,\n          behavior: 'smooth',\n        })\n      }, 50)\n    }\n  }, [isMobile, page])\n\n  useEffect(() => {\n    let extraPages = 1\n    if (collections.length % ITEMS_PER_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.max(Math.floor(collections.length / ITEMS_PER_PAGE) + extraPages, 1))\n  }, [collections])\n\n  const sortedCollections = useMemo(() => {\n    return orderBy(\n      collections,\n      (collection) => {\n        if (sortField === SORT_FIELD.createdAt) {\n          if (collection.createdAt) {\n            return Date.parse(collection.createdAt)\n          }\n          return null\n        }\n        return parseFloat(collection[sortField])\n      },\n      sortDirection ? 'desc' : 'asc',\n    )\n  }, [collections, sortField, sortDirection])\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" data-test=\"nft-collections-title\">\n          {t('Collections')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        {status !== FetchStatus.Fetched ? (\n          <PageLoader />\n        ) : (\n          <>\n            <Flex\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              pr={[null, null, '4px']}\n              pl={['4px', null, '0']}\n              mb=\"8px\"\n            >\n              <ToggleView\n                idPrefix=\"clickCollection\"\n                viewMode={viewMode}\n                onToggle={(mode: ViewMode) => setViewMode(mode)}\n              />\n              <Flex width=\"max-content\" style={{ gap: '4px' }} flexDirection=\"column\">\n                <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600}>\n                  {t('Sort By')}\n                </Text>\n                <Select\n                  options={[\n                    {\n                      label: t('Collection'),\n                      value: SORT_FIELD.createdAt,\n                    },\n                    {\n                      label: t('Volume'),\n                      value: SORT_FIELD.volumeBNB,\n                    },\n                    {\n                      label: t('Items'),\n                      value: SORT_FIELD.items,\n                    },\n                    {\n                      label: t('Supply'),\n                      value: SORT_FIELD.supply,\n                    },\n                    {\n                      label: t('Lowest Price'),\n                      value: SORT_FIELD.lowestPrice,\n                    },\n                    {\n                      label: t('Highest Price'),\n                      value: SORT_FIELD.highestPrice,\n                    },\n                  ]}\n                  placeHolderText={t('Select')}\n                  onOptionChange={(option: OptionProps) => handleSort(option.value)}\n                />\n              </Flex>\n            </Flex>\n            {viewMode === ViewMode.TABLE ? (\n              <Card style={{ overflowX: 'auto' }} mb=\"32px\">\n                <Table>\n                  <thead>\n                    <tr>\n                      <Th\n                        textAlign=\"left\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => handleSort(SORT_FIELD.createdAt)}\n                      >\n                        {t('Collection')}\n                        {arrow(SORT_FIELD.createdAt)}\n                      </Th>\n                      <Th\n                        textAlign=\"left\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => handleSort(SORT_FIELD.volumeBNB)}\n                      >\n                        {t('Volume')}\n                        {arrow(SORT_FIELD.volumeBNB)}\n                      </Th>\n                      <Th\n                        textAlign=\"left\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => handleSort(SORT_FIELD.lowestPrice)}\n                      >\n                        {t('Lowest')}\n                        {arrow(SORT_FIELD.lowestPrice)}\n                      </Th>\n                      <Th\n                        textAlign=\"left\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => handleSort(SORT_FIELD.highestPrice)}\n                      >\n                        {t('Highest')}\n                        {arrow(SORT_FIELD.highestPrice)}\n                      </Th>\n                      <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.items)}>\n                        {t('Items')}\n                        {arrow(SORT_FIELD.items)}\n                      </Th>\n                      <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.supply)}>\n                        {t('Supply')}\n                        {arrow(SORT_FIELD.supply)}\n                      </Th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedCollections\n                      .map((collection) => {\n                        const volume = collection.totalVolumeBNB\n                          ? parseFloat(collection.totalVolumeBNB).toLocaleString(undefined, {\n                              minimumFractionDigits: 3,\n                              maximumFractionDigits: 3,\n                            })\n                          : '0'\n                        return (\n                          <tr key={collection.address} data-test=\"nft-collection-row\">\n                            <Td style={{ cursor: 'pointer', minWidth: '200px' }}>\n                              <NextLinkFromReactRouter to={`${nftsBaseUrl}/collections/${collection.address}`}>\n                                <Flex alignItems=\"center\">\n                                  <ProfileAvatar src={collection.avatar} width={48} height={48} mr=\"16px\" />\n                                  {collection.name}\n                                </Flex>\n                              </NextLinkFromReactRouter>\n                            </Td>\n                            <Td>\n                              <Flex alignItems=\"center\">\n                                {volume}\n                                <BnbUsdtPairTokenIcon ml=\"8px\" />\n                              </Flex>\n                            </Td>\n                            <Td>{collection.lowestPrice.toLocaleString(undefined, { maximumFractionDigits: 5 })}</Td>\n                            <Td>{collection.highestPrice.toLocaleString(undefined, { maximumFractionDigits: 5 })}</Td>\n                            <Td>{collection.numberTokensListed}</Td>\n                            <Td>{collection?.totalSupply}</Td>\n                          </tr>\n                        )\n                      })\n                      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)}\n                  </tbody>\n                </Table>\n              </Card>\n            ) : (\n              <Grid\n                gridGap=\"16px\"\n                gridTemplateColumns={['1fr', '1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)']}\n                mb=\"32px\"\n                data-test=\"nft-collection-row\"\n              >\n                {sortedCollections.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((collection) => {\n                  return (\n                    <CollectionCard\n                      key={collection.address}\n                      bgSrc={collection.banner.small}\n                      avatarSrc={collection.avatar}\n                      collectionName={collection.name}\n                      url={`${nftsBaseUrl}/collections/${collection.address}`}\n                    >\n                      <Flex alignItems=\"center\">\n                        <Text fontSize=\"12px\" color=\"textSubtle\">\n                          {t('Volume')}\n                        </Text>\n                        <BNBAmountLabel\n                          amount={collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0}\n                        />\n                      </Flex>\n                    </CollectionCard>\n                  )\n                })}\n              </Grid>\n            )}\n            <PageButtons>\n              <Arrow\n                onClick={() => {\n                  setPage(page === 1 ? page : page - 1)\n                }}\n              >\n                <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n              </Arrow>\n              <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n              <Arrow\n                onClick={() => {\n                  setPage(page === maxPage ? page : page + 1)\n                }}\n              >\n                <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n              </Arrow>\n            </PageButtons>\n          </>\n        )}\n      </Page>\n    </>\n  )\n}\n\nexport default Collectible\n","import Collections from '../../../views/Nft/market/Collections'\n\nconst CollectionsPage = () => {\n  return <Collections />\n}\n\nexport default CollectionsPage\n"],"names":["copyArray","shuffleSelf","module","exports","array","values","collection","baseRandom","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","window","__NEXT_P","push","props","Svg","viewBox","path","d","fill","fillRule","clipRule","Td","styled","theme","colors","cardBorder","text","typography","Th","attrs","as","secondary","Table","space","Wrapper","Page","Spinner","Outer","Box","background","gradients","bubblegum","Inner","Container","children","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ListItem","options","onOptionChange","defaultOptionIndex","placeHolderText","dropdownRef","useRef","useState","toggling","event","setIsOpen","stopPropagation","useEffect","handleClickOutside","document","addEventListener","removeEventListener","onClick","Text","color","optionSelected","selectedOptionIndex","label","ArrowDropDownIcon","ref","map","option","selectedIndex","setSelectedOptionIndex","setOptionSelected","idPrefix","viewMode","onToggle","handleToggle","mode","IconButton","variant","scale","id","ViewMode","CardViewIcon","ListViewIcon","SORT_FIELD","PageButtons","Arrow","primary","useTranslation","t","data","useGetShuffledCollections","useMatchBreakpoints","isMobile","useSWRImmutable","shuffledCollections","Promise","all","getLeastMostPriceInCollection","address","lowestPrice","highestPrice","collections","status","arrow","useCallback","field","sortField","sortDirection","handleSort","newField","setPage","setSortField","setSortDirection","setTimeout","scroll","top","left","behavior","page","extraPages","setMaxPage","Math","max","floor","sortedCollections","useMemo","orderBy","createdAt","Date","parse","parseFloat","PageHeader","Heading","data-test","FetchStatus","PageLoader","Flex","justifyContent","alignItems","pr","pl","mb","ToggleView","setViewMode","width","style","gap","flexDirection","fontSize","textTransform","fontWeight","Select","Card","overflowX","thead","tr","textAlign","cursor","tbody","volume","totalVolumeBNB","toLocaleString","minimumFractionDigits","maximumFractionDigits","minWidth","NextLinkFromReactRouter","to","nftsBaseUrl","ProfileAvatar","src","avatar","height","mr","name","BnbUsdtPairTokenIcon","ml","numberTokensListed","totalSupply","slice","Grid","gridGap","gridTemplateColumns","CollectionCard","bgSrc","banner","small","avatarSrc","collectionName","url","BNBAmountLabel","amount","ArrowBackIcon","maxPage","ArrowForwardIcon","Collections"],"sourceRoot":""}