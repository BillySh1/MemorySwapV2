{"version":3,"file":"static/chunks/5855-7ed224e27dded2a7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/constants/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/ERC20OrderRouter__factory.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/ERC20__factory.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/GelatoLimitOrders__factory.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/factories/Multicall__factory.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/contracts/types/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/limit-orders/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/stoplimit-orders/core.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/stoplimit-orders/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/types/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/utils/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/constants.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/dist/utils/queries/stoplimit.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/createRequestBody.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/index.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql-request/dist/types.js","webpack://_N_E/./node_modules/aes-js/index.js","webpack://_N_E/./node_modules/@ethersproject/hash/lib.esm/message.js","webpack://_N_E/./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack://_N_E/./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack://_N_E/./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack://_N_E/./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack://_N_E/./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack://_N_E/./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack://_N_E/./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack://_N_E/./node_modules/@ethersproject/random/lib.esm/_version.js","webpack://_N_E/./node_modules/@ethersproject/random/lib.esm/random.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack://_N_E/./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack://_N_E/./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack://_N_E/./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack://_N_E/./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/networks/lib.esm/index.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/networks/lib.esm/_version.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/_version.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/ws.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack://_N_E/./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/index.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack://_N_E/./node_modules/ethers/node_modules/@ethersproject/solidity/lib.esm/index.js","webpack://_N_E/./node_modules/ethers/lib.esm/_version.js","webpack://_N_E/./node_modules/ethers/lib.esm/ethers.js","webpack://_N_E/./node_modules/ethers/lib.esm/index.js","webpack://_N_E/./node_modules/scrypt-js/scrypt.js","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/inspect.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/defineInspect.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/jsutils/invariant.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/ast.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/visitor.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/printer.mjs","webpack://_N_E/./node_modules/@gelatonetwork/limit-orders-lib/node_modules/graphql/language/blockString.mjs"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = exports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = exports.NATIVE_WRAPPED_TOKEN_ADDRESS = exports.NATIVE_TOKEN_NAME = exports.NATIVE_WRAPPED_TOKEN_TICKER = exports.NATIVE_TOKEN_TICKER = exports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = exports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = exports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = exports.GELATO_LIMIT_ORDERS_ADDRESS = exports.SUBGRAPH_URL = exports.OLD_SUBGRAPH_URL = exports.NETWORK_STOP_LIMIT_HANDLERS = exports.NETWORK_HANDLERS = exports.NETWORK_NAME = exports.HANDLERS_ADDRESSES = exports.LIMIT_ORDER_SLIPPAGE = exports.STOP_LIMIT_SLIPPAGE_BPS = exports.BPS_GELATO_FEE = exports.CHAIN_ID = exports.MAX_LIFETIME_IN_SECONDS = exports.SLIPPAGE_BPS = exports.ETH_ADDRESS = void 0;\nexports.ETH_ADDRESS = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\nexports.SLIPPAGE_BPS = 40; // 0.4%\nexports.MAX_LIFETIME_IN_SECONDS = 7889238; // 3 months in seconds\nexports.CHAIN_ID = {\n    MAINNET: 1,\n    ROPSTEN: 3,\n    GOERLI: 5,\n    BSC: 56,\n    MATIC: 137,\n    FANTOM: 250,\n    AVAX: 43114,\n};\nexports.BPS_GELATO_FEE = {\n    [exports.CHAIN_ID.MAINNET]: 10,\n    [exports.CHAIN_ID.MATIC]: 10,\n    [exports.CHAIN_ID.FANTOM]: 10,\n    [exports.CHAIN_ID.BSC]: 10,\n    [exports.CHAIN_ID.AVAX]: 10,\n};\nexports.STOP_LIMIT_SLIPPAGE_BPS = {\n    [exports.CHAIN_ID.MAINNET]: 500,\n    [exports.CHAIN_ID.ROPSTEN]: 500,\n    [exports.CHAIN_ID.MATIC]: 500,\n    [exports.CHAIN_ID.FANTOM]: 500,\n    [exports.CHAIN_ID.BSC]: 500,\n    [exports.CHAIN_ID.AVAX]: 500,\n};\nexports.LIMIT_ORDER_SLIPPAGE = {\n    [exports.CHAIN_ID.MAINNET]: 40,\n    [exports.CHAIN_ID.ROPSTEN]: 40,\n    [exports.CHAIN_ID.MATIC]: 40,\n    [exports.CHAIN_ID.FANTOM]: 40,\n    [exports.CHAIN_ID.BSC]: 40,\n    [exports.CHAIN_ID.AVAX]: 40,\n};\nexports.HANDLERS_ADDRESSES = {\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MAINNET]: {\n        [\"uniswap\"]: \"0x837c03414fb86861f28ca7e91e5fd770fda0f52d\",\n        [\"uniswap_stoplimit\"]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.ROPSTEN]: {\n        [\"uniswap\"]: \"0x1f397f95d31eb20183b69d685a5060cfdefd508b\",\n        [\"quickswap_stoplimit\"]: \"0x87bE4Eb9dFb2DefcEA035D3010f33584Fc8ddDB5\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.MATIC]: {\n        [\"quickswap\"]: \"0xaccbd2c6ad75ad3394dc5f4b1f606bf111e4eae3\",\n        [\"polydex\"]: \"0x00fc86d360162e4672ec6B427E12ed36F39f1f53\",\n        [\"cafeswap\"]: \"0xd167afcee4e9a89e69646fd3c27e58b61d1b7f97\",\n        [\"quickswap_stoplimit\"]: \"0x51cc226648f8de65513de7cdfd3e7b116156234e\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.FANTOM]: {\n        [\"spiritswap\"]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n        [\"spookyswap\"]: \"0x228ffd7122d202c0cd24330892881c47b0817c7a\",\n        [\"bombswap\"]: \"0x87C4Fbd67f6DD8a1B5EFD9879956c728C97afeFe\",\n        [\"defyswap\"]: \"0x3d401587320522a5e0bb973d10a852430a8edbbd\",\n        [\"spiritswap_stoplimit\"]: \"0x6ea82c72732389c5149326e048a46be9f8bec8e8\",\n        [\"spookyswap_stoplimit\"]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.BSC]: {\n        [\"pancakeswap\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pancakeswap_stoplimit\"]: \"0x84b826bcd26f1bc0cd5fbbdef7f5b8965d6bbb38\",\n    },\n    // UniswapV2Router02Handler\n    [exports.CHAIN_ID.AVAX]: {\n        [\"traderjoe\"]: \"0x88f8CCC064bA2D39cF08D57B6e7504a7B6bE8E4e\",\n        [\"pangolin\"]: \"0x8b206547cfe6f35a77ddab2d6d97260765a349ef\",\n        [\"pangolin_stoplimit\"]: \"0xb4c53e2e32caf977d61a8a776bdc44837a5d0d91\",\n        [\"traderjoe_stoplimit\"]: \"0xcf497830e43836738bdd0c3d7e09b599ddf081b2\",\n    },\n};\nexports.NETWORK_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ethereum\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ropsten\",\n    [exports.CHAIN_ID.GOERLI]: \"Goerli\",\n    [exports.CHAIN_ID.MATIC]: \"Polygon (Matic)\",\n    [exports.CHAIN_ID.FANTOM]: \"FANTOM\",\n    [exports.CHAIN_ID.BSC]: \"BSC\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NETWORK_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap\", \"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"uniswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap\", \"polydex\", \"cafeswap\", \"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\n        \"spiritswap\",\n        \"spookyswap\",\n        \"bombswap\",\n        \"defyswap\",\n        \"spiritswap_stoplimit\",\n        \"spookyswap_stoplimit\",\n    ],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap\", \"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\n        \"traderjoe\",\n        \"pangolin\",\n        \"pangolin_stoplimit\",\n        \"traderjoe_stoplimit\",\n    ],\n};\nexports.NETWORK_STOP_LIMIT_HANDLERS = {\n    [exports.CHAIN_ID.MAINNET]: [\"uniswap_stoplimit\"],\n    [exports.CHAIN_ID.ROPSTEN]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.MATIC]: [\"quickswap_stoplimit\"],\n    [exports.CHAIN_ID.BSC]: [\"pancakeswap_stoplimit\"],\n    [exports.CHAIN_ID.FANTOM]: [\"spookyswap_stoplimit\", \"spiritswap_stoplimit\"],\n    [exports.CHAIN_ID.AVAX]: [\"traderjoe_stoplimit\", \"pangolin_stoplimit\"],\n};\nexports.OLD_SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders\",\n    [exports.CHAIN_ID.ROPSTEN]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ropsten\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom\",\n};\nexports.SUBGRAPH_URL = {\n    [exports.CHAIN_ID.MAINNET]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-ii\",\n    [exports.CHAIN_ID.MATIC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-polygon-ii\",\n    [exports.CHAIN_ID.FANTOM]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-fantom-ii\",\n    [exports.CHAIN_ID.BSC]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-bsc\",\n    [exports.CHAIN_ID.AVAX]: \"https://api.thegraph.com/subgraphs/name/gelatodigital/limit-orders-avax\",\n};\nexports.GELATO_LIMIT_ORDERS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x36049D479A97CdE1fC6E2a5D2caE30B666Ebf92B\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x0e5096D201Fe2985f5C26432A76f145D6e5D1453\",\n    [exports.CHAIN_ID.GOERLI]: \"0xa0453c6ab71fe3da89640ee2503326bd0899a589\",\n    [exports.CHAIN_ID.MATIC]: \"0x38c4092b28dAB7F3d98eE6524549571c283cdfA5\",\n    [exports.CHAIN_ID.FANTOM]: \"0x05Ad1094Eb6Cde564d732196F6754Ee464896031\",\n    [exports.CHAIN_ID.BSC]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n    [exports.CHAIN_ID.AVAX]: \"0x0c30D3d66bc7C73A83fdA929888c34dcb24FD599\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x037fc8e71445910e1E0bBb2a0896d5e9A7485318\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x3f3C13b09B601fb6074124fF8D779d2964caBf8B\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n    [exports.CHAIN_ID.MATIC]: \"0x5A36178E38864F5E724A2DaF5f9cD9bA473f7903\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf2253BF9a0BD002300cFe6f4E630d755669f6DCa\",\n    [exports.CHAIN_ID.BSC]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n    [exports.CHAIN_ID.AVAX]: \"0xb7499a92fc36e9053a4324aFfae59d333635D9c3\",\n};\nexports.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xbeC333EDE1A0687D2b9624F8C073a54c93ba9777\",\n    [exports.CHAIN_ID.GOERLI]: \"0xCf8EDB3333Fae73b23f689229F4De6Ac95d1f707\",\n};\nexports.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER = {\n    [exports.CHAIN_ID.MAINNET]: \"0x5fb00386558ccc219e51b69d8e963ef20b0c267a\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0x9c06ff386779cc2269d482bcecf2378a4ff5cb90\",\n    [exports.CHAIN_ID.GOERLI]: \"0x247A1306b6122ba28862b19a95004899db91f1b5\",\n    [exports.CHAIN_ID.MATIC]: \"0x0c2c2963a4353ffd839590f7cb1e783688378814\",\n    [exports.CHAIN_ID.FANTOM]: \"0x59e61b95f20e940ac777e88fa2dfa0a6a4c40fa0\",\n    [exports.CHAIN_ID.BSC]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n    [exports.CHAIN_ID.AVAX]: \"0x64c7f3c2C19B41a6aD67bb5f4edc8EdbB3284F34\",\n};\nexports.NATIVE_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"ETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"ETH\",\n    [exports.CHAIN_ID.GOERLI]: \"ETH\",\n    [exports.CHAIN_ID.MATIC]: \"MATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"FTM\",\n    [exports.CHAIN_ID.BSC]: \"BNB\",\n    [exports.CHAIN_ID.AVAX]: \"AVAX\",\n};\nexports.NATIVE_WRAPPED_TOKEN_TICKER = {\n    [exports.CHAIN_ID.MAINNET]: \"WETH\",\n    [exports.CHAIN_ID.ROPSTEN]: \"WETH\",\n    [exports.CHAIN_ID.GOERLI]: \"WETH\",\n    [exports.CHAIN_ID.MATIC]: \"WMATIC\",\n    [exports.CHAIN_ID.FANTOM]: \"WFTM\",\n    [exports.CHAIN_ID.BSC]: \"WBNB\",\n    [exports.CHAIN_ID.AVAX]: \"WAVAX\",\n};\nexports.NATIVE_TOKEN_NAME = {\n    [exports.CHAIN_ID.MAINNET]: \"Ether\",\n    [exports.CHAIN_ID.ROPSTEN]: \"Ether\",\n    [exports.CHAIN_ID.GOERLI]: \"Ether\",\n    [exports.CHAIN_ID.MATIC]: \"Matic\",\n    [exports.CHAIN_ID.FANTOM]: \"Fantom\",\n    [exports.CHAIN_ID.BSC]: \"Bnb\",\n    [exports.CHAIN_ID.AVAX]: \"Avax\",\n};\nexports.NATIVE_WRAPPED_TOKEN_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xc778417e063141139fce010982780140aa0cd5ab\",\n    [exports.CHAIN_ID.GOERLI]: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n    [exports.CHAIN_ID.MATIC]: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n    [exports.CHAIN_ID.FANTOM]: \"0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83\",\n    [exports.CHAIN_ID.BSC]: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    [exports.CHAIN_ID.AVAX]: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n};\nexports.GENERIC_GAS_LIMIT_ORDER_EXECUTION = \"400000\";\nexports.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS = {\n    [exports.CHAIN_ID.MAINNET]: \"0x260aB0aCb931D7Da784fC35c7E96c3B13213Abf1\",\n    [exports.CHAIN_ID.ROPSTEN]: \"0xDC41072F4aFE7e4a7ea0f21d13a92662Fe733C55\",\n    [exports.CHAIN_ID.MATIC]: \"0x81967ac4ce8e2d94f7e4b4cf3d2e760605079604\",\n    [exports.CHAIN_ID.BSC]: \"0xe912cd26c4a4cfffc175a297f1328ab23313a1a7\",\n    [exports.CHAIN_ID.FANTOM]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n    [exports.CHAIN_ID.AVAX]: \"0xf437a1a98566872f734bd18addf4bb610d1f887b\",\n};\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20OrderRouter__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"_gelatoPineCore\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"DepositToken\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"depositToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"gelatoPineCore\",\n        outputs: [\n            {\n                internalType: \"contract IGelatoPineCore\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass ERC20OrderRouter__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20OrderRouter__factory = ERC20OrderRouter__factory;\nERC20OrderRouter__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n];\nclass ERC20__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20__factory = ERC20__factory;\nERC20__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoLimitOrders__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"DepositETH\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderCancelled\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_key\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_bought\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"OrderExecuted\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"ETH_ADDRESS\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"canExecuteOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"cancelOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"decodeOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"secret\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"depositEth\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"encodeEthOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_secret\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"encodeTokenOrder\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ethDeposits\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_auxData\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"executeOrder\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"existOrder\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"keyOf\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract IModule\",\n                name: \"_module\",\n                type: \"address\",\n            },\n            {\n                internalType: \"contract IERC20\",\n                name: \"_inputToken\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address payable\",\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_witness\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"vaultOfOrder\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\",\n    },\n];\nclass GelatoLimitOrders__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.GelatoLimitOrders__factory = GelatoLimitOrders__factory;\nGelatoLimitOrders__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multicall__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_factory\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_mainModule\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"_imageHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"_signers\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"RequiredConfig\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_signer\",\n                type: \"address\",\n            },\n        ],\n        name: \"RequiredSigner\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callBalanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callBlockNumber\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_i\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"callBlockhash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callChainId\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCode\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"code\",\n                type: \"bytes\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"codeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_addr\",\n                type: \"address\",\n            },\n        ],\n        name: \"callCodeSize\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"size\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callCoinbase\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callDifficulty\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLeft\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasLimit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callGasPrice\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callOrigin\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"callTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastSignerUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastWalletUpdate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bool\",\n                        name: \"delegateCall\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"revertOnError\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"target\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"value\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct IModuleCalls.Transaction[]\",\n                name: \"_txs\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"multiCall\",\n        outputs: [\n            {\n                internalType: \"bool[]\",\n                name: \"_successes\",\n                type: \"bool[]\",\n            },\n            {\n                internalType: \"bytes[]\",\n                name: \"_results\",\n                type: \"bytes[]\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_threshold\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"weight\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"signer\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct RequireUtils.Member[]\",\n                name: \"_members\",\n                type: \"tuple[]\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishConfig\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_hash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_sizeMembers\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_signature\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_index\",\n                type: \"bool\",\n            },\n        ],\n        name: \"publishInitialSigners\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_wallet\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_nonce\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireMinNonce\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_expiration\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"requireNonExpired\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nclass Multicall__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.Multicall__factory = Multicall__factory;\nMulticall__factory.abi = _abi;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multicall__factory = exports.GelatoLimitOrders__factory = exports.ERC20OrderRouter__factory = exports.ERC20__factory = void 0;\nvar ERC20__factory_1 = require(\"./factories/ERC20__factory\");\nObject.defineProperty(exports, \"ERC20__factory\", { enumerable: true, get: function () { return ERC20__factory_1.ERC20__factory; } });\nvar ERC20OrderRouter__factory_1 = require(\"./factories/ERC20OrderRouter__factory\");\nObject.defineProperty(exports, \"ERC20OrderRouter__factory\", { enumerable: true, get: function () { return ERC20OrderRouter__factory_1.ERC20OrderRouter__factory; } });\nvar GelatoLimitOrders__factory_1 = require(\"./factories/GelatoLimitOrders__factory\");\nObject.defineProperty(exports, \"GelatoLimitOrders__factory\", { enumerable: true, get: function () { return GelatoLimitOrders__factory_1.GelatoLimitOrders__factory; } });\nvar Multicall__factory_1 = require(\"./factories/Multicall__factory\");\nObject.defineProperty(exports, \"Multicall__factory\", { enumerable: true, get: function () { return Multicall__factory_1.Multicall__factory; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constants = exports.utils = exports.isEthereumChain = exports.GelatoStopLimitOrders = exports.isValidChainIdAndHandler = exports.GelatoLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nvar limit_orders_1 = require(\"./limit-orders\");\nObject.defineProperty(exports, \"GelatoLimitOrders\", { enumerable: true, get: function () { return limit_orders_1.GelatoLimitOrders; } });\nObject.defineProperty(exports, \"isValidChainIdAndHandler\", { enumerable: true, get: function () { return limit_orders_1.isValidChainIdAndHandler; } });\nvar stoplimit_orders_1 = require(\"./stoplimit-orders\");\nObject.defineProperty(exports, \"GelatoStopLimitOrders\", { enumerable: true, get: function () { return stoplimit_orders_1.GelatoStopLimitOrders; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"isEthereumChain\", { enumerable: true, get: function () { return utils_1.isEthereumChain; } });\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\nexports.utils = (0, tslib_1.__importStar)(require(\"./utils\"));\nexports.constants = (0, tslib_1.__importStar)(require(\"./constants\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoLimitOrders = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst constants_1 = require(\"../constants\");\nconst types_1 = require(\"../contracts/types\");\nconst queries_1 = require(\"../utils/queries\");\nconst utils_1 = require(\"../utils\");\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nclass GelatoLimitOrders {\n    constructor(chainId, signerOrProvider, handler, isFlashbotsProtected = false) {\n        var _a;\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        else if (isFlashbotsProtected &&\n            (handler || !(0, exports.isFlashbotsCompatibleChainId)(chainId))) {\n            throw new Error(\"Invalid chainId or handler for Flashbots bundle submission. handler must be undefined, and chainId either 1 (mainnet) or 5 (goerli)\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = constants_1.BPS_GELATO_FEE[chainId];\n        this._slippageBPS = constants_1.LIMIT_ORDER_SLIPPAGE[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoLimitOrders = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._moduleAddress = isFlashbotsProtected\n            ? constants_1.GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS[this._chainId]\n            : constants_1.GELATO_LIMIT_ORDERS_MODULE_ADDRESS[this._chainId];\n        this._handler = handler;\n        this._handlerAddress = handler\n            ? (_a = constants_1.HANDLERS_ADDRESSES[this._chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase()\n            : undefined;\n        this._isFlashbotsProtected = isFlashbotsProtected;\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoLimitOrders;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get isFlashbotsProtected() {\n        return this._isFlashbotsProtected;\n    }\n    encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, minReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(minReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, minReturn, secret, checkAllowance);\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this._moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this._moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    adjustedMinReturn: minReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this._handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    submitLimitOrder(inputToken, outputToken, inputAmount, minReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            const owner = yield this._signer.getAddress();\n            const txData = yield this.encodeLimitOrderSubmission(inputToken, outputToken, inputAmount, minReturn, owner, checkAllowance);\n            return this._signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoLimitOrders.interface.encodeFunctionData(\"cancelOrder\", [order.module, order.inputToken, order.owner, order.witness, order.data]);\n            return {\n                data,\n                to: this._gelatoLimitOrders.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            let _order = order;\n            if (order.id) {\n                try {\n                    const subgraphOrder = yield Promise.race([\n                        this.getOrder(order.id),\n                        new Promise((resolve) => setTimeout(resolve, 5000)).then(() => {\n                            throw new Error(\"Timeout\");\n                        }),\n                    ]);\n                    if (subgraphOrder) {\n                        if (subgraphOrder.status === \"cancelled\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Cancellation transaction hash: ${subgraphOrder.cancelledTxHash}`);\n                        }\n                        if (subgraphOrder.status === \"executed\") {\n                            throw new Error(`Order status is not open. Current order status: ${subgraphOrder.status}. Execution transaction hash: ${subgraphOrder.executedTxHash}`);\n                        }\n                        _order = Object.assign(Object.assign({}, order), subgraphOrder);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n            if (!_order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!_order.witness)\n                throw new Error(\"No witness in order\");\n            if (!_order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!_order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!_order.data)\n                throw new Error(\"No data in order\");\n            if (!_order.module)\n                throw new Error(\"No module in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(_order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoLimitOrders.cancelOrder(_order.module, _order.inputToken, _order.owner, _order.witness, _order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 600000 : 2000000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoLimitOrders)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoLimitOrders.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = ethers_1.BigNumber.from(outputAmount)\n            .mul(this._gelatoFeeBPS)\n            .div(10000)\n            .gte(1)\n            ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n            : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS\n            ? this._slippageBPS + extraSlippageBPS\n            : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(this._slippageBPS + extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    getOrder(orderId) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const order = yield (0, queries_1.queryOrder)(orderId, this._chainId);\n            if (order) {\n                return Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) });\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    getOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getOpenOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryOpenOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getPastOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryPastOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getExecutedOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryExecutedOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    getCancelledOrders(owner, includeOrdersWithNullHandler = false) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, queries_1.queryCancelledOrders)(owner, this._chainId);\n            return orders\n                .map((order) => (Object.assign(Object.assign({}, order), { adjustedMinReturn: this.getAdjustedMinReturn(order.minReturn) })))\n                .filter((order) => {\n                if (this._handler && !order.handler) {\n                    return includeOrdersWithNullHandler ? true : false;\n                }\n                else {\n                    return this._handler ? order.handler === this._handlerAddress : true;\n                }\n            });\n        });\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this._handlerAddress\n                ? this._abiEncoder.encode([\"address\", \"uint256\", \"address\"], [outputToken, minReturn, this._handlerAddress])\n                : this._abiEncoder.encode([\"address\", \"uint256\"], [outputToken, minReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this._gelatoLimitOrders.encodeEthOrder(this._moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this._gelatoLimitOrders.interface.encodeFunctionData(\"depositEth\", [encodedEthOrder]);\n                value = amount;\n                to = this._gelatoLimitOrders.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this._provider).allowance(owner, this._erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this._erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this._moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this._erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoLimitOrders = GelatoLimitOrders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoBase = exports.isETHOrWETH = exports.isFlashbotsCompatibleChainId = exports.isValidChainIdAndHandler = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst constants_1 = require(\"../constants\");\nconst types_1 = require(\"../contracts/types\");\nconst utils_1 = require(\"../utils\");\nconst isValidChainIdAndHandler = (chainId, handler) => {\n    return constants_1.NETWORK_HANDLERS[chainId].includes(handler);\n};\nexports.isValidChainIdAndHandler = isValidChainIdAndHandler;\nconst isFlashbotsCompatibleChainId = (chainId) => {\n    return chainId == constants_1.CHAIN_ID.MAINNET || chainId == constants_1.CHAIN_ID.GOERLI;\n};\nexports.isFlashbotsCompatibleChainId = isFlashbotsCompatibleChainId;\nconst isETHOrWETH = (tokenAddress, chainID) => {\n    const WETH_ADDRESS = constants_1.NATIVE_WRAPPED_TOKEN_ADDRESS[chainID];\n    return (tokenAddress.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase() ||\n        tokenAddress.toLowerCase() === WETH_ADDRESS.toLowerCase());\n};\nexports.isETHOrWETH = isETHOrWETH;\nclass GelatoBase {\n    constructor(chainId, moduleAddress, signerOrProvider, handler, handlerAddress) {\n        if (handler && !(0, exports.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        this._chainId = chainId;\n        this._gelatoFeeBPS = !(0, utils_1.isEthereumChain)(chainId)\n            ? constants_1.BPS_GELATO_FEE[chainId]\n            : 0;\n        this._slippageBPS = constants_1.STOP_LIMIT_SLIPPAGE_BPS[chainId];\n        this._subgraphUrl = constants_1.SUBGRAPH_URL[chainId];\n        this._signer = abstract_signer_1.Signer.isSigner(signerOrProvider)\n            ? signerOrProvider\n            : undefined;\n        this._provider = abstract_provider_1.Provider.isProvider(signerOrProvider)\n            ? signerOrProvider\n            : abstract_signer_1.Signer.isSigner(signerOrProvider)\n                ? signerOrProvider.provider\n                : undefined;\n        this._gelatoCore = this._signer\n            ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._signer)\n            : this._provider\n                ? types_1.GelatoLimitOrders__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ADDRESS[this._chainId], types_1.GelatoLimitOrders__factory.createInterface());\n        this._abiEncoder = new ethers_1.utils.AbiCoder();\n        this._erc20OrderRouter = this._signer\n            ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._signer)\n            : this._provider\n                ? types_1.ERC20OrderRouter__factory.connect(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], this._provider)\n                : new ethers_1.Contract(constants_1.GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER[this._chainId], types_1.ERC20OrderRouter__factory.createInterface());\n        this._handler = handler;\n        this._handlerAddress = handlerAddress;\n        this._moduleAddress = moduleAddress;\n    }\n    get gelatoFeeBPS() {\n        return this._gelatoFeeBPS;\n    }\n    get slippageBPS() {\n        return this._slippageBPS;\n    }\n    get chainId() {\n        return this._chainId;\n    }\n    get signer() {\n        return this._signer;\n    }\n    get provider() {\n        return this._provider;\n    }\n    get subgraphUrl() {\n        return this._subgraphUrl;\n    }\n    get handler() {\n        return this._handler;\n    }\n    get handlerAddress() {\n        return this._handlerAddress;\n    }\n    get moduleAddress() {\n        return this._moduleAddress;\n    }\n    get contract() {\n        return this._gelatoCore;\n    }\n    get erc20OrderRouter() {\n        return this._erc20OrderRouter;\n    }\n    get abiEncoder() {\n        return this._abiEncoder;\n    }\n    encodeLimitOrderCancellation(order, checkIsActiveOrder) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.owner)\n                throw new Error(\"No owner\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const data = this._gelatoCore.interface.encodeFunctionData(\"cancelOrder\", [\n                this._moduleAddress,\n                order.inputToken,\n                order.owner,\n                order.witness,\n                order.data,\n            ]);\n            return {\n                data,\n                to: this._gelatoCore.address,\n                value: ethers_1.constants.Zero,\n            };\n        });\n    }\n    cancelStopLimitOrder(order, checkIsActiveOrder, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.outputToken)\n                throw new Error(\"No output token in order\");\n            if (!order.minReturn)\n                throw new Error(\"No minReturn in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            if (checkIsActiveOrder) {\n                const isActiveOrder = yield this.isActiveOrder(order);\n                if (!isActiveOrder)\n                    throw new Error(\"Order not found. Please review your order data.\");\n            }\n            const owner = yield this._signer.getAddress();\n            if (owner.toLowerCase() !== order.owner.toLowerCase())\n                throw new Error(\"Owner and signer mismatch\");\n            return this._gelatoCore.cancelOrder(this._moduleAddress, order.inputToken, order.owner, order.witness, order.data, overrides !== null && overrides !== void 0 ? overrides : {\n                gasLimit: (0, utils_1.isEthereumChain)(this._chainId) ? 500000 : 1500000,\n            });\n        });\n    }\n    approveTokenAmount(inputToken, amount, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._signer)\n                throw new Error(\"No signer\");\n            return overrides\n                ? types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount, overrides)\n                : types_1.ERC20__factory.connect(inputToken, this._signer).approve(this._erc20OrderRouter.address, amount);\n        });\n    }\n    isActiveOrder(order) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this._provider)\n                throw new Error(\"No provider\");\n            if (!this._gelatoCore)\n                throw new Error(\"No gelato limit orders contract\");\n            if (!order.module)\n                throw new Error(\"No module in order\");\n            if (!order.inputToken)\n                throw new Error(\"No input token in order\");\n            if (!order.owner)\n                throw new Error(\"No owner in order\");\n            if (!order.witness)\n                throw new Error(\"No witness in order\");\n            if (!order.data)\n                throw new Error(\"No data in order\");\n            return this._gelatoCore.existOrder(order.module, order.inputToken, order.owner, order.witness, order.data);\n        });\n    }\n    getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(18));\n        if (invert) {\n            return ethers_1.BigNumber.from(inputValue)\n                .mul(factor)\n                .div(outputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputValue)\n                .mul(factor)\n                .div(inputValue)\n                .mul(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(inputDecimals)))\n                .div(ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(outputDecimals)))\n                .toString();\n        }\n    }\n    getFeeAndSlippageAdjustedMinReturn(outputAmount, extraSlippageBPS) {\n        if (extraSlippageBPS) {\n            if (!Number.isInteger(extraSlippageBPS))\n                throw new Error(\"Extra Slippage BPS must an unsigned integer\");\n        }\n        const gelatoFee = (0, utils_1.isEthereumChain)(this._chainId)\n            ? 0\n            : ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000).gte(1)\n                ? ethers_1.BigNumber.from(outputAmount).mul(this._gelatoFeeBPS).div(10000)\n                : ethers_1.BigNumber.from(1);\n        const slippageBPS = extraSlippageBPS ? extraSlippageBPS : this._slippageBPS;\n        const slippage = ethers_1.BigNumber.from(outputAmount).mul(slippageBPS).div(10000);\n        const minReturn = ethers_1.BigNumber.from(outputAmount).sub(gelatoFee).sub(slippage);\n        return {\n            minReturn: minReturn.toString(),\n            slippage: slippage.toString(),\n            gelatoFee: gelatoFee.toString(),\n        };\n    }\n    getAdjustedMinReturn(minReturn, extraSlippageBPS) {\n        if ((0, utils_1.isEthereumChain)(this._chainId))\n            throw new Error(\"Method not available for current chain.\");\n        const gelatoFee = ethers_1.BigNumber.from(this._gelatoFeeBPS);\n        const slippage = extraSlippageBPS\n            ? ethers_1.BigNumber.from(extraSlippageBPS)\n            : ethers_1.BigNumber.from(this._slippageBPS);\n        const fees = gelatoFee.add(slippage);\n        const adjustedMinReturn = ethers_1.BigNumber.from(minReturn)\n            .mul(10000)\n            .div(ethers_1.BigNumber.from(10000).sub(fees));\n        return adjustedMinReturn.toString();\n    }\n    getExecutionPrice(inputAmount, inputDecimals, outputAmount, outputDecimals, isInverted = false) {\n        const factor = ethers_1.BigNumber.from(10).pow(ethers_1.BigNumber.from(isInverted ? outputDecimals : inputDecimals));\n        if (isInverted) {\n            return ethers_1.BigNumber.from(inputAmount)\n                .mul(factor)\n                .div(outputAmount)\n                .toString();\n        }\n        else {\n            return ethers_1.BigNumber.from(outputAmount)\n                .mul(factor)\n                .div(inputAmount)\n                .toString();\n        }\n    }\n    _getKey(order) {\n        return ethers_1.utils.keccak256(this._abiEncoder.encode([\"address\", \"address\", \"address\", \"address\", \"bytes\"], [order.module, order.inputToken, order.owner, order.witness, order.data]));\n    }\n    _encodeSubmitData(inputToken, outputToken, owner, witness, amount, maxReturn, minReturn, secret, checkAllowance) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error(\"No provider\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            if (inputToken.toLowerCase() === outputToken.toLowerCase())\n                throw new Error(\"Input token and output token can not be equal\");\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturn]);\n            let data, value, to;\n            if ((0, utils_1.isNetworkGasToken)(inputToken)) {\n                const encodedEthOrder = yield this.contract.encodeEthOrder(this.moduleAddress, constants_1.ETH_ADDRESS, // we also use ETH_ADDRESS if it's MATIC\n                owner, witness, encodedData, secret);\n                data = this.contract.interface.encodeFunctionData(\"depositEth\", [\n                    encodedEthOrder,\n                ]);\n                value = amount;\n                to = this.contract.address;\n            }\n            else {\n                if (checkAllowance) {\n                    const allowance = yield types_1.ERC20__factory.connect(inputToken, this.provider).allowance(owner, this.erc20OrderRouter.address);\n                    if (allowance.lt(amount))\n                        throw new Error(\"Insufficient token allowance for placing order\");\n                }\n                data = this.erc20OrderRouter.interface.encodeFunctionData(\"depositToken\", [\n                    amount,\n                    this.moduleAddress,\n                    inputToken,\n                    owner,\n                    witness,\n                    encodedData,\n                    secret,\n                ]);\n                value = ethers_1.constants.Zero;\n                to = this.erc20OrderRouter.address;\n            }\n            return { data, value, to };\n        });\n    }\n}\nexports.GelatoBase = GelatoBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GelatoStopLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nconst ethers_1 = require(\"ethers\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"./core\");\nconst stoplimit_1 = require(\"../utils/queries/stoplimit\");\nclass GelatoStopLimitOrders extends core_1.GelatoBase {\n    constructor(chainId, signerOrProvider, handler) {\n        var _a;\n        if (handler && !(0, core_1.isValidChainIdAndHandler)(chainId, handler)) {\n            throw new Error(\"Invalid chainId and handler\");\n        }\n        const sotplossHandlers = constants_1.NETWORK_STOP_LIMIT_HANDLERS[chainId];\n        if (!handler) {\n            throw new Error(\"No Handler defined\");\n        }\n        if (handler && !sotplossHandlers.includes(handler)) {\n            throw new Error(\"Handler not supported\");\n        }\n        const moduleAddress = constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId];\n        if (!moduleAddress)\n            throw new Error(\"Invalid chainId and handler\");\n        const handlerAddress = (_a = constants_1.HANDLERS_ADDRESSES[chainId][handler]) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        super(chainId, moduleAddress, signerOrProvider, handler, handlerAddress);\n    }\n    submitStopLimitOrder(inputToken, outputToken, inputAmount, maxReturn, checkAllowance = true, overrides) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!this.signer)\n                throw new Error(\"No signer\");\n            if (!maxReturn)\n                throw new Error(\"No StopLimit defined\");\n            const owner = yield this.signer.getAddress();\n            const txData = yield this.encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return this.signer.sendTransaction(Object.assign(Object.assign({}, overrides), { to: txData.to, data: txData.data, value: ethers_1.BigNumber.from(txData.value) }));\n        });\n    }\n    encodeStopLimitOrderSubmission(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance = true) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const { payload } = yield this.encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturn, owner, checkAllowance);\n            return payload;\n        });\n    }\n    encodeStopLimitOrderSubmissionWithSecret(inputToken, outputToken, inputAmount, maxReturnToBeParsed, owner, checkAllowance = true) {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            if (!maxReturnToBeParsed)\n                throw new Error(\"No StopLimit defined\");\n            if (!this.handlerAddress)\n                throw new Error(\"No handlerAddress\");\n            const randomSecret = ethers_1.utils.hexlify(ethers_1.utils.randomBytes(19)).replace(\"0x\", \"\");\n            // 0x67656c61746f6e6574776f726b = gelatonetwork in hex\n            const fullSecret = `0x67656c61746f6e6574776f726b${randomSecret}`;\n            const { privateKey: secret, address: witness } = new ethers_1.Wallet(fullSecret);\n            const { minReturn } = this.getFeeAndSlippageAdjustedMinReturn(maxReturnToBeParsed);\n            const payload = yield this._encodeSubmitData(inputToken, outputToken, owner, witness, inputAmount, maxReturnToBeParsed, minReturn, secret, checkAllowance);\n            const encodedData = this.abiEncoder.encode([\"address\", \"uint256\", \"address\", \"uint256\"], [outputToken, minReturn, this.handlerAddress, maxReturnToBeParsed]);\n            return {\n                payload,\n                secret,\n                witness,\n                order: {\n                    id: this._getKey({\n                        module: this.moduleAddress,\n                        inputToken,\n                        owner,\n                        witness,\n                        data: encodedData,\n                    }),\n                    module: this.moduleAddress.toLowerCase(),\n                    data: encodedData,\n                    inputToken: inputToken.toLowerCase(),\n                    outputToken: outputToken.toLowerCase(),\n                    owner: owner.toLowerCase(),\n                    witness: witness.toLowerCase(),\n                    inputAmount: inputAmount.toString(),\n                    minReturn: minReturn.toString(),\n                    maxReturn: maxReturnToBeParsed.toString(),\n                    adjustedMinReturn: maxReturnToBeParsed.toString(),\n                    inputData: payload.data.toString(),\n                    secret: secret.toLowerCase(),\n                    handler: (_a = this.handlerAddress) !== null && _a !== void 0 ? _a : null,\n                },\n            };\n        });\n    }\n    getOpenStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getExecutedStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitExecutedOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getCancelledStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryStopLimitCancelledOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n    getPastStopLimitOrders(owner) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n            const orders = yield (0, stoplimit_1.queryPastOrders)(owner, this.chainId);\n            return orders;\n        });\n    }\n}\nexports.GelatoStopLimitOrders = GelatoStopLimitOrders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEthereumChain = exports.isTransactionCostDependentChain = exports.isNetworkGasToken = exports.queries = void 0;\nconst tslib_1 = require(\"tslib\");\nconst constants_1 = require(\"../constants\");\nexports.queries = (0, tslib_1.__importStar)(require(\"./queries/constants\"));\nconst isNetworkGasToken = (token) => {\n    if (token.toLowerCase() === constants_1.ETH_ADDRESS.toLowerCase()) {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.isNetworkGasToken = isNetworkGasToken;\nconst isTransactionCostDependentChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        case 56:\n            return true;\n        case 250:\n            return true;\n        case 43114:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isTransactionCostDependentChain = isTransactionCostDependentChain;\nconst isEthereumChain = (chainId) => {\n    switch (chainId) {\n        case 1:\n            return true;\n        case 3:\n            return true;\n        case 5:\n            return true;\n        default:\n            return false;\n    }\n};\nexports.isEthereumChain = isEthereumChain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = exports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = exports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = exports.GET_ALL_PAST_ORDERS_BY_OWNER = exports.GET_ALL_OPEN_ORDERS_BY_OWNER = exports.GET_ALL_ORDERS_BY_OWNER = exports.GET_ORDER_BY_ID = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nexports.GET_ORDER_BY_ID = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($id: String) {\n    orders(where: { id: $id }) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_OPEN_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOpenOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_PAST_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getPastOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status_not: open }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_EXECUTED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getExecutedOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: executed }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_CANCELLED_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getCancelledOrdersByOwner($owner: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, status: cancelled }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\nexports.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER = (0, graphql_request_1.gql) `\n  query getOrdersByOwner($owner: String, $module: String) {\n    orders(\n      first: 1000\n      orderBy: updatedAtBlock\n      orderDirection: desc\n      where: { owner: $owner, module: $module }\n    ) {\n      id\n      owner\n      inputToken\n      outputToken\n      minReturn\n      maxReturn\n      module\n      witness\n      secret\n      inputAmount\n      vault\n      bought\n      auxData\n      status\n      createdTxHash\n      executedTxHash\n      cancelledTxHash\n      blockNumber\n      createdAt\n      updatedAt\n      updatedAtBlock\n      updatedAtBlockHash\n      data\n      inputData\n      handler\n    }\n  }\n`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.queryCancelledOrders = exports.queryExecutedOrders = exports.queryPastOrders = exports.queryOpenOrders = exports.queryOrders = exports.queryOrder = void 0;\nconst tslib_1 = require(\"tslib\");\nconst graphql_request_1 = require(\"graphql-request\");\nconst constants_1 = require(\"../../constants\");\nconst constants_2 = require(\"./constants\");\nconst stopLimitModule = (chainId) => constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase();\nconst queryOrder = (orderId, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    var _a;\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ORDER_BY_ID, {\n                id: orderId.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return (_a = _getUniqueOrdersWithExpiry(allOrders, chainId).pop()) !== null && _a !== void 0 ? _a : null;\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrder = queryOrder;\nconst queryOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId);\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryOrders = queryOrders;\nconst queryOpenOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenOrders = queryOpenOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst queryExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryExecutedOrders = queryExecutedOrders;\nconst queryCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataFromOldSubgraph = constants_1.OLD_SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.OLD_SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const dataFromNewSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n            })\n            : { orders: [] };\n        const allOrders = [\n            ...dataFromOldSubgraph.orders,\n            ...dataFromNewSubgraph.orders,\n        ];\n        return _getUniqueOrdersWithExpiry(allOrders, chainId).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryCancelledOrders = queryCancelledOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders, chainId) => \n// create Map and asign order id to order (key:value) to avoid having duplicated orders form multiple subgraphs\n[...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // filter out stop limit module\n    .filter((order) => order.module !== stopLimitModule(chainId))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._getUniqueOrdersWithExpiry = exports.queryPastOrders = exports.queryStopLimitCancelledOrders = exports.queryStopLimitExecutedOrders = exports.queryOpenStopLimitOrders = exports.queryStopLimitOrders = void 0;\nconst tslib_1 = require(\"tslib\");\nconst graphql_request_1 = require(\"graphql-request\");\nconst constants_1 = require(\"../../constants\");\nconst constants_2 = require(\"./constants\");\nconst queryStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders);\n    }\n    catch (error) {\n        console.error(error);\n        throw new Error(\"Could not query subgraph for all orders\");\n    }\n});\nexports.queryStopLimitOrders = queryStopLimitOrders;\nconst queryOpenStopLimitOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for open orders\");\n    }\n});\nexports.queryOpenStopLimitOrders = queryOpenStopLimitOrders;\nconst queryStopLimitExecutedOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"executed\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for executed orders\");\n    }\n});\nexports.queryStopLimitExecutedOrders = queryStopLimitExecutedOrders;\nconst queryStopLimitCancelledOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status === \"cancelled\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for cancelled orders\");\n    }\n});\nexports.queryStopLimitCancelledOrders = queryStopLimitCancelledOrders;\nconst queryPastOrders = (owner, chainId) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {\n    try {\n        const dataStopLimitSubgraph = constants_1.SUBGRAPH_URL[chainId]\n            ? yield (0, graphql_request_1.request)(constants_1.SUBGRAPH_URL[chainId], constants_2.GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER, {\n                owner: owner.toLowerCase(),\n                module: constants_1.GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS[chainId].toLowerCase(),\n            })\n            : { orders: [] };\n        const orders = dataStopLimitSubgraph.orders;\n        return (0, exports._getUniqueOrdersWithExpiry)(orders).filter((order) => order.status !== \"open\");\n    }\n    catch (error) {\n        throw new Error(\"Could not query subgraph for past orders\");\n    }\n});\nexports.queryPastOrders = queryPastOrders;\nconst _getUniqueOrdersWithExpiry = (allOrders) => [...new Map(allOrders.map((order) => [order.id, order])).values()]\n    // sort by `updatedAt` asc so that the most recent one will be used\n    .sort((a, b) => parseFloat(a.updatedAt) - parseFloat(b.updatedAt))\n    // add expiry to order obj\n    .map((order) => {\n    const isExpired = Date.now() >\n        (parseInt(order.createdAt) + constants_1.MAX_LIFETIME_IN_SECONDS) * 1000;\n    return Object.assign(Object.assign({}, order), { isExpired });\n});\nexports._getUniqueOrdersWithExpiry = _getUniqueOrdersWithExpiry;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extract_files_1 = require(\"extract-files\");\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n    return extract_files_1.isExtractableFile(value) ||\n        (value !== null && typeof value === 'object' && typeof value.pipe === 'function');\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables, operationName) {\n    var _a = extract_files_1.extractFiles({ query: query, variables: variables, operationName: operationName }, '', isExtractableFileEnhanced), clone = _a.clone, files = _a.files;\n    if (files.size === 0) {\n        if (!Array.isArray(query)) {\n            return JSON.stringify(clone);\n        }\n        if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n            throw new Error('Cannot create request body with given variable type, array expected');\n        }\n        // Batch support\n        var payload = query.reduce(function (accu, currentQuery, index) {\n            accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n            return accu;\n        }, []);\n        return JSON.stringify(payload);\n    }\n    var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n    var form = new Form();\n    form.append('operations', JSON.stringify(clone));\n    var map = {};\n    var i = 0;\n    files.forEach(function (paths) {\n        map[++i] = paths;\n    });\n    form.append('map', JSON.stringify(map));\n    i = 0;\n    files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file);\n    });\n    return form;\n}\nexports.default = createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_1.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nvar queryCleanner = function (str) { return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim(); };\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nvar buildGetQueryParams = function (_a) {\n    var query = _a.query, variables = _a.variables, operationName = _a.operationName;\n    if (!Array.isArray(query)) {\n        var search = [\"query=\" + encodeURIComponent(queryCleanner(query))];\n        if (variables) {\n            search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n        }\n        if (operationName) {\n            search.push(\"operationName=\" + encodeURIComponent(operationName));\n        }\n        return search.join('&');\n    }\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n        throw new Error('Cannot create query with given variable type, array expected');\n    }\n    // Batch support\n    var payload = query.reduce(function (accu, currentQuery, index) {\n        accu.push({\n            query: queryCleanner(currentQuery),\n            variables: variables ? JSON.stringify(variables[index]) : undefined,\n        });\n        return accu;\n    }, []);\n    return \"query=\" + encodeURIComponent(JSON.stringify(payload));\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var body;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    body = createRequestBody_1.default(query, variables, operationName);\n                    return [4 /*yield*/, fetch(url, __assign({ method: 'POST', headers: __assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), headers), body: body }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var queryParams;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    queryParams = buildGetQueryParams({\n                        query: query,\n                        variables: variables,\n                        operationName: operationName,\n                    });\n                    return [4 /*yield*/, fetch(url + \"?\" + queryParams, __assign({ method: 'GET', headers: headers }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        var _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n        var url = this.url;\n        return makeRequest({\n            url: url,\n            query: query,\n            variables: variables,\n            headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n            operationName: undefined,\n            fetch: fetch,\n            method: method,\n            fetchOptions: fetchOptions,\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: query,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: operationName,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_e.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        queries = documents.map(function (_a) {\n                            var document = _a.document;\n                            return resolveRequestDocument(document).query;\n                        });\n                        variables = documents.map(function (_a) {\n                            var variables = _a.variables;\n                            return variables;\n                        });\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: queries,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: undefined,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_d.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    GraphQLClient.prototype.setEndpoint = function (value) {\n        this.url = value;\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, headers = _a.headers, operationName = _a.operationName, fetch = _a.fetch, _b = _a.method, method = _b === void 0 ? 'POST' : _b, fetchOptions = _a.fetchOptions;\n    return __awaiter(this, void 0, void 0, function () {\n        var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    fetcher = method.toUpperCase() === 'POST' ? post : get;\n                    isBathchingQuery = Array.isArray(query);\n                    return [4 /*yield*/, fetcher({\n                            url: url,\n                            query: query,\n                            variables: variables,\n                            operationName: operationName,\n                            headers: headers,\n                            fetch: fetch,\n                            fetchOptions: fetchOptions,\n                        })];\n                case 1:\n                    response = _c.sent();\n                    return [4 /*yield*/, getResult(response)];\n                case 2:\n                    result = _c.sent();\n                    successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n                        var data = _a.data;\n                        return !data;\n                    }) : !!result.data;\n                    if (response.ok && !result.errors && successfullyReceivedData) {\n                        headers_1 = response.headers, status_1 = response.status;\n                        return [2 /*return*/, __assign(__assign({}, (isBathchingQuery ? { data: result } : result)), { headers: headers_1, status: status_1 })];\n                    }\n                    else {\n                        errorResult = typeof result === 'string' ? { error: result } : result;\n                        throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables, requestHeaders)];\n        });\n    });\n}\nexports.request = request;\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nfunction batchRequests(url, documents, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.batchRequests(documents, requestHeaders)];\n        });\n    });\n}\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    var _a;\n    if (typeof document === 'string')\n        return { query: document };\n    var operationName = undefined;\n    var operationDefinitions = document.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; });\n    if (operationDefinitions.length === 1) {\n        operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    return { query: printer_1.print(document), operationName: operationName };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientError = void 0;\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n            response: response,\n            request: request,\n        });\n        _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ClientError.prototype);\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"random/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","export const version = \"json-wallets/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.5.0\";\n//# sourceMappingURL=_version.js.map","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.5.2\";\n//# sourceMappingURL=_version.js.map","export const version = \"providers/5.5.3\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result) {\n    try {\n        return toUtf8String(_parseBytes(result));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                return _parseBytes(yield this.provider.call(tx));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [{ type: \"name\", content: this.name }];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    const scheme = match[1].toLowerCase();\n                    switch (scheme) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: getIpfsLink(avatar) };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: scheme, content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (scheme === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (scheme === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx));\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (scheme === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                                linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                            }\n                            // Transform IPFS metadata links\n                            if (metadataUrl.match(/^ipfs:/i)) {\n                                metadataUrl = getIpfsLink(metadataUrl);\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            if (!metadata) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            // Pull the image URL out\n                            let imageUrl = metadata.image;\n                            if (typeof (imageUrl) !== \"string\") {\n                                return null;\n                            }\n                            if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                                // Allow\n                            }\n                            else {\n                                // Transform IPFS link to gateway\n                                const ipfs = imageUrl.match(matcherIpfs);\n                                if (ipfs == null) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                                imageUrl = getIpfsLink(imageUrl);\n                            }\n                            linkage.push({ type: \"url\", content: imageUrl });\n                            return { linkage, url: imageUrl };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(reverseName);\n                if (!resolverAddress) {\n                    return null;\n                }\n                resolver = new Resolver(this, resolverAddress, \"_\", address);\n            }\n            else {\n                // ENS name; forward lookup\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.5.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n"],"names":["Object","defineProperty","exports","value","GELATO_STOP_LIMIT_ORDERS_MODULE_ADDRESS","GENERIC_GAS_LIMIT_ORDER_EXECUTION","NATIVE_WRAPPED_TOKEN_ADDRESS","NATIVE_TOKEN_NAME","NATIVE_WRAPPED_TOKEN_TICKER","NATIVE_TOKEN_TICKER","GELATO_LIMIT_ORDERS_ERC20_ORDER_ROUTER","GELATO_LIMIT_ORDERS_MODULE_FLASHBOTS_ADDRESS","GELATO_LIMIT_ORDERS_MODULE_ADDRESS","GELATO_LIMIT_ORDERS_ADDRESS","SUBGRAPH_URL","OLD_SUBGRAPH_URL","NETWORK_STOP_LIMIT_HANDLERS","NETWORK_HANDLERS","NETWORK_NAME","HANDLERS_ADDRESSES","LIMIT_ORDER_SLIPPAGE","STOP_LIMIT_SLIPPAGE_BPS","BPS_GELATO_FEE","CHAIN_ID","MAX_LIFETIME_IN_SECONDS","SLIPPAGE_BPS","ETH_ADDRESS","MAINNET","ROPSTEN","GOERLI","BSC","MATIC","FANTOM","AVAX","ERC20OrderRouter__factory","ethers_1","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","static","utils","Interface","address","signerOrProvider","Contract","abi","ERC20__factory","constant","payable","GelatoLimitOrders__factory","Multicall__factory","components","ERC20__factory_1","enumerable","get","ERC20OrderRouter__factory_1","GelatoLimitOrders__factory_1","Multicall__factory_1","constants","isEthereumChain","GelatoStopLimitOrders","isValidChainIdAndHandler","GelatoLimitOrders","tslib_1","limit_orders_1","stoplimit_orders_1","utils_1","__exportStar","__importStar","isFlashbotsCompatibleChainId","abstract_provider_1","abstract_signer_1","constants_1","types_1","queries_1","chainId","handler","includes","constructor","isFlashbotsProtected","_a","Error","this","_chainId","_gelatoFeeBPS","_slippageBPS","_subgraphUrl","_signer","Signer","isSigner","undefined","_provider","Provider","isProvider","provider","_gelatoLimitOrders","connect","createInterface","_moduleAddress","_handler","_handlerAddress","toLowerCase","_isFlashbotsProtected","_abiEncoder","AbiCoder","_erc20OrderRouter","gelatoFeeBPS","slippageBPS","signer","subgraphUrl","handlerAddress","moduleAddress","contract","erc20OrderRouter","encodeLimitOrderSubmission","inputToken","outputToken","inputAmount","minReturn","owner","checkAllowance","__awaiter","payload","encodeLimitOrderSubmissionWithSecret","minReturnToBeParsed","fullSecret","hexlify","randomBytes","replace","privateKey","secret","witness","Wallet","getFeeAndSlippageAdjustedMinReturn","_encodeSubmitData","encodedData","encode","order","id","_getKey","module","data","toString","adjustedMinReturn","inputData","submitLimitOrder","overrides","getAddress","txData","sendTransaction","assign","to","BigNumber","from","encodeLimitOrderCancellation","checkIsActiveOrder","isActiveOrder","interface","encodeFunctionData","Zero","cancelLimitOrder","_order","subgraphOrder","Promise","race","getOrder","resolve","setTimeout","then","status","cancelledTxHash","executedTxHash","error","cancelOrder","gasLimit","approveTokenAmount","amount","approve","existOrder","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","div","outputAmount","extraSlippageBPS","Number","isInteger","gelatoFee","gte","slippage","sub","getAdjustedMinReturn","fees","add","getExecutionPrice","isInverted","orderId","queryOrder","getOrders","includeOrdersWithNullHandler","queryOrders","map","filter","getOpenOrders","queryOpenOrders","getPastOrders","queryPastOrders","getExecutedOrders","queryExecutedOrders","getCancelledOrders","queryCancelledOrders","keccak256","isNetworkGasToken","encodedEthOrder","encodeEthOrder","allowance","lt","GelatoBase","isETHOrWETH","tokenAddress","chainID","WETH_ADDRESS","_gelatoCore","abiEncoder","cancelStopLimitOrder","maxReturn","core_1","stoplimit_1","sotplossHandlers","super","submitStopLimitOrder","encodeStopLimitOrderSubmission","encodeStopLimitOrderSubmissionWithSecret","maxReturnToBeParsed","getOpenStopLimitOrders","queryStopLimitOrders","getStopLimitOrders","getExecutedStopLimitOrders","queryStopLimitExecutedOrders","getCancelledStopLimitOrders","queryStopLimitCancelledOrders","getPastStopLimitOrders","isTransactionCostDependentChain","queries","token","GET_ALL_STOP_LIMIT_ORDERS_BY_OWNER","GET_ALL_CANCELLED_ORDERS_BY_OWNER","GET_ALL_EXECUTED_ORDERS_BY_OWNER","GET_ALL_PAST_ORDERS_BY_OWNER","GET_ALL_OPEN_ORDERS_BY_OWNER","GET_ALL_ORDERS_BY_OWNER","GET_ORDER_BY_ID","graphql_request_1","gql","constants_2","dataFromOldSubgraph","request","orders","dataFromNewSubgraph","allOrders","_getUniqueOrdersWithExpiry","pop","Map","values","sort","a","b","parseFloat","updatedAt","stopLimitModule","isExpired","Date","now","parseInt","createdAt","queryOpenStopLimitOrders","console","__importDefault","mod","__esModule","extract_files_1","form_data_1","isExtractableFileEnhanced","isExtractableFile","pipe","query","variables","operationName","extractFiles","clone","files","size","Array","isArray","JSON","stringify","reduce","accu","currentQuery","index","push","form","FormData","default","append","i","forEach","paths","file","__assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","__setModuleDefault","v","result","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","op","TypeError","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","batchRequests","rawRequest","GraphQLClient","ClientError","cross_fetch_1","CrossFetch","printer_1","createRequestBody_1","resolveHeaders","headers","oHeaders","Headers","HeadersInstanceToPlainObject","queryCleanner","str","trim","post","url","fetch","fetchOptions","_b","method","queryParams","search","encodeURIComponent","join","buildGetQueryParams","options","requestHeaders","_c","makeRequest","document","_d","_e","resolveRequestDocument","documents","setHeaders","setHeader","key","setEndpoint","fetcher","isBathchingQuery","response","successfullyReceivedData","headers_1","status_1","errorResult","toUpperCase","getResult","some","ok","errors","contentType","startsWith","json","text","operationDefinitions","definitions","definition","kind","print","chunks","_i","accumulator","chunk","__extends","extendStatics","d","setPrototypeOf","__proto__","String","__","_super","_this","message","extractMessage","captureStackTrace","root","checkInt","checkInts","arrayish","coerceArray","arg","copy","buffer","ArrayBuffer","isView","slice","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","encodeURI","c","charCodeAt","substr","fromBytes","bytes","fromCharCode","convertHex","Hex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","r","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","hex","utf8","padding","pkcs7","pad","padder","strip","_arrayTest","hashMessage","pbkdf2","password","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","T","U","Math","ceil","destPos","len","logger","Wordlist","locale","checkAbstract","split","mnemonic","words","wordlist","word","getWord","getWordIndex","lang","loadWords","substring","check","langEn","register","wordlists","en","N","MasterSecret","HardenedBit","getUpperMask","bits","bytes32","base58check","sha2","getWordlist","throwArgumentError","_constructorGuard","defaultPath","HDNode","constructorGuard","publicKey","parentFingerprint","chainCode","depth","mnemonicOrPath","checkNew","signingKey","compressedPublicKey","path","extendedKey","neuter","_derive","I","IL","IR","ki","Ki","_addPoint","srcMnemonic","freeze","phrase","fingerprint","derivePath","shift","component","match","seed","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","checkNormalize","entropy","offset","normalize","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","checksum","isValidMnemonic","getAccountPath","anyGlobal","self","window","getGlobal","crypto","msCrypto","getRandomValues","warn","throwError","operation","looseArrayify","hexString","zpad","getPassword","searchPath","object","currentChild","comps","matchingChild","uuidV4","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","parse","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","seedHexBytes","isCrowdsaleWallet","isKeystoreWallet","version","getJsonWalletAddress","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_getAccount","aesCtr","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","code","argument","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","prf","decryptJsonWallet","scrypt","decryptJsonWalletSync","curve","_mnemonic","_signingKey","signTransaction","transaction","tx","signature","signDigest","signMessage","_signTypedData","domain","types","populated","resolveName","client","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipher","cipherparams","kdfparams","dklen","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","extraEntropy","verifyMessage","verifyTypedData","EtherSymbol","ethDefaultProvider","network","func","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","defaultProvider","Formatter","formats","getDefaultFormats","bind","bigNumber","blockTag","hash","number","accessList","allowNull","blockHash","blockNumber","transactionIndex","confirmations","gasPrice","maxPriorityFeePerGas","maxFeePerGas","nonce","uint256","creates","raw","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","baseFeePerGas","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","boolean","allowFalsish","toNumber","strict","callAddress","_block","format","author","_difficulty","gas","isZero","input","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","array","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","log","checkTopic","topic","serializeTopics","unique","sorted","keys","getEventTag","eventName","ForkEvent","getTime","stall","duration","PollableEvents","Event","tag","listener","once","event","pollable","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","toHexString","base58Encode","matcherIpfs","RegExp","matchers","_parseString","_parseBytes","getIpfsLink","link","Resolver","resolvedAddress","formatter","_fetchBytes","selector","parameters","namehash","_getAddress","coinType","hexBytes","coinInfo","unshift","getAvatar","linkage","content","avatar","getText","scheme","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","getContentHash","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","catch","_ready","knownNetwork","emit","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","ready","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","poll","pollId","runners","pollingInterval","abs","makeError","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","getLogs","all","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","getBlockNumber","waitForTransaction","timeout","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","on","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","getTransactionCount","mined","getTransaction","getBlockWithTransactions","ti","reason","eq","cancelled","replacement","_wrapTransaction","timer","unref","clearTimeout","getGasPrice","getBalance","addressOrName","params","_getBlockTag","getCode","getStorageAt","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","estimateGas","_getBlock","blockHashOrBlockTag","includeTransactions","blockWithTxs","oncePoll","getBlock","getEtherPrice","getResolver","_getResolver","resolver","lookupAddress","reverseName","resolverAddress","nameOrAddress","_startEvent","_stopEvent","_addEventListener","args","stopped","eventTag","listenerCount","listeners","off","removeAllListeners","found","errorGas","checkError","responseText","getLowerCase","JsonRpcSigner","addressOrIndex","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","sender","hexlifyTransaction","_legacySignMessage","unlock","allowedTransactionKeys","networkOrReady","_nextId","_cache","_eventLoopCache","_uncachedDetectNetwork","serverError","getSigner","getUncheckedSigner","listAccounts","jsonrpc","action","cache","connection","prepareRequest","feeData","getFeeData","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","callback","_subs","subscription","processFunc","fauxPoll","_detectNetwork","rid","_subscribe","param","subIdPromise","_subIds","subId","emitReceipt","destroy","readyState","onerror","close","StaticJsonRpcProvider","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","allowGzip","throttleCallback","attempt","getTransactionPostData","maxFeePerGs","storageKeys","throttleRetry","getJsonResult","checkLogTag","getBaseUrl","getUrl","accum","baseUrl","getPostUrl","getPostData","apikey","procFunc","throttleSlotInterval","payloadStr","txhash","postData","topic0","blocks","ethusd","getHistory","endBlock","startblock","endblock","item","timeStamp","shuffled","floor","random","tmp","checkNetworks","median","maxDelta","middle","serialize","nextRid","cancel","promise","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","start","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","getRunner","currentBlockNumber","providerConfigs","configOrProvider","stallTimeout","priority","total","results","first","t0","inflightWeight","staller","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","projectSecret","apiKeyObj","assertArgument","user","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","Web3Provider","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","regexBytes","regexNumber","regexArray","_pack","toTwos","byteLength","baseType","pack","tight","sha256","_ethers","MAX_VALUE","SHA256","K","Uint32Array","h0","h1","h2","h3","h4","h5","h6","h7","w","u","t1","t2","h","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","inner","outerKey","dk","incrementCounter","concat","blockmix_salsa8","BY","Yi","x","_X","arraycopy","blockxor","salsa20_8","R","B","D","src","srcPos","dest","checkBufferish","ensureInteger","_scrypt","XY","V","totalOps","i1","Bi","currentOp","lastPercent10","stop","state","i0","limit","nextTick","setImmediate","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt","for","_typeof","obj","inspect","formatValue","seenValues","previouslySeenValues","customInspectFn","getCustomFn","customValue","min","remaining","items","formatArray","getObjectTag","properties","formatObject","formatObjectValue","defineInspect","classObject","fn","toJSON","condition","Boolean","invariant","isNode","maybeNode","Location","startToken","endToken","source","end","Token","line","column","prev","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","getVisitFn","visitor","isLeaving","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","ast","visitorKeys","stack","inArray","edits","parent","ancestors","newRoot","isEdited","_i2","_Object$keys2","editOffset","ii","editKey","editValue","splice","_visitorKeys$node$kin","visitFn","visit","printDocASTReducer","varDefs","wrap","variableDefinitions","directives","selectionSet","_ref","variable","defaultValue","_ref2","selections","_ref3","alias","argsLine","indent","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","printBlockString","_ref11","_ref12","_ref13","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline"],"sourceRoot":""}